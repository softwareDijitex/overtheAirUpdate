{"ast":null,"code":"var _jsxFileName = \"/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n\n  // Set up axios interceptor to include token in all requests\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(config => {\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Cleanup interceptor on unmount\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5002/api/customers/login\", {\n        email,\n        password\n      });\n      if (response.data.token) {\n        setToken(response.data.token);\n        setUser(response.data);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: \"Login failed\"\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\"\n      };\n    }\n  };\n  const adminLogin = async (email, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:5002/api/customers/admin/login\", {\n        email,\n        password\n      });\n      if (response.data.token) {\n        setToken(response.data.token);\n        setUser(response.data);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: \"Admin login failed\"\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Admin login error:\", error);\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Admin login failed\"\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post(\"http://localhost:5002/api/customers/register\", userData);\n      if (response.data.token) {\n        setToken(response.data.token);\n        setUser(response.data);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: \"Registration failed\"\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Registration error:\", error);\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Registration failed\"\n      };\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n  };\n  const value = {\n    token,\n    user,\n    login,\n    adminLogin,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"lTc4oKMP/OVEHM3fW8W5olMCd7E=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","token","setToken","user","setUser","interceptor","interceptors","request","use","config","headers","Authorization","error","Promise","reject","eject","login","email","password","response","post","data","success","_error$response","_error$response$data","console","message","adminLogin","_error$response2","_error$response2$data","register","userData","_error$response3","_error$response3$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n\n  // Set up axios interceptor to include token in all requests\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(\n      (config) => {\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n\n    // Cleanup interceptor on unmount\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, [token]);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:5002/api/customers/login\",\n        {\n          email,\n          password,\n        }\n      );\n\n      if (response.data.token) {\n        setToken(response.data.token);\n        setUser(response.data);\n        return { success: true };\n      } else {\n        return { success: false, error: \"Login failed\" };\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        error: error.response?.data?.message || \"Login failed\",\n      };\n    }\n  };\n\n  const adminLogin = async (email, password) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:5002/api/customers/admin/login\",\n        {\n          email,\n          password,\n        }\n      );\n\n      if (response.data.token) {\n        setToken(response.data.token);\n        setUser(response.data);\n        return { success: true };\n      } else {\n        return { success: false, error: \"Admin login failed\" };\n      }\n    } catch (error) {\n      console.error(\"Admin login error:\", error);\n      return {\n        success: false,\n        error: error.response?.data?.message || \"Admin login failed\",\n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:5002/api/customers/register\",\n        userData\n      );\n\n      if (response.data.token) {\n        setToken(response.data.token);\n        setUser(response.data);\n        return { success: true };\n      } else {\n        return { success: false, error: \"Registration failed\" };\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      return {\n        success: false,\n        error: error.response?.data?.message || \"Registration failed\",\n      };\n    }\n  };\n\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n  };\n\n  const value = {\n    token,\n    user,\n    login,\n    adminLogin,\n    register,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}