{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useAuth}from\"../contexts/AuthContext\";import axios from\"axios\";import{Card,Button,Form,Table,Alert,Modal,Badge,Row,Col,Container,Nav,Tab,Spinner}from\"react-bootstrap\";import{HddNetwork,FileText,Upload,Download,Eye,Trash,Plus,Person}from\"react-bootstrap-icons\";import MachineManagement from\"./MachineManagement\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AdminDashboard=()=>{const{user}=useAuth();const[customers,setCustomers]=useState([]);const[activeTab,setActiveTab]=useState(\"customers\");const[selectedCustomer,setSelectedCustomer]=useState(null);const[selectedMachine,setSelectedMachine]=useState(null);const[machines,setMachines]=useState([]);const[files,setFiles]=useState([]);const[selectedFile,setSelectedFile]=useState(null);const[versionNumber,setVersionNumber]=useState(\"\");const[uploading,setUploading]=useState(false);const[loading,setLoading]=useState(true);const[error,setError]=useState(\"\");const[success,setSuccess]=useState(\"\");const[showVersionsModal,setShowVersionsModal]=useState(false);const[selectedFileVersions,setSelectedFileVersions]=useState([]);const[selectedFileName,setSelectedFileName]=useState(\"\");// File upload state for admin\nconst[selectedCustomerForUpload,setSelectedCustomerForUpload]=useState(\"\");const[selectedMachineForUpload,setSelectedMachineForUpload]=useState(\"\");useEffect(()=>{fetchCustomers();},[]);useEffect(()=>{if(success){const timer=setTimeout(()=>setSuccess(\"\"),3000);return()=>clearTimeout(timer);}},[success]);const fetchCustomers=async()=>{try{setLoading(true);const response=await axios.get(\"/api/customers/\");setCustomers(response.data);}catch(error){setError(\"Failed to fetch customers\");console.error(\"Error fetching customers:\",error);}finally{setLoading(false);}};const fetchCustomerMachines=async customerId=>{try{const response=await axios.get(\"/api/machines/admin/customer/\".concat(customerId));setMachines(response.data.machines||[]);}catch(error){setError(\"Failed to fetch customer machines\");console.error(\"Error fetching machines:\",error);}};const fetchMachineFiles=async(customerId,machineId)=>{try{// Use admin-specific endpoint for file listing\nconst response=await axios.get(\"/api/files/admin/machine/\".concat(customerId,\"/\").concat(machineId));setFiles(response.data.files||[]);}catch(error){setError(\"Failed to fetch files\");console.error(\"Error fetching files:\",error);}};const handleCustomerSelect=async customer=>{setSelectedCustomer(customer);await fetchCustomerMachines(customer.customer_id);setSelectedMachine(null);setFiles([]);// Automatically switch to machines tab\nsetActiveTab(\"machines\");};const handleMachineSelect=machine=>{setSelectedMachine(machine);fetchMachineFiles(selectedCustomer.customer_id,machine.id);// Automatically switch to files tab\nsetActiveTab(\"files\");};const handleFileSelect=e=>{const file=e.target.files[0];if(file){if(file.size>2*1024*1024){// 2MB limit\nsetError(\"File size must be less than 2MB\");setSelectedFile(null);return;}setSelectedFile(file);setError(\"\");// Auto-suggest next version number if file with same name exists\nconst existingFile=files.find(f=>f.filename===file.name);if(existingFile){// Try to increment the latest version\nconst latestVersion=existingFile.version;try{// If it's a number, increment it\nconst numVersion=parseFloat(latestVersion);if(!isNaN(numVersion)){setVersionNumber((numVersion+1).toString());}else{// If it's a string, append a number\nsetVersionNumber(latestVersion+\"_1\");}}catch(_unused){setVersionNumber(latestVersion+\"_1\");}}else{setVersionNumber(\"1\");}}};const handleUpload=async e=>{e.preventDefault();if(!selectedFile){setError(\"Please select a file\");return;}if(!selectedMachine){setError(\"Please select a machine\");return;}if(!versionNumber||versionNumber.trim()===\"\"){setError(\"Please enter a version number\");return;}const version=versionNumber.trim();await performUpload(selectedFile,version);};const performUpload=async(file,version)=>{setUploading(true);setError(\"\");setSuccess(\"\");const formData=new FormData();formData.append(\"file\",file);formData.append(\"version\",version);formData.append(\"customer_id\",selectedCustomer.customer_id);formData.append(\"machine_id\",selectedMachine.id);try{await axios.post(\"/api/files/admin/upload\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});setSuccess(\"File uploaded successfully!\");setSelectedFile(null);setVersionNumber(\"\");// Reset the file input\nconst fileInput=document.querySelector('input[type=\"file\"]');if(fileInput){fileInput.value=\"\";}fetchMachineFiles(selectedCustomer.customer_id,selectedMachine.id);}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||\"Upload failed\";setError(errorMessage);// If the error is about version already existing, suggest a new version\nif(errorMessage.includes(\"already exists\")&&errorMessage.includes(\"version\")){// Try to suggest next version\ntry{const numVersion=parseFloat(version);if(!isNaN(numVersion)){setVersionNumber((numVersion+1).toString());}else{setVersionNumber(version+\"_1\");}}catch(_unused2){setVersionNumber(version+\"_1\");}}}finally{setUploading(false);}};const handleDownload=async(filename,version)=>{try{const response=await axios.get(\"/api/files/admin/download/\".concat(selectedCustomer.customer_id,\"/\").concat(selectedMachine.id,\"/\").concat(filename,\"/\").concat(version),{responseType:\"blob\"});const url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement(\"a\");link.href=url;link.setAttribute(\"download\",filename);document.body.appendChild(link);link.click();link.remove();}catch(error){setError(\"Download failed\");}};const handleViewVersions=async filename=>{try{const response=await axios.get(\"/api/files/admin/versions/\".concat(selectedCustomer.customer_id,\"/\").concat(selectedMachine.id,\"/\").concat(filename));setSelectedFileVersions(response.data.versions||[]);setSelectedFileName(filename);setShowVersionsModal(true);}catch(error){setError(\"Failed to fetch versions\");}};const handleDeleteFile=async(filename,version)=>{if(!window.confirm(\"Are you sure you want to delete \".concat(filename,\" version \").concat(version,\"?\"))){return;}try{await axios.delete(\"/api/files/admin/delete/\".concat(selectedCustomer.customer_id,\"/\").concat(selectedMachine.id,\"/\").concat(filename,\"/\").concat(version));setSuccess(\"File deleted successfully\");fetchMachineFiles(selectedCustomer.customer_id,selectedMachine.id);}catch(error){setError(\"Failed to delete file\");}};const formatFileSize=bytes=>{if(bytes===0)return\"0 Bytes\";const k=1024;const sizes=[\"Bytes\",\"KB\",\"MB\",\"GB\"];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+\" \"+sizes[i];};const formatDate=dateString=>{return new Date(dateString).toLocaleString();};if(loading){return/*#__PURE__*/_jsx(Container,{className:\"text-center mt-4\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})});}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mb-4\",children:\"Admin Dashboard\"}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",onClose:()=>setError(\"\"),dismissible:true,children:error}),success&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",onClose:()=>setSuccess(\"\"),dismissible:true,children:success}),/*#__PURE__*/_jsx(Tab.Container,{activeKey:activeTab,onSelect:k=>setActiveTab(k),children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsxs(Nav,{variant:\"tabs\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{eventKey:\"customers\",children:[/*#__PURE__*/_jsx(Person,{className:\"me-2\"}),\"Customers (\",customers.length,\")\"]})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{eventKey:\"machines\",disabled:!selectedCustomer,children:[/*#__PURE__*/_jsx(HddNetwork,{className:\"me-2\"}),\"Machines\",selectedCustomer&&/*#__PURE__*/_jsx(Badge,{bg:\"secondary\",className:\"ms-2\",children:selectedCustomer.name})]})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{eventKey:\"files\",disabled:!selectedMachine,children:[/*#__PURE__*/_jsx(FileText,{className:\"me-2\"}),\"Files\",selectedMachine&&/*#__PURE__*/_jsx(Badge,{bg:\"secondary\",className:\"ms-2\",children:selectedMachine.name})]})})]}),/*#__PURE__*/_jsxs(Tab.Content,{children:[/*#__PURE__*/_jsx(Tab.Pane,{eventKey:\"customers\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Customer Management\"})}),/*#__PURE__*/_jsx(Card.Body,{children:customers.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"No customers registered yet.\"}):/*#__PURE__*/_jsxs(Table,{responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Phone\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Address\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Registered\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:customers.map((customer,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:customer.name}),/*#__PURE__*/_jsx(\"td\",{children:customer.email}),/*#__PURE__*/_jsx(\"td\",{children:customer.phone}),/*#__PURE__*/_jsx(\"td\",{children:customer.address}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(customer.created_at)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(Button,{variant:\"outline-primary\",size:\"sm\",onClick:()=>handleCustomerSelect(customer),title:\"View Customer Machines\",children:[/*#__PURE__*/_jsx(HddNetwork,{className:\"me-1\"}),\"View Machines\"]})})]},index))})]})})]})}),/*#__PURE__*/_jsx(Tab.Pane,{eventKey:\"machines\",children:!selectedCustomer?/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{className:\"text-center\",children:[/*#__PURE__*/_jsx(HddNetwork,{size:48,className:\"text-muted mb-3\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"No Customer Selected\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"Please select a customer from the Customers tab to view their machines.\"})]})}):/*#__PURE__*/_jsx(MachineManagement,{customerId:selectedCustomer.customer_id,isAdmin:true,onMachineSelect:handleMachineSelect,selectedMachine:selectedMachine})}),/*#__PURE__*/_jsx(Tab.Pane,{eventKey:\"files\",children:!selectedMachine?/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{className:\"text-center\",children:[/*#__PURE__*/_jsx(FileText,{size:48,className:\"text-muted mb-3\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"No Machine Selected\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"Please select a machine from the Machines tab to manage its files.\"})]})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{children:[/*#__PURE__*/_jsx(Upload,{className:\"me-2\"}),\"Upload New File to \",selectedMachine.name]})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleUpload,children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Select File (Max 2MB) *\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",onChange:handleFileSelect,accept:\"*/*\",required:true})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Version Number *\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter version (e.g., 1, 1.1, beta, etc.)\",value:versionNumber,onChange:e=>setVersionNumber(e.target.value),required:true}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"Enter any version identifier (numbers, decimals, or text)\"})]})})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",disabled:uploading||!selectedFile||!versionNumber.trim(),children:uploading?\"Uploading...\":\"Upload File\"})]})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{children:[/*#__PURE__*/_jsx(FileText,{className:\"me-2\"}),\"Files for \",selectedMachine.name]})}),/*#__PURE__*/_jsx(Card.Body,{children:files.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"No files uploaded to this machine yet.\"}):/*#__PURE__*/_jsxs(Table,{responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Filename\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Latest Version\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Versions\"}),/*#__PURE__*/_jsx(\"th\",{children:\"File Size\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Uploaded\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:files.map((file,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:file.filename}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(Badge,{bg:\"primary\",children:[\"v\",file.version]})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:\"info\",children:file.total_versions})}),/*#__PURE__*/_jsx(\"td\",{children:formatFileSize(file.file_size)}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(file.uploaded_at)}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline-primary\",size:\"sm\",className:\"me-1\",onClick:()=>handleDownload(file.filename,file.version),children:[/*#__PURE__*/_jsx(Download,{className:\"me-1\"}),\"Download\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline-secondary\",size:\"sm\",className:\"me-1\",onClick:()=>handleViewVersions(file.filename),children:[/*#__PURE__*/_jsx(Eye,{className:\"me-1\"}),\"Versions\"]})]})]},index))})]})})]})]})})]})]})})}),/*#__PURE__*/_jsxs(Modal,{show:showVersionsModal,onHide:()=>setShowVersionsModal(false),size:\"lg\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[\"File Versions - \",selectedFileName]})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Table,{responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Version\"}),/*#__PURE__*/_jsx(\"th\",{children:\"File Size\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Uploaded\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:selectedFileVersions.map((version,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(Badge,{bg:\"primary\",children:[\"v\",version.version]})}),/*#__PURE__*/_jsx(\"td\",{children:formatFileSize(version.file_size)}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(version.uploaded_at)}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline-primary\",size:\"sm\",className:\"me-1\",onClick:()=>handleDownload(selectedFileName,version.version),children:[/*#__PURE__*/_jsx(Download,{className:\"me-1\"}),\"Download\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline-danger\",size:\"sm\",onClick:()=>handleDeleteFile(selectedFileName,version.version),children:[/*#__PURE__*/_jsx(Trash,{className:\"me-1\"}),\"Delete\"]})]})]},index))})]})})]})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","useAuth","axios","Card","Button","Form","Table","Alert","Modal","Badge","Row","Col","Container","Nav","Tab","Spinner","HddNetwork","FileText","Upload","Download","Eye","Trash","Plus","Person","MachineManagement","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminDashboard","user","customers","setCustomers","activeTab","setActiveTab","selectedCustomer","setSelectedCustomer","selectedMachine","setSelectedMachine","machines","setMachines","files","setFiles","selectedFile","setSelectedFile","versionNumber","setVersionNumber","uploading","setUploading","loading","setLoading","error","setError","success","setSuccess","showVersionsModal","setShowVersionsModal","selectedFileVersions","setSelectedFileVersions","selectedFileName","setSelectedFileName","selectedCustomerForUpload","setSelectedCustomerForUpload","selectedMachineForUpload","setSelectedMachineForUpload","fetchCustomers","timer","setTimeout","clearTimeout","response","get","data","console","fetchCustomerMachines","customerId","concat","fetchMachineFiles","machineId","handleCustomerSelect","customer","customer_id","handleMachineSelect","machine","id","handleFileSelect","e","file","target","size","existingFile","find","f","filename","name","latestVersion","version","numVersion","parseFloat","isNaN","toString","_unused","handleUpload","preventDefault","trim","performUpload","formData","FormData","append","post","headers","fileInput","document","querySelector","value","_error$response","_error$response$data","errorMessage","includes","_unused2","handleDownload","responseType","url","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","remove","handleViewVersions","versions","handleDeleteFile","confirm","delete","formatFileSize","bytes","k","sizes","i","Math","floor","log","pow","toFixed","formatDate","dateString","Date","toLocaleString","className","children","animation","role","variant","onClose","dismissible","activeKey","onSelect","Item","Link","eventKey","length","disabled","bg","Content","Pane","Header","Body","responsive","map","index","email","phone","address","created_at","onClick","title","isAdmin","onMachineSelect","onSubmit","md","Group","Label","Control","type","onChange","accept","required","placeholder","Text","total_versions","file_size","uploaded_at","show","onHide","closeButton","Title"],"sources":["/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\nimport {\n  Card,\n  Button,\n  Form,\n  Table,\n  Alert,\n  Modal,\n  Badge,\n  Row,\n  Col,\n  Container,\n  Nav,\n  Tab,\n  Spinner,\n} from \"react-bootstrap\";\nimport {\n  HddNetwork,\n  FileText,\n  Upload,\n  Download,\n  Eye,\n  Trash,\n  Plus,\n  Person,\n} from \"react-bootstrap-icons\";\nimport MachineManagement from \"./MachineManagement\";\n\nconst AdminDashboard = () => {\n  const { user } = useAuth();\n  const [customers, setCustomers] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"customers\");\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [selectedMachine, setSelectedMachine] = useState(null);\n  const [machines, setMachines] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [versionNumber, setVersionNumber] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [showVersionsModal, setShowVersionsModal] = useState(false);\n  const [selectedFileVersions, setSelectedFileVersions] = useState([]);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n\n  // File upload state for admin\n  const [selectedCustomerForUpload, setSelectedCustomerForUpload] =\n    useState(\"\");\n  const [selectedMachineForUpload, setSelectedMachineForUpload] = useState(\"\");\n\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => setSuccess(\"\"), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n\n  const fetchCustomers = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"/api/customers/\");\n      setCustomers(response.data);\n    } catch (error) {\n      setError(\"Failed to fetch customers\");\n      console.error(\"Error fetching customers:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCustomerMachines = async (customerId) => {\n    try {\n      const response = await axios.get(\n        `/api/machines/admin/customer/${customerId}`\n      );\n      setMachines(response.data.machines || []);\n    } catch (error) {\n      setError(\"Failed to fetch customer machines\");\n      console.error(\"Error fetching machines:\", error);\n    }\n  };\n\n  const fetchMachineFiles = async (customerId, machineId) => {\n    try {\n      // Use admin-specific endpoint for file listing\n      const response = await axios.get(\n        `/api/files/admin/machine/${customerId}/${machineId}`\n      );\n      setFiles(response.data.files || []);\n    } catch (error) {\n      setError(\"Failed to fetch files\");\n      console.error(\"Error fetching files:\", error);\n    }\n  };\n\n  const handleCustomerSelect = async (customer) => {\n    setSelectedCustomer(customer);\n    await fetchCustomerMachines(customer.customer_id);\n    setSelectedMachine(null);\n    setFiles([]);\n    // Automatically switch to machines tab\n    setActiveTab(\"machines\");\n  };\n\n  const handleMachineSelect = (machine) => {\n    setSelectedMachine(machine);\n    fetchMachineFiles(selectedCustomer.customer_id, machine.id);\n    // Automatically switch to files tab\n    setActiveTab(\"files\");\n  };\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n\n      // Auto-suggest next version number if file with same name exists\n      const existingFile = files.find((f) => f.filename === file.name);\n      if (existingFile) {\n        // Try to increment the latest version\n        const latestVersion = existingFile.version;\n        try {\n          // If it's a number, increment it\n          const numVersion = parseFloat(latestVersion);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            // If it's a string, append a number\n            setVersionNumber(latestVersion + \"_1\");\n          }\n        } catch {\n          setVersionNumber(latestVersion + \"_1\");\n        }\n      } else {\n        setVersionNumber(\"1\");\n      }\n    }\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n\n    if (!selectedMachine) {\n      setError(\"Please select a machine\");\n      return;\n    }\n\n    if (!versionNumber || versionNumber.trim() === \"\") {\n      setError(\"Please enter a version number\");\n      return;\n    }\n\n    const version = versionNumber.trim();\n    await performUpload(selectedFile, version);\n  };\n\n  const performUpload = async (file, version) => {\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"version\", version);\n    formData.append(\"customer_id\", selectedCustomer.customer_id);\n    formData.append(\"machine_id\", selectedMachine.id);\n\n    try {\n      await axios.post(`/api/files/admin/upload`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      setVersionNumber(\"\");\n      // Reset the file input\n      const fileInput = document.querySelector('input[type=\"file\"]');\n      if (fileInput) {\n        fileInput.value = \"\";\n      }\n      fetchMachineFiles(selectedCustomer.customer_id, selectedMachine.id);\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || \"Upload failed\";\n      setError(errorMessage);\n\n      // If the error is about version already existing, suggest a new version\n      if (\n        errorMessage.includes(\"already exists\") &&\n        errorMessage.includes(\"version\")\n      ) {\n        // Try to suggest next version\n        try {\n          const numVersion = parseFloat(version);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            setVersionNumber(version + \"_1\");\n          }\n        } catch {\n          setVersionNumber(version + \"_1\");\n        }\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleDownload = async (filename, version) => {\n    try {\n      const response = await axios.get(\n        `/api/files/admin/download/${selectedCustomer.customer_id}/${selectedMachine.id}/${filename}/${version}`,\n        { responseType: \"blob\" }\n      );\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", filename);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n\n  const handleViewVersions = async (filename) => {\n    try {\n      const response = await axios.get(\n        `/api/files/admin/versions/${selectedCustomer.customer_id}/${selectedMachine.id}/${filename}`\n      );\n      setSelectedFileVersions(response.data.versions || []);\n      setSelectedFileName(filename);\n      setShowVersionsModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch versions\");\n    }\n  };\n\n  const handleDeleteFile = async (filename, version) => {\n    if (\n      !window.confirm(\n        `Are you sure you want to delete ${filename} version ${version}?`\n      )\n    ) {\n      return;\n    }\n\n    try {\n      await axios.delete(\n        `/api/files/admin/delete/${selectedCustomer.customer_id}/${selectedMachine.id}/${filename}/${version}`\n      );\n      setSuccess(\"File deleted successfully\");\n      fetchMachineFiles(selectedCustomer.customer_id, selectedMachine.id);\n    } catch (error) {\n      setError(\"Failed to delete file\");\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  if (loading) {\n    return (\n      <Container className=\"text-center mt-4\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <h2 className=\"mb-4\">Admin Dashboard</h2>\n\n      {error && (\n        <Alert variant=\"danger\" onClose={() => setError(\"\")} dismissible>\n          {error}\n        </Alert>\n      )}\n      {success && (\n        <Alert variant=\"success\" onClose={() => setSuccess(\"\")} dismissible>\n          {success}\n        </Alert>\n      )}\n\n      <Tab.Container activeKey={activeTab} onSelect={(k) => setActiveTab(k)}>\n        <Row>\n          <Col>\n            <Nav variant=\"tabs\" className=\"mb-3\">\n              <Nav.Item>\n                <Nav.Link eventKey=\"customers\">\n                  <Person className=\"me-2\" />\n                  Customers ({customers.length})\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"machines\" disabled={!selectedCustomer}>\n                  <HddNetwork className=\"me-2\" />\n                  Machines\n                  {selectedCustomer && (\n                    <Badge bg=\"secondary\" className=\"ms-2\">\n                      {selectedCustomer.name}\n                    </Badge>\n                  )}\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"files\" disabled={!selectedMachine}>\n                  <FileText className=\"me-2\" />\n                  Files\n                  {selectedMachine && (\n                    <Badge bg=\"secondary\" className=\"ms-2\">\n                      {selectedMachine.name}\n                    </Badge>\n                  )}\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n\n            <Tab.Content>\n              <Tab.Pane eventKey=\"customers\">\n                <Card>\n                  <Card.Header>\n                    <h5>Customer Management</h5>\n                  </Card.Header>\n                  <Card.Body>\n                    {customers.length === 0 ? (\n                      <p className=\"text-muted\">No customers registered yet.</p>\n                    ) : (\n                      <Table responsive>\n                        <thead>\n                          <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Phone</th>\n                            <th>Address</th>\n                            <th>Registered</th>\n                            <th>Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {customers.map((customer, index) => (\n                            <tr key={index}>\n                              <td>{customer.name}</td>\n                              <td>{customer.email}</td>\n                              <td>{customer.phone}</td>\n                              <td>{customer.address}</td>\n                              <td>{formatDate(customer.created_at)}</td>\n                              <td>\n                                <Button\n                                  variant=\"outline-primary\"\n                                  size=\"sm\"\n                                  onClick={() => handleCustomerSelect(customer)}\n                                  title=\"View Customer Machines\"\n                                >\n                                  <HddNetwork className=\"me-1\" />\n                                  View Machines\n                                </Button>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    )}\n                  </Card.Body>\n                </Card>\n              </Tab.Pane>\n\n              <Tab.Pane eventKey=\"machines\">\n                {!selectedCustomer ? (\n                  <Card>\n                    <Card.Body className=\"text-center\">\n                      <HddNetwork size={48} className=\"text-muted mb-3\" />\n                      <h5>No Customer Selected</h5>\n                      <p className=\"text-muted\">\n                        Please select a customer from the Customers tab to view\n                        their machines.\n                      </p>\n                    </Card.Body>\n                  </Card>\n                ) : (\n                  <MachineManagement\n                    customerId={selectedCustomer.customer_id}\n                    isAdmin={true}\n                    onMachineSelect={handleMachineSelect}\n                    selectedMachine={selectedMachine}\n                  />\n                )}\n              </Tab.Pane>\n\n              <Tab.Pane eventKey=\"files\">\n                {!selectedMachine ? (\n                  <Card>\n                    <Card.Body className=\"text-center\">\n                      <FileText size={48} className=\"text-muted mb-3\" />\n                      <h5>No Machine Selected</h5>\n                      <p className=\"text-muted\">\n                        Please select a machine from the Machines tab to manage\n                        its files.\n                      </p>\n                    </Card.Body>\n                  </Card>\n                ) : (\n                  <>\n                    {/* File Upload Section */}\n                    <Card className=\"mb-4\">\n                      <Card.Header>\n                        <h5>\n                          <Upload className=\"me-2\" />\n                          Upload New File to {selectedMachine.name}\n                        </h5>\n                      </Card.Header>\n                      <Card.Body>\n                        <Form onSubmit={handleUpload}>\n                          <Row>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Select File (Max 2MB) *</Form.Label>\n                                <Form.Control\n                                  type=\"file\"\n                                  onChange={handleFileSelect}\n                                  accept=\"*/*\"\n                                  required\n                                />\n                              </Form.Group>\n                            </Col>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Version Number *</Form.Label>\n                                <Form.Control\n                                  type=\"text\"\n                                  placeholder=\"Enter version (e.g., 1, 1.1, beta, etc.)\"\n                                  value={versionNumber}\n                                  onChange={(e) =>\n                                    setVersionNumber(e.target.value)\n                                  }\n                                  required\n                                />\n                                <Form.Text className=\"text-muted\">\n                                  Enter any version identifier (numbers,\n                                  decimals, or text)\n                                </Form.Text>\n                              </Form.Group>\n                            </Col>\n                          </Row>\n                          <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            disabled={\n                              uploading ||\n                              !selectedFile ||\n                              !versionNumber.trim()\n                            }\n                          >\n                            {uploading ? \"Uploading...\" : \"Upload File\"}\n                          </Button>\n                        </Form>\n                      </Card.Body>\n                    </Card>\n\n                    {/* Files List */}\n                    <Card>\n                      <Card.Header>\n                        <h5>\n                          <FileText className=\"me-2\" />\n                          Files for {selectedMachine.name}\n                        </h5>\n                      </Card.Header>\n                      <Card.Body>\n                        {files.length === 0 ? (\n                          <p className=\"text-muted\">\n                            No files uploaded to this machine yet.\n                          </p>\n                        ) : (\n                          <Table responsive>\n                            <thead>\n                              <tr>\n                                <th>Filename</th>\n                                <th>Latest Version</th>\n                                <th>Total Versions</th>\n                                <th>File Size</th>\n                                <th>Uploaded</th>\n                                <th>Actions</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {files.map((file, index) => (\n                                <tr key={index}>\n                                  <td>{file.filename}</td>\n                                  <td>\n                                    <Badge bg=\"primary\">v{file.version}</Badge>\n                                  </td>\n                                  <td>\n                                    <Badge bg=\"info\">\n                                      {file.total_versions}\n                                    </Badge>\n                                  </td>\n                                  <td>{formatFileSize(file.file_size)}</td>\n                                  <td>{formatDate(file.uploaded_at)}</td>\n                                  <td>\n                                    <Button\n                                      variant=\"outline-primary\"\n                                      size=\"sm\"\n                                      className=\"me-1\"\n                                      onClick={() =>\n                                        handleDownload(\n                                          file.filename,\n                                          file.version\n                                        )\n                                      }\n                                    >\n                                      <Download className=\"me-1\" />\n                                      Download\n                                    </Button>\n                                    <Button\n                                      variant=\"outline-secondary\"\n                                      size=\"sm\"\n                                      className=\"me-1\"\n                                      onClick={() =>\n                                        handleViewVersions(file.filename)\n                                      }\n                                    >\n                                      <Eye className=\"me-1\" />\n                                      Versions\n                                    </Button>\n                                  </td>\n                                </tr>\n                              ))}\n                            </tbody>\n                          </Table>\n                        )}\n                      </Card.Body>\n                    </Card>\n                  </>\n                )}\n              </Tab.Pane>\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n\n      {/* Versions Modal */}\n      <Modal\n        show={showVersionsModal}\n        onHide={() => setShowVersionsModal(false)}\n        size=\"lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>File Versions - {selectedFileName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>Version</th>\n                <th>File Size</th>\n                <th>Uploaded</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {selectedFileVersions.map((version, index) => (\n                <tr key={index}>\n                  <td>\n                    <Badge bg=\"primary\">v{version.version}</Badge>\n                  </td>\n                  <td>{formatFileSize(version.file_size)}</td>\n                  <td>{formatDate(version.uploaded_at)}</td>\n                  <td>\n                    <Button\n                      variant=\"outline-primary\"\n                      size=\"sm\"\n                      className=\"me-1\"\n                      onClick={() =>\n                        handleDownload(selectedFileName, version.version)\n                      }\n                    >\n                      <Download className=\"me-1\" />\n                      Download\n                    </Button>\n                    <Button\n                      variant=\"outline-danger\"\n                      size=\"sm\"\n                      onClick={() =>\n                        handleDeleteFile(selectedFileName, version.version)\n                      }\n                    >\n                      <Trash className=\"me-1\" />\n                      Delete\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}