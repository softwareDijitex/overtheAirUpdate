{"ast":null,"code":"var _jsxFileName = \"/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/MachineManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, Button, Modal, Form, Table, Badge, Alert, Spinner } from \"react-bootstrap\";\nimport { Plus, Pencil, Trash, HddNetwork, FileText, Download, Eye } from \"react-bootstrap-icons\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MachineManagement = ({\n  customerId,\n  isAdmin = false,\n  onMachineSelect,\n  selectedMachine\n}) => {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [editingMachine, setEditingMachine] = useState(null);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    mac_address: \"\",\n    description: \"\"\n  });\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const fetchMachines = async () => {\n    try {\n      setLoading(true);\n      setError(\"\"); // Clear any previous errors\n      const endpoint = isAdmin ? `/api/admin/machines/customer/${customerId}` : `/api/machines/customer/${customerId}`;\n      const response = await axios.get(endpoint);\n      setMachines(response.data.machines || []);\n    } catch (err) {\n      // Only show error for actual API failures (4xx/5xx status codes)\n      if (err.response && err.response.status >= 400) {\n        setError(\"Failed to fetch machines\");\n        console.error(\"Error fetching machines:\", err);\n      } else {\n        // For network errors or other issues, still show error\n        setError(\"Failed to fetch machines\");\n        console.error(\"Error fetching machines:\", err);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchMachines();\n  }, [customerId, isAdmin]);\n  useEffect(() => {\n    if (successMessage) {\n      const timer = setTimeout(() => setSuccessMessage(\"\"), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editingMachine) {\n        // Update existing machine\n        const endpoint = isAdmin ? `/api/machines/admin/${editingMachine.id}` : `/api/machines/customer/${customerId}/${editingMachine.id}`;\n        await axios.put(endpoint, formData);\n        setSuccessMessage(\"Machine updated successfully\");\n      } else {\n        // Create new machine\n        const endpoint = isAdmin ? `/api/machines/admin/` : `/api/machines/customer/${customerId}`;\n        const requestData = isAdmin ? {\n          ...formData,\n          customer_id: customerId\n        } : formData;\n        await axios.post(endpoint, requestData);\n        setSuccessMessage(\"Machine created successfully\");\n      }\n      setShowModal(false);\n      setEditingMachine(null);\n      setFormData({\n        name: \"\",\n        mac_address: \"\",\n        description: \"\"\n      });\n      fetchMachines();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Failed to save machine\");\n      console.error(\"Error saving machine:\", err);\n    }\n  };\n  const handleEdit = machine => {\n    setEditingMachine(machine);\n    setFormData({\n      name: machine.name,\n      mac_address: machine.mac_address,\n      description: machine.description\n    });\n    setShowModal(true);\n  };\n  const handleDelete = async machineId => {\n    if (!window.confirm(\"Are you sure you want to delete this machine?\")) {\n      return;\n    }\n    try {\n      const endpoint = isAdmin ? `/api/machines/admin/${machineId}` : `/api/machines/customer/${customerId}/${machineId}`;\n      await axios.delete(endpoint);\n      setSuccessMessage(\"Machine deleted successfully\");\n\n      // If the deleted machine was selected, clear the selection\n      if (selectedMachine && selectedMachine.id === machineId) {\n        onMachineSelect(null);\n      }\n      fetchMachines();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || \"Failed to delete machine\");\n      console.error(\"Error deleting machine:\", err);\n    }\n  };\n  const handleCreate = () => {\n    setEditingMachine(null);\n    setFormData({\n      name: \"\",\n      mac_address: \"\",\n      description: \"\"\n    });\n    setShowModal(true);\n  };\n  const handleMachineClick = machine => {\n    if (onMachineSelect) {\n      onMachineSelect(machine);\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(HddNetwork, {\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), \"Machine Management\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleCreate,\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            className: \"me-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), \"Add Machine\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      dismissible: true,\n      onClose: () => setError(\"\"),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      dismissible: true,\n      onClose: () => setSuccessMessage(\"\"),\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), machines.length === 0 ? /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(HddNetwork, {\n          size: 48,\n          className: \"text-muted mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"No machines found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: isAdmin ? \"This customer has no machines yet.\" : \"You have no machines yet. Add your first machine to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleCreate,\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            className: \"me-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), \"Add Machine\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: machines.map(machine => /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        xl: 4,\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: `machine-card ${selectedMachine && selectedMachine.machine_id === machine.machine_id ? \"border-primary\" : \"\"}`,\n          style: {\n            cursor: \"pointer\"\n          },\n          onClick: () => handleMachineClick(machine),\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(HddNetwork, {\n                className: \"me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: machine.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: machine.mac_address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [machine.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted mb-2\",\n              children: machine.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: [\"Created: \", formatDate(machine.created_at)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-primary\",\n                size: \"sm\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleEdit(machine);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Pencil, {\n                  className: \"me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this), \"Edit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-danger\",\n                size: \"sm\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDelete(machine.machine_id);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Trash, {\n                  className: \"me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this), \"Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this)\n      }, machine.machine_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: editingMachine ? \"Edit Machine\" : \"Add New Machine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Machine Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: formData.name,\n              onChange: e => setFormData({\n                ...formData,\n                name: e.target.value\n              }),\n              required: true,\n              placeholder: \"Enter machine name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Machine Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              value: formData.machine_type,\n              onChange: e => setFormData({\n                ...formData,\n                machine_type: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select machine type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Server\",\n                children: \"Server\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Workstation\",\n                children: \"Workstation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Laptop\",\n                children: \"Laptop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Embedded\",\n                children: \"Embedded System\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"IoT Device\",\n                children: \"IoT Device\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"MAC Address *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: formData.mac_address,\n              onChange: e => setFormData({\n                ...formData,\n                mac_address: e.target.value\n              }),\n              required: true,\n              placeholder: \"e.g. 00:1A:2B:3C:4D:5E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Must be unique across all customers. Format: XX:XX:XX:XX:XX:XX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              value: formData.description,\n              onChange: e => setFormData({\n                ...formData,\n                description: e.target.value\n              }),\n              placeholder: \"Enter machine description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setShowModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: [editingMachine ? \"Update\" : \"Create\", \" Machine\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(MachineManagement, \"V/9aAtbMf2MbqYChzcYMZ7VyHvE=\");\n_c = MachineManagement;\nexport default MachineManagement;\nvar _c;\n$RefreshReg$(_c, \"MachineManagement\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Modal","Form","Table","Badge","Alert","Spinner","Plus","Pencil","Trash","HddNetwork","FileText","Download","Eye","axios","jsxDEV","_jsxDEV","MachineManagement","customerId","isAdmin","onMachineSelect","selectedMachine","_s","machines","setMachines","loading","setLoading","error","setError","showModal","setShowModal","editingMachine","setEditingMachine","formData","setFormData","name","mac_address","description","successMessage","setSuccessMessage","fetchMachines","endpoint","response","get","data","err","status","console","timer","setTimeout","clearTimeout","handleSubmit","e","preventDefault","id","put","requestData","customer_id","post","_err$response","_err$response$data","handleEdit","machine","handleDelete","machineId","window","confirm","delete","_err$response2","_err$response2$data","handleCreate","handleMachineClick","formatDate","dateString","Date","toLocaleDateString","className","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","xs","variant","onClick","dismissible","onClose","length","Body","size","map","lg","xl","machine_id","style","cursor","Header","bg","created_at","Footer","stopPropagation","show","onHide","closeButton","Title","onSubmit","Group","Label","Control","type","value","onChange","target","required","placeholder","Select","machine_type","Text","as","rows","_c","$RefreshReg$"],"sources":["/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/MachineManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  Modal,\n  Form,\n  Table,\n  Badge,\n  Alert,\n  Spinner,\n} from \"react-bootstrap\";\nimport {\n  Plus,\n  Pencil,\n  Trash,\n  HddNetwork,\n  FileText,\n  Download,\n  Eye,\n} from \"react-bootstrap-icons\";\nimport axios from \"axios\";\n\nconst MachineManagement = ({\n  customerId,\n  isAdmin = false,\n  onMachineSelect,\n  selectedMachine,\n}) => {\n  const [machines, setMachines] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [editingMachine, setEditingMachine] = useState(null);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    mac_address: \"\",\n    description: \"\",\n  });\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const fetchMachines = async () => {\n    try {\n      setLoading(true);\n      setError(\"\"); // Clear any previous errors\n      const endpoint = isAdmin\n        ? `/api/admin/machines/customer/${customerId}`\n        : `/api/machines/customer/${customerId}`;\n\n      const response = await axios.get(endpoint);\n      setMachines(response.data.machines || []);\n    } catch (err) {\n      // Only show error for actual API failures (4xx/5xx status codes)\n      if (err.response && err.response.status >= 400) {\n        setError(\"Failed to fetch machines\");\n        console.error(\"Error fetching machines:\", err);\n      } else {\n        // For network errors or other issues, still show error\n        setError(\"Failed to fetch machines\");\n        console.error(\"Error fetching machines:\", err);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchMachines();\n  }, [customerId, isAdmin]);\n\n  useEffect(() => {\n    if (successMessage) {\n      const timer = setTimeout(() => setSuccessMessage(\"\"), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editingMachine) {\n        // Update existing machine\n        const endpoint = isAdmin\n          ? `/api/machines/admin/${editingMachine.id}`\n          : `/api/machines/customer/${customerId}/${editingMachine.id}`;\n\n        await axios.put(endpoint, formData);\n        setSuccessMessage(\"Machine updated successfully\");\n      } else {\n        // Create new machine\n        const endpoint = isAdmin\n          ? `/api/machines/admin/`\n          : `/api/machines/customer/${customerId}`;\n\n        const requestData = isAdmin\n          ? { ...formData, customer_id: customerId }\n          : formData;\n\n        await axios.post(endpoint, requestData);\n        setSuccessMessage(\"Machine created successfully\");\n      }\n\n      setShowModal(false);\n      setEditingMachine(null);\n      setFormData({ name: \"\", mac_address: \"\", description: \"\" });\n      fetchMachines();\n    } catch (err) {\n      setError(err.response?.data?.error || \"Failed to save machine\");\n      console.error(\"Error saving machine:\", err);\n    }\n  };\n\n  const handleEdit = (machine) => {\n    setEditingMachine(machine);\n    setFormData({\n      name: machine.name,\n      mac_address: machine.mac_address,\n      description: machine.description,\n    });\n    setShowModal(true);\n  };\n\n  const handleDelete = async (machineId) => {\n    if (!window.confirm(\"Are you sure you want to delete this machine?\")) {\n      return;\n    }\n\n    try {\n      const endpoint = isAdmin\n        ? `/api/machines/admin/${machineId}`\n        : `/api/machines/customer/${customerId}/${machineId}`;\n\n      await axios.delete(endpoint);\n      setSuccessMessage(\"Machine deleted successfully\");\n\n      // If the deleted machine was selected, clear the selection\n      if (selectedMachine && selectedMachine.id === machineId) {\n        onMachineSelect(null);\n      }\n\n      fetchMachines();\n    } catch (err) {\n      setError(err.response?.data?.error || \"Failed to delete machine\");\n      console.error(\"Error deleting machine:\", err);\n    }\n  };\n\n  const handleCreate = () => {\n    setEditingMachine(null);\n    setFormData({ name: \"\", mac_address: \"\", description: \"\" });\n    setShowModal(true);\n  };\n\n  const handleMachineClick = (machine) => {\n    if (onMachineSelect) {\n      onMachineSelect(machine);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  if (loading) {\n    return (\n      <Container className=\"text-center mt-4\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Row className=\"mb-3\">\n        <Col>\n          <h2>\n            <HddNetwork className=\"me-2\" />\n            Machine Management\n          </h2>\n        </Col>\n        <Col xs=\"auto\">\n          <Button variant=\"primary\" onClick={handleCreate}>\n            <Plus className=\"me-1\" />\n            Add Machine\n          </Button>\n        </Col>\n      </Row>\n\n      {error && (\n        <Alert variant=\"danger\" dismissible onClose={() => setError(\"\")}>\n          {error}\n        </Alert>\n      )}\n\n      {successMessage && (\n        <Alert\n          variant=\"success\"\n          dismissible\n          onClose={() => setSuccessMessage(\"\")}\n        >\n          {successMessage}\n        </Alert>\n      )}\n\n      {machines.length === 0 ? (\n        <Card>\n          <Card.Body className=\"text-center\">\n            <HddNetwork size={48} className=\"text-muted mb-3\" />\n            <h5>No machines found</h5>\n            <p className=\"text-muted\">\n              {isAdmin\n                ? \"This customer has no machines yet.\"\n                : \"You have no machines yet. Add your first machine to get started.\"}\n            </p>\n            <Button variant=\"primary\" onClick={handleCreate}>\n              <Plus className=\"me-1\" />\n              Add Machine\n            </Button>\n          </Card.Body>\n        </Card>\n      ) : (\n        <Row>\n          {machines.map((machine) => (\n            <Col key={machine.machine_id} lg={6} xl={4} className=\"mb-3\">\n              <Card\n                className={`machine-card ${\n                  selectedMachine &&\n                  selectedMachine.machine_id === machine.machine_id\n                    ? \"border-primary\"\n                    : \"\"\n                }`}\n                style={{ cursor: \"pointer\" }}\n                onClick={() => handleMachineClick(machine)}\n              >\n                <Card.Header className=\"d-flex justify-content-between align-items-center\">\n                  <div>\n                    <HddNetwork className=\"me-2\" />\n                    <strong>{machine.name}</strong>\n                  </div>\n                  <Badge bg=\"secondary\">{machine.mac_address}</Badge>\n                </Card.Header>\n                <Card.Body>\n                  {machine.description && (\n                    <p className=\"text-muted mb-2\">{machine.description}</p>\n                  )}\n                  <small className=\"text-muted\">\n                    Created: {formatDate(machine.created_at)}\n                  </small>\n                </Card.Body>\n                <Card.Footer>\n                  <div className=\"d-flex justify-content-between\">\n                    <Button\n                      variant=\"outline-primary\"\n                      size=\"sm\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleEdit(machine);\n                      }}\n                    >\n                      <Pencil className=\"me-1\" />\n                      Edit\n                    </Button>\n                    <Button\n                      variant=\"outline-danger\"\n                      size=\"sm\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleDelete(machine.machine_id);\n                      }}\n                    >\n                      <Trash className=\"me-1\" />\n                      Delete\n                    </Button>\n                  </div>\n                </Card.Footer>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      )}\n\n      {/* Create/Edit Machine Modal */}\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {editingMachine ? \"Edit Machine\" : \"Add New Machine\"}\n          </Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={handleSubmit}>\n          <Modal.Body>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Machine Name *</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formData.name}\n                onChange={(e) =>\n                  setFormData({ ...formData, name: e.target.value })\n                }\n                required\n                placeholder=\"Enter machine name\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Machine Type</Form.Label>\n              <Form.Select\n                value={formData.machine_type}\n                onChange={(e) =>\n                  setFormData({ ...formData, machine_type: e.target.value })\n                }\n              >\n                <option value=\"\">Select machine type</option>\n                <option value=\"Server\">Server</option>\n                <option value=\"Workstation\">Workstation</option>\n                <option value=\"Laptop\">Laptop</option>\n                <option value=\"Embedded\">Embedded System</option>\n                <option value=\"IoT Device\">IoT Device</option>\n                <option value=\"Other\">Other</option>\n              </Form.Select>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>MAC Address *</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formData.mac_address}\n                onChange={(e) =>\n                  setFormData({ ...formData, mac_address: e.target.value })\n                }\n                required\n                placeholder=\"e.g. 00:1A:2B:3C:4D:5E\"\n              />\n              <Form.Text className=\"text-muted\">\n                Must be unique across all customers. Format: XX:XX:XX:XX:XX:XX\n              </Form.Text>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                value={formData.description}\n                onChange={(e) =>\n                  setFormData({ ...formData, description: e.target.value })\n                }\n                placeholder=\"Enter machine description\"\n              />\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              {editingMachine ? \"Update\" : \"Create\"} Machine\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default MachineManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}