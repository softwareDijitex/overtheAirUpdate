{"ast":null,"code":"var _jsxFileName = \"/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, Button, Table, Alert, Modal, Badge, Row, Col, Container, Nav, Tab, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"customers\");\n  const [showCustomerModal, setShowCustomerModal] = useState(false);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [selectedCustomerFiles, setSelectedCustomerFiles] = useState([]);\n\n  // File upload state\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [versionNumber, setVersionNumber] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [success, setSuccess] = useState(\"\");\n  const [selectedCustomerForUpload, setSelectedCustomerForUpload] = useState(\"\");\n\n  // Versions modal state\n  const [showVersionsModal, setShowVersionsModal] = useState(false);\n  const [selectedFileVersions, setSelectedFileVersions] = useState([]);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Clear success message after 1 minute or when tab changes\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        setSuccess(\"\");\n      }, 60000); // 1 minute\n\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n\n  // Clear success message when tab changes\n  useEffect(() => {\n    setSuccess(\"\");\n  }, [activeTab]);\n  const fetchData = async () => {\n    try {\n      const customersResponse = await axios.get(\"/api/customers/\");\n      setCustomers(customersResponse.data);\n    } catch (error) {\n      setError(\"Failed to fetch data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewCustomerFiles = async customerId => {\n    try {\n      const response = await axios.get(`/api/files/customer/${customerId}`);\n      setSelectedCustomerFiles(response.data);\n      setSelectedCustomer(customers.find(c => c.customer_id === customerId));\n      setShowCustomerModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch customer files\");\n    }\n  };\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n      setVersionNumber(\"1\");\n    }\n  };\n  const handleAdminUpload = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n    if (!selectedCustomerForUpload) {\n      setError(\"Please select a customer\");\n      return;\n    }\n    if (!versionNumber || versionNumber.trim() === \"\") {\n      setError(\"Please enter a version number\");\n      return;\n    }\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"customer_id\", selectedCustomerForUpload);\n    formData.append(\"version\", versionNumber.trim());\n    try {\n      await axios.post(\"/api/files/admin/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      setVersionNumber(\"\");\n      setSelectedCustomerForUpload(\"\");\n      // Reset the file input\n      const fileInput = document.querySelector('input[type=\"file\"]');\n      if (fileInput) {\n        fileInput.value = \"\";\n      }\n      fetchData();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Upload failed\";\n      setError(errorMessage);\n\n      // If the error is about version already existing, suggest a new version\n      if (errorMessage.includes(\"already exists\") && errorMessage.includes(\"version\")) {\n        // Try to suggest next version\n        try {\n          const numVersion = parseFloat(versionNumber);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            setVersionNumber(versionNumber + \"_1\");\n          }\n        } catch {\n          setVersionNumber(versionNumber + \"_1\");\n        }\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleDownloadFile = async (customerId, filename, version) => {\n    try {\n      const response = await axios.get(`/api/files/download/${customerId}/${filename}/${version}`, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `${filename}_v${version}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n  const handleDeleteFile = async (customerId, filename, version) => {\n    if (!window.confirm(`Are you sure you want to delete ${filename} version ${version}?`)) {\n      return;\n    }\n    try {\n      await axios.delete(`/api/files/admin/delete/${customerId}/${filename}/${version}`);\n      setSuccess(`File ${filename} version ${version} deleted successfully!`);\n\n      // Refresh the customer files\n      if (selectedCustomer) {\n        const response = await axios.get(`/api/files/customer/${customerId}`);\n        setSelectedCustomerFiles(response.data);\n      }\n\n      // Refresh the main data\n      fetchData();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || \"Delete failed\";\n      setError(errorMessage);\n    }\n  };\n  const handleViewVersions = async (customerId, filename) => {\n    try {\n      const response = await axios.get(`/api/files/versions/${customerId}/${filename}`);\n      setSelectedFileVersions(response.data);\n      setSelectedFileName(filename);\n      setShowVersionsModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch file versions\");\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          onClose: () => setError(\"\"),\n          dismissible: true,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          onClose: () => setSuccess(\"\"),\n          dismissible: true,\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n          activeKey: activeTab,\n          onSelect: k => setActiveTab(k),\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Nav, {\n                variant: \"tabs\",\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                    eventKey: \"customers\",\n                    children: [\"Customers (\", customers.length, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                    eventKey: \"upload\",\n                    children: \"Upload File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n                children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n                  eventKey: \"customers\",\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: \"Customer Management\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                      children: customers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-muted\",\n                        children: \"No customers registered yet.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 27\n                      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n                        responsive: true,\n                        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Customer ID\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 295,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Name\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 296,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Email\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 297,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Phone\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 298,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Address\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 299,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Registered\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 300,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Actions\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 301,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 294,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 293,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: customers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                              children: /*#__PURE__*/_jsxDEV(Badge, {\n                                bg: \"secondary\",\n                                children: customer.customer_id\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 308,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 307,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: customer.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 312,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: customer.email\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 313,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: customer.phone\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 314,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: customer.address\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 315,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: formatDate(customer.created_at)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 316,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: /*#__PURE__*/_jsxDEV(Button, {\n                                variant: \"outline-primary\",\n                                size: \"sm\",\n                                onClick: () => handleViewCustomerFiles(customer.customer_id),\n                                children: \"View Files\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 318,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 317,\n                              columnNumber: 35\n                            }, this)]\n                          }, index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 306,\n                            columnNumber: 33\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n                  eventKey: \"upload\",\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: \"Upload File for Customer\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                      children: /*#__PURE__*/_jsxDEV(Form, {\n                        onSubmit: handleAdminUpload,\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            md: 6,\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                children: \"Select Customer *\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 349,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                                value: selectedCustomerForUpload,\n                                onChange: e => setSelectedCustomerForUpload(e.target.value),\n                                required: true,\n                                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"\",\n                                  children: \"Choose a customer...\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 357,\n                                  columnNumber: 35\n                                }, this), customers.map(customer => /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: customer.customer_id,\n                                  children: [customer.name, \" (\", customer.email, \")\"]\n                                }, customer.customer_id, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 359,\n                                  columnNumber: 37\n                                }, this))]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 350,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 348,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 347,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: 6,\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                children: \"Select File (Max 2MB) *\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 371,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                type: \"file\",\n                                onChange: handleFileSelect,\n                                accept: \"*/*\",\n                                required: true\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 372,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 370,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 369,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 346,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            md: 6,\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                children: \"Version Number *\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 384,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                type: \"text\",\n                                placeholder: \"Enter version (e.g., 1, 1.1, beta, etc.)\",\n                                value: versionNumber,\n                                onChange: e => setVersionNumber(e.target.value),\n                                required: true\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 385,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                                className: \"text-muted\",\n                                children: \"Enter any version identifier (numbers, decimals, or text)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 394,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 383,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 382,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 381,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"primary\",\n                          type: \"submit\",\n                          disabled: uploading || !selectedFile || !selectedCustomerForUpload || !versionNumber.trim(),\n                          children: uploading ? \"Uploading...\" : \"Upload File\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 401,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 345,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showCustomerModal,\n      onHide: () => setShowCustomerModal(false),\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Files for \", selectedCustomer === null || selectedCustomer === void 0 ? void 0 : selectedCustomer.name, \" (\", selectedCustomer === null || selectedCustomer === void 0 ? void 0 : selectedCustomer.email, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          size: \"sm\",\n          onClick: () => {\n            setSelectedCustomerForUpload(selectedCustomer === null || selectedCustomer === void 0 ? void 0 : selectedCustomer.customer_id);\n            setActiveTab(\"upload\");\n            setShowCustomerModal(false);\n          },\n          children: \"Upload File for This Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedCustomerFiles.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"No files uploaded by this customer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Filename\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Latest Version\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"File Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Uploaded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: selectedCustomerFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: file.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"primary\",\n                  children: [\"v\", file.latest_version]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatFileSize(file.file_size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(file.uploaded_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  size: \"sm\",\n                  onClick: () => handleDownloadFile(selectedCustomer.customer_id, file.filename, file.latest_version),\n                  children: \"Download Latest\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-danger\",\n                  size: \"sm\",\n                  onClick: () => handleDeleteFile(selectedCustomer.customer_id, file.filename, file.latest_version),\n                  className: \"ms-2\",\n                  children: \"Delete Latest\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"GnW4iShBFXQsZjBnVnzilGznDaE=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","Button","Table","Alert","Modal","Badge","Row","Col","Container","Nav","Tab","Form","jsxDEV","_jsxDEV","AdminDashboard","_s","customers","setCustomers","loading","setLoading","error","setError","activeTab","setActiveTab","showCustomerModal","setShowCustomerModal","selectedCustomer","setSelectedCustomer","selectedCustomerFiles","setSelectedCustomerFiles","selectedFile","setSelectedFile","versionNumber","setVersionNumber","uploading","setUploading","success","setSuccess","selectedCustomerForUpload","setSelectedCustomerForUpload","showVersionsModal","setShowVersionsModal","selectedFileVersions","setSelectedFileVersions","selectedFileName","setSelectedFileName","fetchData","timer","setTimeout","clearTimeout","customersResponse","get","data","handleViewCustomerFiles","customerId","response","find","c","customer_id","handleFileSelect","e","file","target","files","size","handleAdminUpload","preventDefault","trim","formData","FormData","append","post","headers","fileInput","document","querySelector","value","_error$response","_error$response$data","errorMessage","includes","numVersion","parseFloat","isNaN","toString","handleDownloadFile","filename","version","responseType","url","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","remove","handleDeleteFile","confirm","delete","_error$response2","_error$response2$data","handleViewVersions","formatFileSize","bytes","k","sizes","i","Math","floor","log","pow","toFixed","formatDate","dateString","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","variant","onClose","dismissible","activeKey","onSelect","Item","Link","eventKey","length","Content","Pane","Header","Body","responsive","map","customer","index","bg","name","email","phone","address","created_at","onClick","onSubmit","md","Group","Label","Select","onChange","required","Control","type","accept","placeholder","Text","disabled","show","onHide","closeButton","Title","latest_version","file_size","uploaded_at","_c","$RefreshReg$"],"sources":["/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Card,\n  Button,\n  Table,\n  Alert,\n  Modal,\n  Badge,\n  Row,\n  Col,\n  Container,\n  Nav,\n  Tab,\n  Form,\n} from \"react-bootstrap\";\n\nconst AdminDashboard = () => {\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"customers\");\n  const [showCustomerModal, setShowCustomerModal] = useState(false);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [selectedCustomerFiles, setSelectedCustomerFiles] = useState([]);\n\n  // File upload state\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [versionNumber, setVersionNumber] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [success, setSuccess] = useState(\"\");\n  const [selectedCustomerForUpload, setSelectedCustomerForUpload] =\n    useState(\"\");\n\n  // Versions modal state\n  const [showVersionsModal, setShowVersionsModal] = useState(false);\n  const [selectedFileVersions, setSelectedFileVersions] = useState([]);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Clear success message after 1 minute or when tab changes\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        setSuccess(\"\");\n      }, 60000); // 1 minute\n\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n\n  // Clear success message when tab changes\n  useEffect(() => {\n    setSuccess(\"\");\n  }, [activeTab]);\n\n  const fetchData = async () => {\n    try {\n      const customersResponse = await axios.get(\"/api/customers/\");\n      setCustomers(customersResponse.data);\n    } catch (error) {\n      setError(\"Failed to fetch data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleViewCustomerFiles = async (customerId) => {\n    try {\n      const response = await axios.get(`/api/files/customer/${customerId}`);\n      setSelectedCustomerFiles(response.data);\n      setSelectedCustomer(customers.find((c) => c.customer_id === customerId));\n      setShowCustomerModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch customer files\");\n    }\n  };\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n      setVersionNumber(\"1\");\n    }\n  };\n\n  const handleAdminUpload = async (e) => {\n    e.preventDefault();\n\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n\n    if (!selectedCustomerForUpload) {\n      setError(\"Please select a customer\");\n      return;\n    }\n\n    if (!versionNumber || versionNumber.trim() === \"\") {\n      setError(\"Please enter a version number\");\n      return;\n    }\n\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"customer_id\", selectedCustomerForUpload);\n    formData.append(\"version\", versionNumber.trim());\n\n    try {\n      await axios.post(\"/api/files/admin/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      setVersionNumber(\"\");\n      setSelectedCustomerForUpload(\"\");\n      // Reset the file input\n      const fileInput = document.querySelector('input[type=\"file\"]');\n      if (fileInput) {\n        fileInput.value = \"\";\n      }\n      fetchData();\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || \"Upload failed\";\n      setError(errorMessage);\n\n      // If the error is about version already existing, suggest a new version\n      if (\n        errorMessage.includes(\"already exists\") &&\n        errorMessage.includes(\"version\")\n      ) {\n        // Try to suggest next version\n        try {\n          const numVersion = parseFloat(versionNumber);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            setVersionNumber(versionNumber + \"_1\");\n          }\n        } catch {\n          setVersionNumber(versionNumber + \"_1\");\n        }\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleDownloadFile = async (customerId, filename, version) => {\n    try {\n      const response = await axios.get(\n        `/api/files/download/${customerId}/${filename}/${version}`,\n        { responseType: \"blob\" }\n      );\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `${filename}_v${version}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n\n  const handleDeleteFile = async (customerId, filename, version) => {\n    if (\n      !window.confirm(\n        `Are you sure you want to delete ${filename} version ${version}?`\n      )\n    ) {\n      return;\n    }\n\n    try {\n      await axios.delete(\n        `/api/files/admin/delete/${customerId}/${filename}/${version}`\n      );\n\n      setSuccess(`File ${filename} version ${version} deleted successfully!`);\n\n      // Refresh the customer files\n      if (selectedCustomer) {\n        const response = await axios.get(`/api/files/customer/${customerId}`);\n        setSelectedCustomerFiles(response.data);\n      }\n\n      // Refresh the main data\n      fetchData();\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || \"Delete failed\";\n      setError(errorMessage);\n    }\n  };\n\n  const handleViewVersions = async (customerId, filename) => {\n    try {\n      const response = await axios.get(\n        `/api/files/versions/${customerId}/${filename}`\n      );\n      setSelectedFileVersions(response.data);\n      setSelectedFileName(filename);\n      setShowVersionsModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch file versions\");\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  if (loading) {\n    return <div className=\"text-center\">Loading...</div>;\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          <h2 className=\"mb-4\">Admin Dashboard</h2>\n\n          {error && (\n            <Alert variant=\"danger\" onClose={() => setError(\"\")} dismissible>\n              {error}\n            </Alert>\n          )}\n\n          {success && (\n            <Alert variant=\"success\" onClose={() => setSuccess(\"\")} dismissible>\n              {success}\n            </Alert>\n          )}\n\n          <Tab.Container\n            activeKey={activeTab}\n            onSelect={(k) => setActiveTab(k)}\n          >\n            <Row>\n              <Col>\n                <Nav variant=\"tabs\" className=\"mb-4\">\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"customers\">\n                      Customers ({customers.length})\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"upload\">Upload File</Nav.Link>\n                  </Nav.Item>\n                </Nav>\n\n                <Tab.Content>\n                  <Tab.Pane eventKey=\"customers\">\n                    <Card>\n                      <Card.Header>\n                        <h5>Customer Management</h5>\n                      </Card.Header>\n                      <Card.Body>\n                        {customers.length === 0 ? (\n                          <p className=\"text-muted\">\n                            No customers registered yet.\n                          </p>\n                        ) : (\n                          <Table responsive>\n                            <thead>\n                              <tr>\n                                <th>Customer ID</th>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Phone</th>\n                                <th>Address</th>\n                                <th>Registered</th>\n                                <th>Actions</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {customers.map((customer, index) => (\n                                <tr key={index}>\n                                  <td>\n                                    <Badge bg=\"secondary\">\n                                      {customer.customer_id}\n                                    </Badge>\n                                  </td>\n                                  <td>{customer.name}</td>\n                                  <td>{customer.email}</td>\n                                  <td>{customer.phone}</td>\n                                  <td>{customer.address}</td>\n                                  <td>{formatDate(customer.created_at)}</td>\n                                  <td>\n                                    <Button\n                                      variant=\"outline-primary\"\n                                      size=\"sm\"\n                                      onClick={() =>\n                                        handleViewCustomerFiles(\n                                          customer.customer_id\n                                        )\n                                      }\n                                    >\n                                      View Files\n                                    </Button>\n                                  </td>\n                                </tr>\n                              ))}\n                            </tbody>\n                          </Table>\n                        )}\n                      </Card.Body>\n                    </Card>\n                  </Tab.Pane>\n\n                  <Tab.Pane eventKey=\"upload\">\n                    <Card>\n                      <Card.Header>\n                        <h5>Upload File for Customer</h5>\n                      </Card.Header>\n                      <Card.Body>\n                        <Form onSubmit={handleAdminUpload}>\n                          <Row>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Select Customer *</Form.Label>\n                                <Form.Select\n                                  value={selectedCustomerForUpload}\n                                  onChange={(e) =>\n                                    setSelectedCustomerForUpload(e.target.value)\n                                  }\n                                  required\n                                >\n                                  <option value=\"\">Choose a customer...</option>\n                                  {customers.map((customer) => (\n                                    <option\n                                      key={customer.customer_id}\n                                      value={customer.customer_id}\n                                    >\n                                      {customer.name} ({customer.email})\n                                    </option>\n                                  ))}\n                                </Form.Select>\n                              </Form.Group>\n                            </Col>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Select File (Max 2MB) *</Form.Label>\n                                <Form.Control\n                                  type=\"file\"\n                                  onChange={handleFileSelect}\n                                  accept=\"*/*\"\n                                  required\n                                />\n                              </Form.Group>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Version Number *</Form.Label>\n                                <Form.Control\n                                  type=\"text\"\n                                  placeholder=\"Enter version (e.g., 1, 1.1, beta, etc.)\"\n                                  value={versionNumber}\n                                  onChange={(e) =>\n                                    setVersionNumber(e.target.value)\n                                  }\n                                  required\n                                />\n                                <Form.Text className=\"text-muted\">\n                                  Enter any version identifier (numbers,\n                                  decimals, or text)\n                                </Form.Text>\n                              </Form.Group>\n                            </Col>\n                          </Row>\n                          <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            disabled={\n                              uploading ||\n                              !selectedFile ||\n                              !selectedCustomerForUpload ||\n                              !versionNumber.trim()\n                            }\n                          >\n                            {uploading ? \"Uploading...\" : \"Upload File\"}\n                          </Button>\n                        </Form>\n                      </Card.Body>\n                    </Card>\n                  </Tab.Pane>\n                </Tab.Content>\n              </Col>\n            </Row>\n          </Tab.Container>\n        </Col>\n      </Row>\n\n      {/* Customer Files Modal */}\n      <Modal\n        show={showCustomerModal}\n        onHide={() => setShowCustomerModal(false)}\n        size=\"lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Files for {selectedCustomer?.name} ({selectedCustomer?.email})\n          </Modal.Title>\n          <Button\n            variant=\"outline-success\"\n            size=\"sm\"\n            onClick={() => {\n              setSelectedCustomerForUpload(selectedCustomer?.customer_id);\n              setActiveTab(\"upload\");\n              setShowCustomerModal(false);\n            }}\n          >\n            Upload File for This Customer\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          {selectedCustomerFiles.length === 0 ? (\n            <p className=\"text-muted\">No files uploaded by this customer.</p>\n          ) : (\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th>Filename</th>\n                  <th>Latest Version</th>\n                  <th>File Size</th>\n                  <th>Uploaded</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {selectedCustomerFiles.map((file, index) => (\n                  <tr key={index}>\n                    <td>{file.filename}</td>\n                    <td>\n                      <Badge bg=\"primary\">v{file.latest_version}</Badge>\n                    </td>\n                    <td>{formatFileSize(file.file_size)}</td>\n                    <td>{formatDate(file.uploaded_at)}</td>\n                    <td>\n                      <Button\n                        variant=\"outline-primary\"\n                        size=\"sm\"\n                        onClick={() =>\n                          handleDownloadFile(\n                            selectedCustomer.customer_id,\n                            file.filename,\n                            file.latest_version\n                          )\n                        }\n                      >\n                        Download Latest\n                      </Button>\n                      <Button\n                        variant=\"outline-danger\"\n                        size=\"sm\"\n                        onClick={() =>\n                          handleDeleteFile(\n                            selectedCustomer.customer_id,\n                            file.filename,\n                            file.latest_version\n                          )\n                        }\n                        className=\"ms-2\"\n                      >\n                        Delete Latest\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}