{"ast":null,"code":"var _jsxFileName = \"/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, Button, Table, Alert, Modal, Badge, Row, Col, Container, Nav, Tab, Form, Spinner } from \"react-bootstrap\";\nimport { Download, Trash, Eye, Upload, FileEarmark, Person, Gear, HddNetwork, FileText } from \"react-bootstrap-icons\";\nimport MachineManagement from \"./MachineManagement\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"customers\");\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [selectedMachine, setSelectedMachine] = useState(null);\n  const [machines, setMachines] = useState([]);\n  const [files, setFiles] = useState([]);\n\n  // File upload state\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [versionNumber, setVersionNumber] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [success, setSuccess] = useState(\"\");\n  const [selectedCustomerForUpload, setSelectedCustomerForUpload] = useState(\"\");\n  const [selectedMachineForUpload, setSelectedMachineForUpload] = useState(\"\");\n\n  // Versions modal state\n  const [showVersionsModal, setShowVersionsModal] = useState(false);\n  const [selectedFileVersions, setSelectedFileVersions] = useState([]);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Clear success message after 1 minute or when tab changes\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        setSuccess(\"\");\n      }, 60000); // 1 minute\n\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n\n  // Clear success message when tab changes\n  useEffect(() => {\n    setSuccess(\"\");\n  }, [activeTab]);\n  const fetchData = async () => {\n    try {\n      const customersResponse = await axios.get(\"/api/customers/\");\n      setCustomers(customersResponse.data);\n    } catch (error) {\n      setError(\"Failed to fetch data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCustomerMachines = async customerId => {\n    try {\n      const response = await axios.get(`/api/admin/machines/customer/${customerId}`);\n      setMachines(response.data.machines || []);\n    } catch (error) {\n      setError(\"Failed to fetch customer machines\");\n    }\n  };\n  const fetchMachineFiles = async (customerId, machineId) => {\n    try {\n      const response = await axios.get(`/api/files/admin/machine/${customerId}/${machineId}`);\n      setFiles(response.data.files || []);\n    } catch (error) {\n      setError(\"Failed to fetch machine files\");\n    }\n  };\n  const handleViewCustomerMachines = async customerId => {\n    try {\n      await fetchCustomerMachines(customerId);\n      setSelectedCustomer(customers.find(c => c.customer_id === customerId));\n      setSelectedMachine(null);\n      setFiles([]);\n      setActiveTab(\"machines\");\n    } catch (error) {\n      setError(\"Failed to fetch customer machines\");\n    }\n  };\n  const handleMachineSelect = machine => {\n    setSelectedMachine(machine);\n    fetchMachineFiles(selectedCustomer.customer_id, machine.machine_id);\n  };\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n      setVersionNumber(\"1\");\n    }\n  };\n  const handleAdminUpload = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n    if (!selectedCustomerForUpload) {\n      setError(\"Please select a customer\");\n      return;\n    }\n    if (!selectedMachineForUpload) {\n      setError(\"Please select a machine\");\n      return;\n    }\n    if (!versionNumber || versionNumber.trim() === \"\") {\n      setError(\"Please enter a version number\");\n      return;\n    }\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"customer_id\", selectedCustomerForUpload);\n    formData.append(\"machine_id\", selectedMachineForUpload);\n    formData.append(\"version\", versionNumber.trim());\n    try {\n      await axios.post(\"/api/files/admin/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      setVersionNumber(\"\");\n      setSelectedCustomerForUpload(\"\");\n      setSelectedMachineForUpload(\"\");\n      // Reset the file input\n      const fileInput = document.querySelector('input[type=\"file\"]');\n      if (fileInput) {\n        fileInput.value = \"\";\n      }\n      fetchData();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Upload failed\";\n      setError(errorMessage);\n\n      // If the error is about version already existing, suggest a new version\n      if (errorMessage.includes(\"already exists\") && errorMessage.includes(\"version\")) {\n        // Try to suggest next version\n        try {\n          const numVersion = parseFloat(versionNumber);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            setVersionNumber(versionNumber + \"_1\");\n          }\n        } catch {\n          setVersionNumber(versionNumber + \"_1\");\n        }\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleDownloadFile = async (customerId, machineId, filename, version) => {\n    try {\n      const response = await axios.get(`/api/files/admin/download/${customerId}/${machineId}/${filename}/${version}`, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", filename);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n  const handleDeleteFile = async (customerId, machineId, filename, version) => {\n    if (!window.confirm(`Are you sure you want to delete ${filename} version ${version}?`)) {\n      return;\n    }\n    try {\n      await axios.delete(`/api/files/admin/delete/${customerId}/${machineId}/${filename}/${version}`);\n      setSuccess(`File ${filename} version ${version} deleted successfully!`);\n\n      // Refresh the machine files\n      if (selectedMachine) {\n        fetchMachineFiles(customerId, machineId);\n      }\n\n      // Refresh the main data\n      fetchData();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || \"Delete failed\";\n      setError(errorMessage);\n    }\n  };\n  const handleViewVersions = async (customerId, machineId, filename) => {\n    try {\n      const response = await axios.get(`/api/files/admin/versions/${customerId}/${machineId}/${filename}`);\n      setSelectedFileVersions(response.data.versions || []);\n      setSelectedFileName(filename);\n      setShowVersionsModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch file versions\");\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          onClose: () => setError(\"\"),\n          dismissible: true,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          onClose: () => setSuccess(\"\"),\n          dismissible: true,\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n          activeKey: activeTab,\n          onSelect: k => setActiveTab(k),\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Nav, {\n                variant: \"tabs\",\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                    eventKey: \"customers\",\n                    children: [/*#__PURE__*/_jsxDEV(Person, {\n                      className: \"me-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 23\n                    }, this), \"Customers (\", customers.length, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                    eventKey: \"machines\",\n                    disabled: !selectedCustomer,\n                    children: [/*#__PURE__*/_jsxDEV(HddNetwork, {\n                      className: \"me-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 23\n                    }, this), \"Machines\", selectedCustomer && /*#__PURE__*/_jsxDEV(Badge, {\n                      bg: \"secondary\",\n                      className: \"ms-2\",\n                      children: selectedCustomer.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                    eventKey: \"files\",\n                    disabled: !selectedMachine,\n                    children: [/*#__PURE__*/_jsxDEV(FileText, {\n                      className: \"me-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 23\n                    }, this), \"Files\", selectedMachine && /*#__PURE__*/_jsxDEV(Badge, {\n                      bg: \"secondary\",\n                      className: \"ms-2\",\n                      children: selectedMachine.machine_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                    eventKey: \"upload\",\n                    children: [/*#__PURE__*/_jsxDEV(Upload, {\n                      className: \"me-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 23\n                    }, this), \"Upload File\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n                children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n                  eventKey: \"customers\",\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: \"Customer Management\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 360,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                      children: customers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-muted\",\n                        children: \"No customers registered yet.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 364,\n                        columnNumber: 27\n                      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n                        responsive: true,\n                        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Customer ID\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 371,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Name\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 372,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Email\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 373,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Phone\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 374,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Address\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 375,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Registered\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 376,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Actions\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 377,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 370,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 369,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: customers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                              children: /*#__PURE__*/_jsxDEV(Badge, {\n                                bg: \"secondary\",\n                                children: customer.customer_id\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 384,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 383,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: customer.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 388,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: customer.email\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 389,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: customer.phone\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 390,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: customer.address\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 391,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: formatDate(customer.created_at)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 392,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: /*#__PURE__*/_jsxDEV(Button, {\n                                variant: \"outline-primary\",\n                                size: \"sm\",\n                                onClick: () => handleViewCustomerMachines(customer.customer_id),\n                                title: \"View Customer Machines\",\n                                children: [/*#__PURE__*/_jsxDEV(HddNetwork, {\n                                  className: \"me-1\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 404,\n                                  columnNumber: 39\n                                }, this), \"View Machines\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 394,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 393,\n                              columnNumber: 35\n                            }, this)]\n                          }, index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 382,\n                            columnNumber: 33\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 380,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 368,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n                  eventKey: \"machines\",\n                  children: !selectedCustomer ? /*#__PURE__*/_jsxDEV(Card, {\n                    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(HddNetwork, {\n                        size: 48,\n                        className: \"text-muted mb-3\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: \"No Customer Selected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 422,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-muted\",\n                        children: \"Please select a customer from the Customers tab to view their machines.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 423,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(MachineManagement, {\n                    customerId: selectedCustomer.customer_id,\n                    isAdmin: true,\n                    onMachineSelect: handleMachineSelect,\n                    selectedMachine: selectedMachine\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n                  eventKey: \"files\",\n                  children: !selectedMachine ? /*#__PURE__*/_jsxDEV(Card, {\n                    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(FileText, {\n                        size: 48,\n                        className: \"text-muted mb-3\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 442,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: \"No Machine Selected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 443,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-muted\",\n                        children: \"Please select a machine from the Machines tab to view its files.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 444,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: [/*#__PURE__*/_jsxDEV(FileText, {\n                          className: \"me-2\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 453,\n                          columnNumber: 29\n                        }, this), \"Files for \", selectedMachine.machine_name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                      children: files.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-muted\",\n                        children: \"No files uploaded to this machine yet.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 459,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n                        responsive: true,\n                        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Filename\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 464,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Latest Version\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 465,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Total Versions\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 466,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"File Size\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 467,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Uploaded\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 468,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Actions\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 469,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 463,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 462,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                              children: file.filename\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 475,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: /*#__PURE__*/_jsxDEV(Badge, {\n                                bg: \"primary\",\n                                children: [\"v\", file.version]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 477,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 476,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: /*#__PURE__*/_jsxDEV(Badge, {\n                                bg: \"info\",\n                                children: file.total_versions\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 480,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 479,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: formatFileSize(file.file_size)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 482,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: formatDate(file.uploaded_at)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 483,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: [/*#__PURE__*/_jsxDEV(Button, {\n                                variant: \"outline-primary\",\n                                size: \"sm\",\n                                className: \"me-1\",\n                                onClick: () => handleDownloadFile(selectedCustomer.customer_id, selectedMachine.machine_id, file.filename, file.version),\n                                title: \"Download Latest Version\",\n                                children: /*#__PURE__*/_jsxDEV(Download, {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 499,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 485,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                                variant: \"outline-danger\",\n                                size: \"sm\",\n                                className: \"me-1\",\n                                onClick: () => handleDeleteFile(selectedCustomer.customer_id, selectedMachine.machine_id, file.filename, file.version),\n                                title: \"Delete Latest Version\",\n                                children: /*#__PURE__*/_jsxDEV(Trash, {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 515,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 501,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                                variant: \"outline-info\",\n                                size: \"sm\",\n                                onClick: () => handleViewVersions(selectedCustomer.customer_id, selectedMachine.machine_id, file.filename),\n                                title: \"View All Versions\",\n                                children: /*#__PURE__*/_jsxDEV(Eye, {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 529,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 517,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 484,\n                              columnNumber: 37\n                            }, this)]\n                          }, index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 474,\n                            columnNumber: 35\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 472,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 461,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n                  eventKey: \"upload\",\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: \"Upload File for Customer Machine\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 545,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                      children: /*#__PURE__*/_jsxDEV(Form, {\n                        onSubmit: handleAdminUpload,\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            md: 6,\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                children: \"Select Customer *\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 552,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                                value: selectedCustomerForUpload,\n                                onChange: e => {\n                                  setSelectedCustomerForUpload(e.target.value);\n                                  setSelectedMachineForUpload(\"\");\n                                },\n                                required: true,\n                                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"\",\n                                  children: \"Choose a customer...\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 561,\n                                  columnNumber: 35\n                                }, this), customers.map(customer => /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: customer.customer_id,\n                                  children: [customer.name, \" (\", customer.email, \")\"]\n                                }, customer.customer_id, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 563,\n                                  columnNumber: 37\n                                }, this))]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 553,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 551,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 550,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: 6,\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                children: \"Select Machine *\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 575,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                                value: selectedMachineForUpload,\n                                onChange: e => setSelectedMachineForUpload(e.target.value),\n                                required: true,\n                                disabled: !selectedCustomerForUpload,\n                                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"\",\n                                  children: \"Choose a machine...\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 582,\n                                  columnNumber: 35\n                                }, this), selectedCustomerForUpload && machines.map(machine => /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: machine.machine_id,\n                                  children: [machine.machine_name, \" (\", machine.machine_type, \")\"]\n                                }, machine.machine_id, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 584,\n                                  columnNumber: 37\n                                }, this))]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 576,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 574,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 573,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 549,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            md: 6,\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                children: \"Select File (Max 2MB) *\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 598,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                type: \"file\",\n                                onChange: handleFileSelect,\n                                accept: \"*/*\",\n                                required: true\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 599,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 597,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 596,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: 6,\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                children: \"Version Number *\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 609,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                type: \"text\",\n                                placeholder: \"Enter version (e.g., 1, 1.1, beta, etc.)\",\n                                value: versionNumber,\n                                onChange: e => setVersionNumber(e.target.value),\n                                required: true\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 610,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                                className: \"text-muted\",\n                                children: \"Enter any version identifier (numbers, decimals, or text)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 619,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 608,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 607,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 595,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"primary\",\n                          type: \"submit\",\n                          disabled: uploading || !selectedFile || !selectedCustomerForUpload || !selectedMachineForUpload || !versionNumber.trim(),\n                          children: uploading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [/*#__PURE__*/_jsxDEV(Gear, {\n                              className: \"me-2\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 639,\n                              columnNumber: 33\n                            }, this), \"Uploading...\"]\n                          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [/*#__PURE__*/_jsxDEV(Upload, {\n                              className: \"me-2\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 644,\n                              columnNumber: 33\n                            }, this), \"Upload File\"]\n                          }, void 0, true)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 626,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 548,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 547,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showVersionsModal,\n      onHide: () => setShowVersionsModal(false),\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"All Versions of \", selectedFileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedFileVersions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"No versions found for this file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Version\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"File Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Uploaded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: selectedFileVersions.map((file, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"primary\",\n                  children: [\"v\", file.version]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatFileSize(file.file_size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(file.uploaded_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  size: \"sm\",\n                  className: \"me-1\",\n                  onClick: () => handleDownloadFile(selectedCustomer === null || selectedCustomer === void 0 ? void 0 : selectedCustomer.customer_id, selectedMachine === null || selectedMachine === void 0 ? void 0 : selectedMachine.machine_id, file.filename, file.version),\n                  title: \"Download Version\",\n                  children: /*#__PURE__*/_jsxDEV(Download, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 705,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-danger\",\n                  size: \"sm\",\n                  onClick: () => handleDeleteFile(selectedCustomer === null || selectedCustomer === void 0 ? void 0 : selectedCustomer.customer_id, selectedMachine === null || selectedMachine === void 0 ? void 0 : selectedMachine.machine_id, file.filename, file.version),\n                  title: \"Delete Version\",\n                  children: /*#__PURE__*/_jsxDEV(Trash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"NSGluEVgyQG8KX7c5kIaYKsByQk=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","Button","Table","Alert","Modal","Badge","Row","Col","Container","Nav","Tab","Form","Spinner","Download","Trash","Eye","Upload","FileEarmark","Person","Gear","HddNetwork","FileText","MachineManagement","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","customers","setCustomers","loading","setLoading","error","setError","activeTab","setActiveTab","selectedCustomer","setSelectedCustomer","selectedMachine","setSelectedMachine","machines","setMachines","files","setFiles","selectedFile","setSelectedFile","versionNumber","setVersionNumber","uploading","setUploading","success","setSuccess","selectedCustomerForUpload","setSelectedCustomerForUpload","selectedMachineForUpload","setSelectedMachineForUpload","showVersionsModal","setShowVersionsModal","selectedFileVersions","setSelectedFileVersions","selectedFileName","setSelectedFileName","fetchData","timer","setTimeout","clearTimeout","customersResponse","get","data","fetchCustomerMachines","customerId","response","fetchMachineFiles","machineId","handleViewCustomerMachines","find","c","customer_id","handleMachineSelect","machine","machine_id","handleFileSelect","e","file","target","size","handleAdminUpload","preventDefault","trim","formData","FormData","append","post","headers","fileInput","document","querySelector","value","_error$response","_error$response$data","errorMessage","includes","numVersion","parseFloat","isNaN","toString","handleDownloadFile","filename","version","responseType","url","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","remove","handleDeleteFile","confirm","delete","_error$response2","_error$response2$data","handleViewVersions","versions","formatFileSize","bytes","k","sizes","i","Math","floor","log","pow","toFixed","formatDate","dateString","Date","toLocaleString","className","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","fluid","variant","onClose","dismissible","activeKey","onSelect","Item","Link","eventKey","length","disabled","bg","name","machine_name","Content","Pane","Header","Body","responsive","map","customer","index","email","phone","address","created_at","onClick","title","isAdmin","onMachineSelect","total_versions","file_size","uploaded_at","onSubmit","md","Group","Label","Select","onChange","required","machine_type","Control","type","accept","placeholder","Text","show","onHide","closeButton","Title","_c","$RefreshReg$"],"sources":["/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Card,\n  Button,\n  Table,\n  Alert,\n  Modal,\n  Badge,\n  Row,\n  Col,\n  Container,\n  Nav,\n  Tab,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport {\n  Download,\n  Trash,\n  Eye,\n  Upload,\n  FileEarmark,\n  Person,\n  Gear,\n  HddNetwork,\n  FileText,\n} from \"react-bootstrap-icons\";\nimport MachineManagement from \"./MachineManagement\";\n\nconst AdminDashboard = () => {\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"customers\");\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [selectedMachine, setSelectedMachine] = useState(null);\n  const [machines, setMachines] = useState([]);\n  const [files, setFiles] = useState([]);\n\n  // File upload state\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [versionNumber, setVersionNumber] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [success, setSuccess] = useState(\"\");\n  const [selectedCustomerForUpload, setSelectedCustomerForUpload] = useState(\"\");\n  const [selectedMachineForUpload, setSelectedMachineForUpload] = useState(\"\");\n\n  // Versions modal state\n  const [showVersionsModal, setShowVersionsModal] = useState(false);\n  const [selectedFileVersions, setSelectedFileVersions] = useState([]);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Clear success message after 1 minute or when tab changes\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        setSuccess(\"\");\n      }, 60000); // 1 minute\n\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n\n  // Clear success message when tab changes\n  useEffect(() => {\n    setSuccess(\"\");\n  }, [activeTab]);\n\n  const fetchData = async () => {\n    try {\n      const customersResponse = await axios.get(\"/api/customers/\");\n      setCustomers(customersResponse.data);\n    } catch (error) {\n      setError(\"Failed to fetch data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCustomerMachines = async (customerId) => {\n    try {\n      const response = await axios.get(`/api/admin/machines/customer/${customerId}`);\n      setMachines(response.data.machines || []);\n    } catch (error) {\n      setError(\"Failed to fetch customer machines\");\n    }\n  };\n\n  const fetchMachineFiles = async (customerId, machineId) => {\n    try {\n      const response = await axios.get(`/api/files/admin/machine/${customerId}/${machineId}`);\n      setFiles(response.data.files || []);\n    } catch (error) {\n      setError(\"Failed to fetch machine files\");\n    }\n  };\n\n  const handleViewCustomerMachines = async (customerId) => {\n    try {\n      await fetchCustomerMachines(customerId);\n      setSelectedCustomer(customers.find((c) => c.customer_id === customerId));\n      setSelectedMachine(null);\n      setFiles([]);\n      setActiveTab(\"machines\");\n    } catch (error) {\n      setError(\"Failed to fetch customer machines\");\n    }\n  };\n\n  const handleMachineSelect = (machine) => {\n    setSelectedMachine(machine);\n    fetchMachineFiles(selectedCustomer.customer_id, machine.machine_id);\n  };\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n      setVersionNumber(\"1\");\n    }\n  };\n\n  const handleAdminUpload = async (e) => {\n    e.preventDefault();\n\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n\n    if (!selectedCustomerForUpload) {\n      setError(\"Please select a customer\");\n      return;\n    }\n\n    if (!selectedMachineForUpload) {\n      setError(\"Please select a machine\");\n      return;\n    }\n\n    if (!versionNumber || versionNumber.trim() === \"\") {\n      setError(\"Please enter a version number\");\n      return;\n    }\n\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"customer_id\", selectedCustomerForUpload);\n    formData.append(\"machine_id\", selectedMachineForUpload);\n    formData.append(\"version\", versionNumber.trim());\n\n    try {\n      await axios.post(\"/api/files/admin/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      setVersionNumber(\"\");\n      setSelectedCustomerForUpload(\"\");\n      setSelectedMachineForUpload(\"\");\n      // Reset the file input\n      const fileInput = document.querySelector('input[type=\"file\"]');\n      if (fileInput) {\n        fileInput.value = \"\";\n      }\n      fetchData();\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || \"Upload failed\";\n      setError(errorMessage);\n\n      // If the error is about version already existing, suggest a new version\n      if (\n        errorMessage.includes(\"already exists\") &&\n        errorMessage.includes(\"version\")\n      ) {\n        // Try to suggest next version\n        try {\n          const numVersion = parseFloat(versionNumber);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            setVersionNumber(versionNumber + \"_1\");\n          }\n        } catch {\n          setVersionNumber(versionNumber + \"_1\");\n        }\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleDownloadFile = async (customerId, machineId, filename, version) => {\n    try {\n      const response = await axios.get(\n        `/api/files/admin/download/${customerId}/${machineId}/${filename}/${version}`,\n        { responseType: \"blob\" }\n      );\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", filename);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n\n  const handleDeleteFile = async (customerId, machineId, filename, version) => {\n    if (\n      !window.confirm(\n        `Are you sure you want to delete ${filename} version ${version}?`\n      )\n    ) {\n      return;\n    }\n\n    try {\n      await axios.delete(\n        `/api/files/admin/delete/${customerId}/${machineId}/${filename}/${version}`\n      );\n\n      setSuccess(`File ${filename} version ${version} deleted successfully!`);\n\n      // Refresh the machine files\n      if (selectedMachine) {\n        fetchMachineFiles(customerId, machineId);\n      }\n\n      // Refresh the main data\n      fetchData();\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || \"Delete failed\";\n      setError(errorMessage);\n    }\n  };\n\n  const handleViewVersions = async (customerId, machineId, filename) => {\n    try {\n      const response = await axios.get(\n        `/api/files/admin/versions/${customerId}/${machineId}/${filename}`\n      );\n      setSelectedFileVersions(response.data.versions || []);\n      setSelectedFileName(filename);\n      setShowVersionsModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch file versions\");\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  if (loading) {\n    return (\n      <Container className=\"text-center mt-4\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      </Container>\n    );\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          <h2 className=\"mb-4\">Admin Dashboard</h2>\n\n          {error && (\n            <Alert variant=\"danger\" onClose={() => setError(\"\")} dismissible>\n              {error}\n            </Alert>\n          )}\n\n          {success && (\n            <Alert variant=\"success\" onClose={() => setSuccess(\"\")} dismissible>\n              {success}\n            </Alert>\n          )}\n\n          <Tab.Container\n            activeKey={activeTab}\n            onSelect={(k) => setActiveTab(k)}\n          >\n            <Row>\n              <Col>\n                <Nav variant=\"tabs\" className=\"mb-4\">\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"customers\">\n                      <Person className=\"me-2\" />\n                      Customers ({customers.length})\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"machines\" disabled={!selectedCustomer}>\n                      <HddNetwork className=\"me-2\" />\n                      Machines\n                      {selectedCustomer && (\n                        <Badge bg=\"secondary\" className=\"ms-2\">\n                          {selectedCustomer.name}\n                        </Badge>\n                      )}\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"files\" disabled={!selectedMachine}>\n                      <FileText className=\"me-2\" />\n                      Files\n                      {selectedMachine && (\n                        <Badge bg=\"secondary\" className=\"ms-2\">\n                          {selectedMachine.machine_name}\n                        </Badge>\n                      )}\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"upload\">\n                      <Upload className=\"me-2\" />\n                      Upload File\n                    </Nav.Link>\n                  </Nav.Item>\n                </Nav>\n\n                <Tab.Content>\n                  <Tab.Pane eventKey=\"customers\">\n                    <Card>\n                      <Card.Header>\n                        <h5>Customer Management</h5>\n                      </Card.Header>\n                      <Card.Body>\n                        {customers.length === 0 ? (\n                          <p className=\"text-muted\">\n                            No customers registered yet.\n                          </p>\n                        ) : (\n                          <Table responsive>\n                            <thead>\n                              <tr>\n                                <th>Customer ID</th>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Phone</th>\n                                <th>Address</th>\n                                <th>Registered</th>\n                                <th>Actions</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {customers.map((customer, index) => (\n                                <tr key={index}>\n                                  <td>\n                                    <Badge bg=\"secondary\">\n                                      {customer.customer_id}\n                                    </Badge>\n                                  </td>\n                                  <td>{customer.name}</td>\n                                  <td>{customer.email}</td>\n                                  <td>{customer.phone}</td>\n                                  <td>{customer.address}</td>\n                                  <td>{formatDate(customer.created_at)}</td>\n                                  <td>\n                                    <Button\n                                      variant=\"outline-primary\"\n                                      size=\"sm\"\n                                      onClick={() =>\n                                        handleViewCustomerMachines(\n                                          customer.customer_id\n                                        )\n                                      }\n                                      title=\"View Customer Machines\"\n                                    >\n                                      <HddNetwork className=\"me-1\" />\n                                      View Machines\n                                    </Button>\n                                  </td>\n                                </tr>\n                              ))}\n                            </tbody>\n                          </Table>\n                        )}\n                      </Card.Body>\n                    </Card>\n                  </Tab.Pane>\n\n                  <Tab.Pane eventKey=\"machines\">\n                    {!selectedCustomer ? (\n                      <Card>\n                        <Card.Body className=\"text-center\">\n                          <HddNetwork size={48} className=\"text-muted mb-3\" />\n                          <h5>No Customer Selected</h5>\n                          <p className=\"text-muted\">\n                            Please select a customer from the Customers tab to view their machines.\n                          </p>\n                        </Card.Body>\n                      </Card>\n                    ) : (\n                      <MachineManagement \n                        customerId={selectedCustomer.customer_id} \n                        isAdmin={true}\n                        onMachineSelect={handleMachineSelect}\n                        selectedMachine={selectedMachine}\n                      />\n                    )}\n                  </Tab.Pane>\n\n                  <Tab.Pane eventKey=\"files\">\n                    {!selectedMachine ? (\n                      <Card>\n                        <Card.Body className=\"text-center\">\n                          <FileText size={48} className=\"text-muted mb-3\" />\n                          <h5>No Machine Selected</h5>\n                          <p className=\"text-muted\">\n                            Please select a machine from the Machines tab to view its files.\n                          </p>\n                        </Card.Body>\n                      </Card>\n                    ) : (\n                      <Card>\n                        <Card.Header>\n                          <h5>\n                            <FileText className=\"me-2\" />\n                            Files for {selectedMachine.machine_name}\n                          </h5>\n                        </Card.Header>\n                        <Card.Body>\n                          {files.length === 0 ? (\n                            <p className=\"text-muted\">No files uploaded to this machine yet.</p>\n                          ) : (\n                            <Table responsive>\n                              <thead>\n                                <tr>\n                                  <th>Filename</th>\n                                  <th>Latest Version</th>\n                                  <th>Total Versions</th>\n                                  <th>File Size</th>\n                                  <th>Uploaded</th>\n                                  <th>Actions</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {files.map((file, index) => (\n                                  <tr key={index}>\n                                    <td>{file.filename}</td>\n                                    <td>\n                                      <Badge bg=\"primary\">v{file.version}</Badge>\n                                    </td>\n                                    <td>\n                                      <Badge bg=\"info\">{file.total_versions}</Badge>\n                                    </td>\n                                    <td>{formatFileSize(file.file_size)}</td>\n                                    <td>{formatDate(file.uploaded_at)}</td>\n                                    <td>\n                                      <Button\n                                        variant=\"outline-primary\"\n                                        size=\"sm\"\n                                        className=\"me-1\"\n                                        onClick={() =>\n                                          handleDownloadFile(\n                                            selectedCustomer.customer_id,\n                                            selectedMachine.machine_id,\n                                            file.filename,\n                                            file.version\n                                          )\n                                        }\n                                        title=\"Download Latest Version\"\n                                      >\n                                        <Download />\n                                      </Button>\n                                      <Button\n                                        variant=\"outline-danger\"\n                                        size=\"sm\"\n                                        className=\"me-1\"\n                                        onClick={() =>\n                                          handleDeleteFile(\n                                            selectedCustomer.customer_id,\n                                            selectedMachine.machine_id,\n                                            file.filename,\n                                            file.version\n                                          )\n                                        }\n                                        title=\"Delete Latest Version\"\n                                      >\n                                        <Trash />\n                                      </Button>\n                                      <Button\n                                        variant=\"outline-info\"\n                                        size=\"sm\"\n                                        onClick={() =>\n                                          handleViewVersions(\n                                            selectedCustomer.customer_id,\n                                            selectedMachine.machine_id,\n                                            file.filename\n                                          )\n                                        }\n                                        title=\"View All Versions\"\n                                      >\n                                        <Eye />\n                                      </Button>\n                                    </td>\n                                  </tr>\n                                ))}\n                              </tbody>\n                            </Table>\n                          )}\n                        </Card.Body>\n                      </Card>\n                    )}\n                  </Tab.Pane>\n\n                  <Tab.Pane eventKey=\"upload\">\n                    <Card>\n                      <Card.Header>\n                        <h5>Upload File for Customer Machine</h5>\n                      </Card.Header>\n                      <Card.Body>\n                        <Form onSubmit={handleAdminUpload}>\n                          <Row>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Select Customer *</Form.Label>\n                                <Form.Select\n                                  value={selectedCustomerForUpload}\n                                  onChange={(e) => {\n                                    setSelectedCustomerForUpload(e.target.value);\n                                    setSelectedMachineForUpload(\"\");\n                                  }}\n                                  required\n                                >\n                                  <option value=\"\">Choose a customer...</option>\n                                  {customers.map((customer) => (\n                                    <option\n                                      key={customer.customer_id}\n                                      value={customer.customer_id}\n                                    >\n                                      {customer.name} ({customer.email})\n                                    </option>\n                                  ))}\n                                </Form.Select>\n                              </Form.Group>\n                            </Col>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Select Machine *</Form.Label>\n                                <Form.Select\n                                  value={selectedMachineForUpload}\n                                  onChange={(e) => setSelectedMachineForUpload(e.target.value)}\n                                  required\n                                  disabled={!selectedCustomerForUpload}\n                                >\n                                  <option value=\"\">Choose a machine...</option>\n                                  {selectedCustomerForUpload && machines.map((machine) => (\n                                    <option\n                                      key={machine.machine_id}\n                                      value={machine.machine_id}\n                                    >\n                                      {machine.machine_name} ({machine.machine_type})\n                                    </option>\n                                  ))}\n                                </Form.Select>\n                              </Form.Group>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Select File (Max 2MB) *</Form.Label>\n                                <Form.Control\n                                  type=\"file\"\n                                  onChange={handleFileSelect}\n                                  accept=\"*/*\"\n                                  required\n                                />\n                              </Form.Group>\n                            </Col>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Version Number *</Form.Label>\n                                <Form.Control\n                                  type=\"text\"\n                                  placeholder=\"Enter version (e.g., 1, 1.1, beta, etc.)\"\n                                  value={versionNumber}\n                                  onChange={(e) =>\n                                    setVersionNumber(e.target.value)\n                                  }\n                                  required\n                                />\n                                <Form.Text className=\"text-muted\">\n                                  Enter any version identifier (numbers,\n                                  decimals, or text)\n                                </Form.Text>\n                              </Form.Group>\n                            </Col>\n                          </Row>\n                          <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            disabled={\n                              uploading ||\n                              !selectedFile ||\n                              !selectedCustomerForUpload ||\n                              !selectedMachineForUpload ||\n                              !versionNumber.trim()\n                            }\n                          >\n                            {uploading ? (\n                              <>\n                                <Gear className=\"me-2\" />\n                                Uploading...\n                              </>\n                            ) : (\n                              <>\n                                <Upload className=\"me-2\" />\n                                Upload File\n                              </>\n                            )}\n                          </Button>\n                        </Form>\n                      </Card.Body>\n                    </Card>\n                  </Tab.Pane>\n                </Tab.Content>\n              </Col>\n            </Row>\n          </Tab.Container>\n        </Col>\n      </Row>\n\n      {/* File Versions Modal */}\n      <Modal\n        show={showVersionsModal}\n        onHide={() => setShowVersionsModal(false)}\n        size=\"lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>All Versions of {selectedFileName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {selectedFileVersions.length === 0 ? (\n            <p className=\"text-muted\">No versions found for this file.</p>\n          ) : (\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th>Version</th>\n                  <th>File Size</th>\n                  <th>Uploaded</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {selectedFileVersions.map((file, index) => (\n                  <tr key={index}>\n                    <td>\n                      <Badge bg=\"primary\">v{file.version}</Badge>\n                    </td>\n                    <td>{formatFileSize(file.file_size)}</td>\n                    <td>{formatDate(file.uploaded_at)}</td>\n                    <td>\n                      <Button\n                        variant=\"outline-primary\"\n                        size=\"sm\"\n                        className=\"me-1\"\n                        onClick={() =>\n                          handleDownloadFile(\n                            selectedCustomer?.customer_id,\n                            selectedMachine?.machine_id,\n                            file.filename,\n                            file.version\n                          )\n                        }\n                        title=\"Download Version\"\n                      >\n                        <Download />\n                      </Button>\n                      <Button\n                        variant=\"outline-danger\"\n                        size=\"sm\"\n                        onClick={() =>\n                          handleDeleteFile(\n                            selectedCustomer?.customer_id,\n                            selectedMachine?.machine_id,\n                            file.filename,\n                            file.version\n                          )\n                        }\n                        title=\"Delete Version\"\n                      >\n                        <Trash />\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default AdminDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}