{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useAuth}from\"../contexts/AuthContext\";import axios from\"axios\";import{Card,Button,Form,Table,Alert,Modal,Badge,Row,Col,Container,Nav,Tab,Spinner}from\"react-bootstrap\";import{HddNetwork,FileText,Upload,Download,Eye,Trash,Plus}from\"react-bootstrap-icons\";import MachineManagement from\"./MachineManagement\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CustomerDashboard=()=>{const{user}=useAuth();const[activeTab,setActiveTab]=useState(\"machines\");const[machines,setMachines]=useState([]);const[selectedMachine,setSelectedMachine]=useState(null);const[files,setFiles]=useState([]);const[selectedFile,setSelectedFile]=useState(null);const[versionNumber,setVersionNumber]=useState(\"\");const[uploading,setUploading]=useState(false);const[loading,setLoading]=useState(true);const[error,setError]=useState(\"\");const[success,setSuccess]=useState(\"\");const[showVersionsModal,setShowVersionsModal]=useState(false);const[selectedFileVersions,setSelectedFileVersions]=useState([]);const[selectedFileName,setSelectedFileName]=useState(\"\");useEffect(()=>{if(user&&user.customer_id){fetchMachines();}},[user]);useEffect(()=>{if(success){const timer=setTimeout(()=>setSuccess(\"\"),3000);return()=>clearTimeout(timer);}},[success]);const fetchMachines=async()=>{if(!user||!user.customer_id){console.log(\"User or customer_id not available yet\");return;}try{setLoading(true);setError(\"\");// Clear any previous errors\nconst response=await axios.get(\"/api/machines/customer/\".concat(user.customer_id));setMachines(response.data.machines||[]);}catch(error){// Only show error for actual API failures (4xx/5xx status codes)\nif(error.response&&error.response.status>=400){setError(\"Failed to fetch machines\");console.error(\"Error fetching machines:\",error);}else{// For network errors or other issues, still show error\nsetError(\"Failed to fetch machines\");console.error(\"Error fetching machines:\",error);}}finally{setLoading(false);}};const fetchMachineFiles=async machineId=>{if(!user||!user.customer_id){console.log(\"User or customer_id not available yet\");return;}try{const response=await axios.get(\"/api/files/machine/\".concat(user.customer_id,\"/\").concat(machineId));setFiles(response.data.files||[]);}catch(error){setError(\"Failed to fetch files\");console.error(\"Error fetching files:\",error);}};const handleMachineSelect=machine=>{setSelectedMachine(machine);fetchMachineFiles(machine.id);};const handleFileSelect=e=>{const file=e.target.files[0];if(file){if(file.size>2*1024*1024){// 2MB limit\nsetError(\"File size must be less than 2MB\");setSelectedFile(null);return;}setSelectedFile(file);setError(\"\");// Auto-suggest next version number if file with same name exists\nconst existingFile=files.find(f=>f.filename===file.name);if(existingFile){// Try to increment the latest version\nconst latestVersion=existingFile.version;try{// If it's a number, increment it\nconst numVersion=parseFloat(latestVersion);if(!isNaN(numVersion)){setVersionNumber((numVersion+1).toString());}else{// If it's a string, append a number\nsetVersionNumber(latestVersion+\"_1\");}}catch(_unused){setVersionNumber(latestVersion+\"_1\");}}else{setVersionNumber(\"1\");}}};const handleUpload=async e=>{e.preventDefault();if(!selectedFile){setError(\"Please select a file\");return;}if(!selectedMachine){setError(\"Please select a machine\");return;}if(!versionNumber||versionNumber.trim()===\"\"){setError(\"Please enter a version number\");return;}const version=versionNumber.trim();await performUpload(selectedFile,version);};const performUpload=async(file,version)=>{setUploading(true);setError(\"\");setSuccess(\"\");const formData=new FormData();formData.append(\"file\",file);formData.append(\"version\",version);try{await axios.post(\"/api/files/customer/\".concat(user.customer_id,\"/machine/\").concat(selectedMachine.id,\"/upload\"),formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});setSuccess(\"File uploaded successfully!\");setSelectedFile(null);setVersionNumber(\"\");// Reset the file input\nconst fileInput=document.querySelector('input[type=\"file\"]');if(fileInput){fileInput.value=\"\";}fetchMachineFiles(selectedMachine.id);}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||\"Upload failed\";setError(errorMessage);// If the error is about version already existing, suggest a new version\nif(errorMessage.includes(\"already exists\")&&errorMessage.includes(\"version\")){// Try to suggest next version\ntry{const numVersion=parseFloat(version);if(!isNaN(numVersion)){setVersionNumber((numVersion+1).toString());}else{setVersionNumber(version+\"_1\");}}catch(_unused2){setVersionNumber(version+\"_1\");}}}finally{setUploading(false);}};const handleDownload=async(filename,version)=>{try{const response=await axios.get(\"/api/files/download/\".concat(user.customer_id,\"/\").concat(selectedMachine.id,\"/\").concat(filename,\"/\").concat(version),{responseType:\"blob\"});const url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement(\"a\");link.href=url;link.setAttribute(\"download\",filename);document.body.appendChild(link);link.click();link.remove();}catch(error){setError(\"Download failed\");}};const handleViewVersions=async filename=>{try{const response=await axios.get(\"/api/files/versions/\".concat(user.customer_id,\"/\").concat(selectedMachine.id,\"/\").concat(filename));setSelectedFileVersions(response.data.versions||[]);setSelectedFileName(filename);setShowVersionsModal(true);}catch(error){setError(\"Failed to fetch versions\");}};const handleDeleteFile=async(filename,version)=>{if(!window.confirm(\"Are you sure you want to delete \".concat(filename,\" version \").concat(version,\"?\"))){return;}try{await axios.delete(\"/api/files/delete/\".concat(user.customer_id,\"/\").concat(selectedMachine.id,\"/\").concat(filename,\"/\").concat(version));setSuccess(\"File deleted successfully\");fetchMachineFiles(selectedMachine.id);}catch(error){setError(\"Failed to delete file\");}};const formatFileSize=bytes=>{if(bytes===0)return\"0 Bytes\";const k=1024;const sizes=[\"Bytes\",\"KB\",\"MB\",\"GB\"];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+\" \"+sizes[i];};const formatDate=dateString=>{return new Date(dateString).toLocaleString();};if(loading){return/*#__PURE__*/_jsx(Container,{className:\"text-center mt-4\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})});}if(!user||!user.customer_id){return/*#__PURE__*/_jsxs(Container,{className:\"text-center mt-4\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading user data...\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2\",children:\"Loading user data...\"})]});}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mb-4\",children:\"Customer Dashboard\"}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",onClose:()=>setError(\"\"),dismissible:true,children:error}),success&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",onClose:()=>setSuccess(\"\"),dismissible:true,children:success}),/*#__PURE__*/_jsx(Tab.Container,{activeKey:activeTab,onSelect:k=>setActiveTab(k),children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsxs(Nav,{variant:\"tabs\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{eventKey:\"machines\",children:[/*#__PURE__*/_jsx(HddNetwork,{className:\"me-2\"}),\"Machines\"]})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{eventKey:\"files\",disabled:!selectedMachine,children:[/*#__PURE__*/_jsx(FileText,{className:\"me-2\"}),\"Files\",selectedMachine&&/*#__PURE__*/_jsx(Badge,{bg:\"secondary\",className:\"ms-2\",children:selectedMachine.name})]})})]}),/*#__PURE__*/_jsxs(Tab.Content,{children:[/*#__PURE__*/_jsx(Tab.Pane,{eventKey:\"machines\",children:/*#__PURE__*/_jsx(MachineManagement,{customerId:user.customer_id,isAdmin:false,onMachineSelect:handleMachineSelect,selectedMachine:selectedMachine})}),/*#__PURE__*/_jsx(Tab.Pane,{eventKey:\"files\",children:!selectedMachine?/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{className:\"text-center\",children:[/*#__PURE__*/_jsx(FileText,{size:48,className:\"text-muted mb-3\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"No Machine Selected\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"Please select a machine from the Machines tab to manage its files.\"})]})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{children:[/*#__PURE__*/_jsx(Upload,{className:\"me-2\"}),\"Upload New File to \",selectedMachine.name]})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleUpload,children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Select File (Max 2MB) *\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"file\",onChange:handleFileSelect,accept:\"*/*\",required:true})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Version Number *\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter version (e.g., 1, 1.1, beta, etc.)\",value:versionNumber,onChange:e=>setVersionNumber(e.target.value),required:true}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"Enter any version identifier (numbers, decimals, or text)\"})]})})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",disabled:uploading||!selectedFile||!versionNumber.trim(),children:uploading?\"Uploading...\":\"Upload File\"})]})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{children:[/*#__PURE__*/_jsx(FileText,{className:\"me-2\"}),\"Files for \",selectedMachine.name]})}),/*#__PURE__*/_jsx(Card.Body,{children:files.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"No files uploaded to this machine yet.\"}):/*#__PURE__*/_jsxs(Table,{responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Filename\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Latest Version\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Versions\"}),/*#__PURE__*/_jsx(\"th\",{children:\"File Size\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Uploaded\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:files.map((file,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:file.filename}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(Badge,{bg:\"primary\",children:[\"v\",file.version]})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:\"info\",children:file.total_versions})}),/*#__PURE__*/_jsx(\"td\",{children:formatFileSize(file.file_size)}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(file.uploaded_at)}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline-primary\",size:\"sm\",className:\"me-1\",onClick:()=>handleDownload(file.filename,file.version),children:[/*#__PURE__*/_jsx(Download,{className:\"me-1\"}),\"Download\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline-secondary\",size:\"sm\",className:\"me-1\",onClick:()=>handleViewVersions(file.filename),children:[/*#__PURE__*/_jsx(Eye,{className:\"me-1\"}),\"Versions\"]})]})]},index))})]})})]})]})})]})]})})}),/*#__PURE__*/_jsxs(Modal,{show:showVersionsModal,onHide:()=>setShowVersionsModal(false),size:\"lg\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[\"File Versions - \",selectedFileName]})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Table,{responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Version\"}),/*#__PURE__*/_jsx(\"th\",{children:\"File Size\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Uploaded\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:selectedFileVersions.map((version,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(Badge,{bg:\"primary\",children:[\"v\",version.version]})}),/*#__PURE__*/_jsx(\"td\",{children:formatFileSize(version.file_size)}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(version.uploaded_at)}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsxs(Button,{variant:\"outline-primary\",size:\"sm\",className:\"me-1\",onClick:()=>handleDownload(selectedFileName,version.version),children:[/*#__PURE__*/_jsx(Download,{className:\"me-1\"}),\"Download\"]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline-danger\",size:\"sm\",onClick:()=>handleDeleteFile(selectedFileName,version.version),children:[/*#__PURE__*/_jsx(Trash,{className:\"me-1\"}),\"Delete\"]})]})]},index))})]})})]})]});};export default CustomerDashboard;","map":{"version":3,"names":["React","useState","useEffect","useAuth","axios","Card","Button","Form","Table","Alert","Modal","Badge","Row","Col","Container","Nav","Tab","Spinner","HddNetwork","FileText","Upload","Download","Eye","Trash","Plus","MachineManagement","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CustomerDashboard","user","activeTab","setActiveTab","machines","setMachines","selectedMachine","setSelectedMachine","files","setFiles","selectedFile","setSelectedFile","versionNumber","setVersionNumber","uploading","setUploading","loading","setLoading","error","setError","success","setSuccess","showVersionsModal","setShowVersionsModal","selectedFileVersions","setSelectedFileVersions","selectedFileName","setSelectedFileName","customer_id","fetchMachines","timer","setTimeout","clearTimeout","console","log","response","get","concat","data","status","fetchMachineFiles","machineId","handleMachineSelect","machine","id","handleFileSelect","e","file","target","size","existingFile","find","f","filename","name","latestVersion","version","numVersion","parseFloat","isNaN","toString","_unused","handleUpload","preventDefault","trim","performUpload","formData","FormData","append","post","headers","fileInput","document","querySelector","value","_error$response","_error$response$data","errorMessage","includes","_unused2","handleDownload","responseType","url","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","remove","handleViewVersions","versions","handleDeleteFile","confirm","delete","formatFileSize","bytes","k","sizes","i","Math","floor","pow","toFixed","formatDate","dateString","Date","toLocaleString","className","children","animation","role","variant","onClose","dismissible","activeKey","onSelect","Item","Link","eventKey","disabled","bg","Content","Pane","customerId","isAdmin","onMachineSelect","Body","Header","onSubmit","md","Group","Label","Control","type","onChange","accept","required","placeholder","Text","length","responsive","map","index","total_versions","file_size","uploaded_at","onClick","show","onHide","closeButton","Title"],"sources":["/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\nimport {\n  Card,\n  Button,\n  Form,\n  Table,\n  Alert,\n  Modal,\n  Badge,\n  Row,\n  Col,\n  Container,\n  Nav,\n  Tab,\n  Spinner,\n} from \"react-bootstrap\";\nimport {\n  HddNetwork,\n  FileText,\n  Upload,\n  Download,\n  Eye,\n  Trash,\n  Plus,\n} from \"react-bootstrap-icons\";\nimport MachineManagement from \"./MachineManagement\";\n\nconst CustomerDashboard = () => {\n  const { user } = useAuth();\n  const [activeTab, setActiveTab] = useState(\"machines\");\n  const [machines, setMachines] = useState([]);\n  const [selectedMachine, setSelectedMachine] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [versionNumber, setVersionNumber] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [showVersionsModal, setShowVersionsModal] = useState(false);\n  const [selectedFileVersions, setSelectedFileVersions] = useState([]);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n\n  useEffect(() => {\n    if (user && user.customer_id) {\n      fetchMachines();\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => setSuccess(\"\"), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n\n  const fetchMachines = async () => {\n    if (!user || !user.customer_id) {\n      console.log(\"User or customer_id not available yet\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(\"\"); // Clear any previous errors\n      const response = await axios.get(\n        `/api/machines/customer/${user.customer_id}`\n      );\n      setMachines(response.data.machines || []);\n    } catch (error) {\n      // Only show error for actual API failures (4xx/5xx status codes)\n      if (error.response && error.response.status >= 400) {\n        setError(\"Failed to fetch machines\");\n        console.error(\"Error fetching machines:\", error);\n      } else {\n        // For network errors or other issues, still show error\n        setError(\"Failed to fetch machines\");\n        console.error(\"Error fetching machines:\", error);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchMachineFiles = async (machineId) => {\n    if (!user || !user.customer_id) {\n      console.log(\"User or customer_id not available yet\");\n      return;\n    }\n\n    try {\n      const response = await axios.get(\n        `/api/files/machine/${user.customer_id}/${machineId}`\n      );\n      setFiles(response.data.files || []);\n    } catch (error) {\n      setError(\"Failed to fetch files\");\n      console.error(\"Error fetching files:\", error);\n    }\n  };\n\n  const handleMachineSelect = (machine) => {\n    setSelectedMachine(machine);\n    fetchMachineFiles(machine.id);\n  };\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n\n      // Auto-suggest next version number if file with same name exists\n      const existingFile = files.find((f) => f.filename === file.name);\n      if (existingFile) {\n        // Try to increment the latest version\n        const latestVersion = existingFile.version;\n        try {\n          // If it's a number, increment it\n          const numVersion = parseFloat(latestVersion);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            // If it's a string, append a number\n            setVersionNumber(latestVersion + \"_1\");\n          }\n        } catch {\n          setVersionNumber(latestVersion + \"_1\");\n        }\n      } else {\n        setVersionNumber(\"1\");\n      }\n    }\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n\n    if (!selectedMachine) {\n      setError(\"Please select a machine\");\n      return;\n    }\n\n    if (!versionNumber || versionNumber.trim() === \"\") {\n      setError(\"Please enter a version number\");\n      return;\n    }\n\n    const version = versionNumber.trim();\n    await performUpload(selectedFile, version);\n  };\n\n  const performUpload = async (file, version) => {\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"version\", version);\n\n    try {\n      await axios.post(\n        `/api/files/customer/${user.customer_id}/machine/${selectedMachine.id}/upload`,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      setVersionNumber(\"\");\n      // Reset the file input\n      const fileInput = document.querySelector('input[type=\"file\"]');\n      if (fileInput) {\n        fileInput.value = \"\";\n      }\n      fetchMachineFiles(selectedMachine.id);\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || \"Upload failed\";\n      setError(errorMessage);\n\n      // If the error is about version already existing, suggest a new version\n      if (\n        errorMessage.includes(\"already exists\") &&\n        errorMessage.includes(\"version\")\n      ) {\n        // Try to suggest next version\n        try {\n          const numVersion = parseFloat(version);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            setVersionNumber(version + \"_1\");\n          }\n        } catch {\n          setVersionNumber(version + \"_1\");\n        }\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleDownload = async (filename, version) => {\n    try {\n      const response = await axios.get(\n        `/api/files/download/${user.customer_id}/${selectedMachine.id}/${filename}/${version}`,\n        { responseType: \"blob\" }\n      );\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", filename);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n\n  const handleViewVersions = async (filename) => {\n    try {\n      const response = await axios.get(\n        `/api/files/versions/${user.customer_id}/${selectedMachine.id}/${filename}`\n      );\n      setSelectedFileVersions(response.data.versions || []);\n      setSelectedFileName(filename);\n      setShowVersionsModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch versions\");\n    }\n  };\n\n  const handleDeleteFile = async (filename, version) => {\n    if (\n      !window.confirm(\n        `Are you sure you want to delete ${filename} version ${version}?`\n      )\n    ) {\n      return;\n    }\n\n    try {\n      await axios.delete(\n        `/api/files/delete/${user.customer_id}/${selectedMachine.id}/${filename}/${version}`\n      );\n      setSuccess(\"File deleted successfully\");\n      fetchMachineFiles(selectedMachine.id);\n    } catch (error) {\n      setError(\"Failed to delete file\");\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  if (loading) {\n    return (\n      <Container className=\"text-center mt-4\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      </Container>\n    );\n  }\n\n  if (!user || !user.customer_id) {\n    return (\n      <Container className=\"text-center mt-4\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading user data...</span>\n        </Spinner>\n        <p className=\"mt-2\">Loading user data...</p>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <h2 className=\"mb-4\">Customer Dashboard</h2>\n\n      {error && (\n        <Alert variant=\"danger\" onClose={() => setError(\"\")} dismissible>\n          {error}\n        </Alert>\n      )}\n      {success && (\n        <Alert variant=\"success\" onClose={() => setSuccess(\"\")} dismissible>\n          {success}\n        </Alert>\n      )}\n\n      <Tab.Container activeKey={activeTab} onSelect={(k) => setActiveTab(k)}>\n        <Row>\n          <Col>\n            <Nav variant=\"tabs\" className=\"mb-3\">\n              <Nav.Item>\n                <Nav.Link eventKey=\"machines\">\n                  <HddNetwork className=\"me-2\" />\n                  Machines\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"files\" disabled={!selectedMachine}>\n                  <FileText className=\"me-2\" />\n                  Files\n                  {selectedMachine && (\n                    <Badge bg=\"secondary\" className=\"ms-2\">\n                      {selectedMachine.name}\n                    </Badge>\n                  )}\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n\n            <Tab.Content>\n              <Tab.Pane eventKey=\"machines\">\n                <MachineManagement\n                  customerId={user.customer_id}\n                  isAdmin={false}\n                  onMachineSelect={handleMachineSelect}\n                  selectedMachine={selectedMachine}\n                />\n              </Tab.Pane>\n\n              <Tab.Pane eventKey=\"files\">\n                {!selectedMachine ? (\n                  <Card>\n                    <Card.Body className=\"text-center\">\n                      <FileText size={48} className=\"text-muted mb-3\" />\n                      <h5>No Machine Selected</h5>\n                      <p className=\"text-muted\">\n                        Please select a machine from the Machines tab to manage\n                        its files.\n                      </p>\n                    </Card.Body>\n                  </Card>\n                ) : (\n                  <>\n                    {/* File Upload Section */}\n                    <Card className=\"mb-4\">\n                      <Card.Header>\n                        <h5>\n                          <Upload className=\"me-2\" />\n                          Upload New File to {selectedMachine.name}\n                        </h5>\n                      </Card.Header>\n                      <Card.Body>\n                        <Form onSubmit={handleUpload}>\n                          <Row>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Select File (Max 2MB) *</Form.Label>\n                                <Form.Control\n                                  type=\"file\"\n                                  onChange={handleFileSelect}\n                                  accept=\"*/*\"\n                                  required\n                                />\n                              </Form.Group>\n                            </Col>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Version Number *</Form.Label>\n                                <Form.Control\n                                  type=\"text\"\n                                  placeholder=\"Enter version (e.g., 1, 1.1, beta, etc.)\"\n                                  value={versionNumber}\n                                  onChange={(e) =>\n                                    setVersionNumber(e.target.value)\n                                  }\n                                  required\n                                />\n                                <Form.Text className=\"text-muted\">\n                                  Enter any version identifier (numbers,\n                                  decimals, or text)\n                                </Form.Text>\n                              </Form.Group>\n                            </Col>\n                          </Row>\n                          <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            disabled={\n                              uploading ||\n                              !selectedFile ||\n                              !versionNumber.trim()\n                            }\n                          >\n                            {uploading ? \"Uploading...\" : \"Upload File\"}\n                          </Button>\n                        </Form>\n                      </Card.Body>\n                    </Card>\n\n                    {/* Files List */}\n                    <Card>\n                      <Card.Header>\n                        <h5>\n                          <FileText className=\"me-2\" />\n                          Files for {selectedMachine.name}\n                        </h5>\n                      </Card.Header>\n                      <Card.Body>\n                        {files.length === 0 ? (\n                          <p className=\"text-muted\">\n                            No files uploaded to this machine yet.\n                          </p>\n                        ) : (\n                          <Table responsive>\n                            <thead>\n                              <tr>\n                                <th>Filename</th>\n                                <th>Latest Version</th>\n                                <th>Total Versions</th>\n                                <th>File Size</th>\n                                <th>Uploaded</th>\n                                <th>Actions</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {files.map((file, index) => (\n                                <tr key={index}>\n                                  <td>{file.filename}</td>\n                                  <td>\n                                    <Badge bg=\"primary\">v{file.version}</Badge>\n                                  </td>\n                                  <td>\n                                    <Badge bg=\"info\">\n                                      {file.total_versions}\n                                    </Badge>\n                                  </td>\n                                  <td>{formatFileSize(file.file_size)}</td>\n                                  <td>{formatDate(file.uploaded_at)}</td>\n                                  <td>\n                                    <Button\n                                      variant=\"outline-primary\"\n                                      size=\"sm\"\n                                      className=\"me-1\"\n                                      onClick={() =>\n                                        handleDownload(\n                                          file.filename,\n                                          file.version\n                                        )\n                                      }\n                                    >\n                                      <Download className=\"me-1\" />\n                                      Download\n                                    </Button>\n                                    <Button\n                                      variant=\"outline-secondary\"\n                                      size=\"sm\"\n                                      className=\"me-1\"\n                                      onClick={() =>\n                                        handleViewVersions(file.filename)\n                                      }\n                                    >\n                                      <Eye className=\"me-1\" />\n                                      Versions\n                                    </Button>\n                                  </td>\n                                </tr>\n                              ))}\n                            </tbody>\n                          </Table>\n                        )}\n                      </Card.Body>\n                    </Card>\n                  </>\n                )}\n              </Tab.Pane>\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n\n      {/* Versions Modal */}\n      <Modal\n        show={showVersionsModal}\n        onHide={() => setShowVersionsModal(false)}\n        size=\"lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>File Versions - {selectedFileName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>Version</th>\n                <th>File Size</th>\n                <th>Uploaded</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {selectedFileVersions.map((version, index) => (\n                <tr key={index}>\n                  <td>\n                    <Badge bg=\"primary\">v{version.version}</Badge>\n                  </td>\n                  <td>{formatFileSize(version.file_size)}</td>\n                  <td>{formatDate(version.uploaded_at)}</td>\n                  <td>\n                    <Button\n                      variant=\"outline-primary\"\n                      size=\"sm\"\n                      className=\"me-1\"\n                      onClick={() =>\n                        handleDownload(selectedFileName, version.version)\n                      }\n                    >\n                      <Download className=\"me-1\" />\n                      Download\n                    </Button>\n                    <Button\n                      variant=\"outline-danger\"\n                      size=\"sm\"\n                      onClick={() =>\n                        handleDeleteFile(selectedFileName, version.version)\n                      }\n                    >\n                      <Trash className=\"me-1\" />\n                      Delete\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default CustomerDashboard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,OAAO,KAAQ,yBAAyB,CACjD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OACEC,IAAI,CACJC,MAAM,CACNC,IAAI,CACJC,KAAK,CACLC,KAAK,CACLC,KAAK,CACLC,KAAK,CACLC,GAAG,CACHC,GAAG,CACHC,SAAS,CACTC,GAAG,CACHC,GAAG,CACHC,OAAO,KACF,iBAAiB,CACxB,OACEC,UAAU,CACVC,QAAQ,CACRC,MAAM,CACNC,QAAQ,CACRC,GAAG,CACHC,KAAK,CACLC,IAAI,KACC,uBAAuB,CAC9B,MAAO,CAAAC,iBAAiB,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEpD,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAEC,IAAK,CAAC,CAAG9B,OAAO,CAAC,CAAC,CAC1B,KAAM,CAAC+B,SAAS,CAAEC,YAAY,CAAC,CAAGlC,QAAQ,CAAC,UAAU,CAAC,CACtD,KAAM,CAACmC,QAAQ,CAAEC,WAAW,CAAC,CAAGpC,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACqC,eAAe,CAAEC,kBAAkB,CAAC,CAAGtC,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAACuC,KAAK,CAAEC,QAAQ,CAAC,CAAGxC,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACyC,YAAY,CAAEC,eAAe,CAAC,CAAG1C,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAAC2C,aAAa,CAAEC,gBAAgB,CAAC,CAAG5C,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAC6C,SAAS,CAAEC,YAAY,CAAC,CAAG9C,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAC+C,OAAO,CAAEC,UAAU,CAAC,CAAGhD,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACiD,KAAK,CAAEC,QAAQ,CAAC,CAAGlD,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACmD,OAAO,CAAEC,UAAU,CAAC,CAAGpD,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACqD,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGtD,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAACuD,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGxD,QAAQ,CAAC,EAAE,CAAC,CACpE,KAAM,CAACyD,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG1D,QAAQ,CAAC,EAAE,CAAC,CAE5DC,SAAS,CAAC,IAAM,CACd,GAAI+B,IAAI,EAAIA,IAAI,CAAC2B,WAAW,CAAE,CAC5BC,aAAa,CAAC,CAAC,CACjB,CACF,CAAC,CAAE,CAAC5B,IAAI,CAAC,CAAC,CAEV/B,SAAS,CAAC,IAAM,CACd,GAAIkD,OAAO,CAAE,CACX,KAAM,CAAAU,KAAK,CAAGC,UAAU,CAAC,IAAMV,UAAU,CAAC,EAAE,CAAC,CAAE,IAAI,CAAC,CACpD,MAAO,IAAMW,YAAY,CAACF,KAAK,CAAC,CAClC,CACF,CAAC,CAAE,CAACV,OAAO,CAAC,CAAC,CAEb,KAAM,CAAAS,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAAC5B,IAAI,EAAI,CAACA,IAAI,CAAC2B,WAAW,CAAE,CAC9BK,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CACpD,OACF,CAEA,GAAI,CACFjB,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,EAAE,CAAC,CAAE;AACd,KAAM,CAAAgB,QAAQ,CAAG,KAAM,CAAA/D,KAAK,CAACgE,GAAG,2BAAAC,MAAA,CACJpC,IAAI,CAAC2B,WAAW,CAC5C,CAAC,CACDvB,WAAW,CAAC8B,QAAQ,CAACG,IAAI,CAAClC,QAAQ,EAAI,EAAE,CAAC,CAC3C,CAAE,MAAOc,KAAK,CAAE,CACd;AACA,GAAIA,KAAK,CAACiB,QAAQ,EAAIjB,KAAK,CAACiB,QAAQ,CAACI,MAAM,EAAI,GAAG,CAAE,CAClDpB,QAAQ,CAAC,0BAA0B,CAAC,CACpCc,OAAO,CAACf,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CAAC,IAAM,CACL;AACAC,QAAQ,CAAC,0BAA0B,CAAC,CACpCc,OAAO,CAACf,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CACF,CAAC,OAAS,CACRD,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAuB,iBAAiB,CAAG,KAAO,CAAAC,SAAS,EAAK,CAC7C,GAAI,CAACxC,IAAI,EAAI,CAACA,IAAI,CAAC2B,WAAW,CAAE,CAC9BK,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CACpD,OACF,CAEA,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA/D,KAAK,CAACgE,GAAG,uBAAAC,MAAA,CACRpC,IAAI,CAAC2B,WAAW,MAAAS,MAAA,CAAII,SAAS,CACrD,CAAC,CACDhC,QAAQ,CAAC0B,QAAQ,CAACG,IAAI,CAAC9B,KAAK,EAAI,EAAE,CAAC,CACrC,CAAE,MAAOU,KAAK,CAAE,CACdC,QAAQ,CAAC,uBAAuB,CAAC,CACjCc,OAAO,CAACf,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CAAC,CAED,KAAM,CAAAwB,mBAAmB,CAAIC,OAAO,EAAK,CACvCpC,kBAAkB,CAACoC,OAAO,CAAC,CAC3BH,iBAAiB,CAACG,OAAO,CAACC,EAAE,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAIC,CAAC,EAAK,CAC9B,KAAM,CAAAC,IAAI,CAAGD,CAAC,CAACE,MAAM,CAACxC,KAAK,CAAC,CAAC,CAAC,CAC9B,GAAIuC,IAAI,CAAE,CACR,GAAIA,IAAI,CAACE,IAAI,CAAG,CAAC,CAAG,IAAI,CAAG,IAAI,CAAE,CAC/B;AACA9B,QAAQ,CAAC,iCAAiC,CAAC,CAC3CR,eAAe,CAAC,IAAI,CAAC,CACrB,OACF,CACAA,eAAe,CAACoC,IAAI,CAAC,CACrB5B,QAAQ,CAAC,EAAE,CAAC,CAEZ;AACA,KAAM,CAAA+B,YAAY,CAAG1C,KAAK,CAAC2C,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAACC,QAAQ,GAAKN,IAAI,CAACO,IAAI,CAAC,CAChE,GAAIJ,YAAY,CAAE,CAChB;AACA,KAAM,CAAAK,aAAa,CAAGL,YAAY,CAACM,OAAO,CAC1C,GAAI,CACF;AACA,KAAM,CAAAC,UAAU,CAAGC,UAAU,CAACH,aAAa,CAAC,CAC5C,GAAI,CAACI,KAAK,CAACF,UAAU,CAAC,CAAE,CACtB5C,gBAAgB,CAAC,CAAC4C,UAAU,CAAG,CAAC,EAAEG,QAAQ,CAAC,CAAC,CAAC,CAC/C,CAAC,IAAM,CACL;AACA/C,gBAAgB,CAAC0C,aAAa,CAAG,IAAI,CAAC,CACxC,CACF,CAAE,MAAAM,OAAA,CAAM,CACNhD,gBAAgB,CAAC0C,aAAa,CAAG,IAAI,CAAC,CACxC,CACF,CAAC,IAAM,CACL1C,gBAAgB,CAAC,GAAG,CAAC,CACvB,CACF,CACF,CAAC,CAED,KAAM,CAAAiD,YAAY,CAAG,KAAO,CAAAhB,CAAC,EAAK,CAChCA,CAAC,CAACiB,cAAc,CAAC,CAAC,CAElB,GAAI,CAACrD,YAAY,CAAE,CACjBS,QAAQ,CAAC,sBAAsB,CAAC,CAChC,OACF,CAEA,GAAI,CAACb,eAAe,CAAE,CACpBa,QAAQ,CAAC,yBAAyB,CAAC,CACnC,OACF,CAEA,GAAI,CAACP,aAAa,EAAIA,aAAa,CAACoD,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACjD7C,QAAQ,CAAC,+BAA+B,CAAC,CACzC,OACF,CAEA,KAAM,CAAAqC,OAAO,CAAG5C,aAAa,CAACoD,IAAI,CAAC,CAAC,CACpC,KAAM,CAAAC,aAAa,CAACvD,YAAY,CAAE8C,OAAO,CAAC,CAC5C,CAAC,CAED,KAAM,CAAAS,aAAa,CAAG,KAAAA,CAAOlB,IAAI,CAAES,OAAO,GAAK,CAC7CzC,YAAY,CAAC,IAAI,CAAC,CAClBI,QAAQ,CAAC,EAAE,CAAC,CACZE,UAAU,CAAC,EAAE,CAAC,CAEd,KAAM,CAAA6C,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAErB,IAAI,CAAC,CAC7BmB,QAAQ,CAACE,MAAM,CAAC,SAAS,CAAEZ,OAAO,CAAC,CAEnC,GAAI,CACF,KAAM,CAAApF,KAAK,CAACiG,IAAI,wBAAAhC,MAAA,CACSpC,IAAI,CAAC2B,WAAW,cAAAS,MAAA,CAAY/B,eAAe,CAACsC,EAAE,YACrEsB,QAAQ,CACR,CACEI,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CACF,CAAC,CAEDjD,UAAU,CAAC,6BAA6B,CAAC,CACzCV,eAAe,CAAC,IAAI,CAAC,CACrBE,gBAAgB,CAAC,EAAE,CAAC,CACpB;AACA,KAAM,CAAA0D,SAAS,CAAGC,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC,CAC9D,GAAIF,SAAS,CAAE,CACbA,SAAS,CAACG,KAAK,CAAG,EAAE,CACtB,CACAlC,iBAAiB,CAAClC,eAAe,CAACsC,EAAE,CAAC,CACvC,CAAE,MAAO1B,KAAK,CAAE,KAAAyD,eAAA,CAAAC,oBAAA,CACd,KAAM,CAAAC,YAAY,CAAG,EAAAF,eAAA,CAAAzD,KAAK,CAACiB,QAAQ,UAAAwC,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBrC,IAAI,UAAAsC,oBAAA,iBAApBA,oBAAA,CAAsB1D,KAAK,GAAI,eAAe,CACnEC,QAAQ,CAAC0D,YAAY,CAAC,CAEtB;AACA,GACEA,YAAY,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EACvCD,YAAY,CAACC,QAAQ,CAAC,SAAS,CAAC,CAChC,CACA;AACA,GAAI,CACF,KAAM,CAAArB,UAAU,CAAGC,UAAU,CAACF,OAAO,CAAC,CACtC,GAAI,CAACG,KAAK,CAACF,UAAU,CAAC,CAAE,CACtB5C,gBAAgB,CAAC,CAAC4C,UAAU,CAAG,CAAC,EAAEG,QAAQ,CAAC,CAAC,CAAC,CAC/C,CAAC,IAAM,CACL/C,gBAAgB,CAAC2C,OAAO,CAAG,IAAI,CAAC,CAClC,CACF,CAAE,MAAAuB,QAAA,CAAM,CACNlE,gBAAgB,CAAC2C,OAAO,CAAG,IAAI,CAAC,CAClC,CACF,CACF,CAAC,OAAS,CACRzC,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED,KAAM,CAAAiE,cAAc,CAAG,KAAAA,CAAO3B,QAAQ,CAAEG,OAAO,GAAK,CAClD,GAAI,CACF,KAAM,CAAArB,QAAQ,CAAG,KAAM,CAAA/D,KAAK,CAACgE,GAAG,wBAAAC,MAAA,CACPpC,IAAI,CAAC2B,WAAW,MAAAS,MAAA,CAAI/B,eAAe,CAACsC,EAAE,MAAAP,MAAA,CAAIgB,QAAQ,MAAAhB,MAAA,CAAImB,OAAO,EACpF,CAAEyB,YAAY,CAAE,MAAO,CACzB,CAAC,CAED,KAAM,CAAAC,GAAG,CAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,GAAI,CAAAC,IAAI,CAAC,CAACnD,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACjE,KAAM,CAAAiD,IAAI,CAAGf,QAAQ,CAACgB,aAAa,CAAC,GAAG,CAAC,CACxCD,IAAI,CAACE,IAAI,CAAGP,GAAG,CACfK,IAAI,CAACG,YAAY,CAAC,UAAU,CAAErC,QAAQ,CAAC,CACvCmB,QAAQ,CAACmB,IAAI,CAACC,WAAW,CAACL,IAAI,CAAC,CAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC,CACZN,IAAI,CAACO,MAAM,CAAC,CAAC,CACf,CAAE,MAAO5E,KAAK,CAAE,CACdC,QAAQ,CAAC,iBAAiB,CAAC,CAC7B,CACF,CAAC,CAED,KAAM,CAAA4E,kBAAkB,CAAG,KAAO,CAAA1C,QAAQ,EAAK,CAC7C,GAAI,CACF,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAA/D,KAAK,CAACgE,GAAG,wBAAAC,MAAA,CACPpC,IAAI,CAAC2B,WAAW,MAAAS,MAAA,CAAI/B,eAAe,CAACsC,EAAE,MAAAP,MAAA,CAAIgB,QAAQ,CAC3E,CAAC,CACD5B,uBAAuB,CAACU,QAAQ,CAACG,IAAI,CAAC0D,QAAQ,EAAI,EAAE,CAAC,CACrDrE,mBAAmB,CAAC0B,QAAQ,CAAC,CAC7B9B,oBAAoB,CAAC,IAAI,CAAC,CAC5B,CAAE,MAAOL,KAAK,CAAE,CACdC,QAAQ,CAAC,0BAA0B,CAAC,CACtC,CACF,CAAC,CAED,KAAM,CAAA8E,gBAAgB,CAAG,KAAAA,CAAO5C,QAAQ,CAAEG,OAAO,GAAK,CACpD,GACE,CAAC2B,MAAM,CAACe,OAAO,oCAAA7D,MAAA,CACsBgB,QAAQ,cAAAhB,MAAA,CAAYmB,OAAO,KAChE,CAAC,CACD,CACA,OACF,CAEA,GAAI,CACF,KAAM,CAAApF,KAAK,CAAC+H,MAAM,sBAAA9D,MAAA,CACKpC,IAAI,CAAC2B,WAAW,MAAAS,MAAA,CAAI/B,eAAe,CAACsC,EAAE,MAAAP,MAAA,CAAIgB,QAAQ,MAAAhB,MAAA,CAAImB,OAAO,CACpF,CAAC,CACDnC,UAAU,CAAC,2BAA2B,CAAC,CACvCmB,iBAAiB,CAAClC,eAAe,CAACsC,EAAE,CAAC,CACvC,CAAE,MAAO1B,KAAK,CAAE,CACdC,QAAQ,CAAC,uBAAuB,CAAC,CACnC,CACF,CAAC,CAED,KAAM,CAAAiF,cAAc,CAAIC,KAAK,EAAK,CAChC,GAAIA,KAAK,GAAK,CAAC,CAAE,MAAO,SAAS,CACjC,KAAM,CAAAC,CAAC,CAAG,IAAI,CACd,KAAM,CAAAC,KAAK,CAAG,CAAC,OAAO,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,CACzC,KAAM,CAAAC,CAAC,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACvE,GAAG,CAACmE,KAAK,CAAC,CAAGI,IAAI,CAACvE,GAAG,CAACoE,CAAC,CAAC,CAAC,CACnD,MAAO,CAAA5C,UAAU,CAAC,CAAC2C,KAAK,CAAGI,IAAI,CAACE,GAAG,CAACL,CAAC,CAAEE,CAAC,CAAC,EAAEI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAG,GAAG,CAAGL,KAAK,CAACC,CAAC,CAAC,CACzE,CAAC,CAED,KAAM,CAAAK,UAAU,CAAIC,UAAU,EAAK,CACjC,MAAO,IAAI,CAAAC,IAAI,CAACD,UAAU,CAAC,CAACE,cAAc,CAAC,CAAC,CAC9C,CAAC,CAED,GAAIhG,OAAO,CAAE,CACX,mBACErB,IAAA,CAACb,SAAS,EAACmI,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cACrCvH,IAAA,CAACV,OAAO,EAACkI,SAAS,CAAC,QAAQ,CAACC,IAAI,CAAC,QAAQ,CAAAF,QAAA,cACvCvH,IAAA,SAAMsH,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,YAAU,CAAM,CAAC,CAC5C,CAAC,CACD,CAAC,CAEhB,CAEA,GAAI,CAACjH,IAAI,EAAI,CAACA,IAAI,CAAC2B,WAAW,CAAE,CAC9B,mBACE/B,KAAA,CAACf,SAAS,EAACmI,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eACrCvH,IAAA,CAACV,OAAO,EAACkI,SAAS,CAAC,QAAQ,CAACC,IAAI,CAAC,QAAQ,CAAAF,QAAA,cACvCvH,IAAA,SAAMsH,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,sBAAoB,CAAM,CAAC,CACtD,CAAC,cACVvH,IAAA,MAAGsH,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,sBAAoB,CAAG,CAAC,EACnC,CAAC,CAEhB,CAEA,mBACErH,KAAA,CAACf,SAAS,EAAAoI,QAAA,eACRvH,IAAA,OAAIsH,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,oBAAkB,CAAI,CAAC,CAE3ChG,KAAK,eACJvB,IAAA,CAAClB,KAAK,EAAC4I,OAAO,CAAC,QAAQ,CAACC,OAAO,CAAEA,CAAA,GAAMnG,QAAQ,CAAC,EAAE,CAAE,CAACoG,WAAW,MAAAL,QAAA,CAC7DhG,KAAK,CACD,CACR,CACAE,OAAO,eACNzB,IAAA,CAAClB,KAAK,EAAC4I,OAAO,CAAC,SAAS,CAACC,OAAO,CAAEA,CAAA,GAAMjG,UAAU,CAAC,EAAE,CAAE,CAACkG,WAAW,MAAAL,QAAA,CAChE9F,OAAO,CACH,CACR,cAEDzB,IAAA,CAACX,GAAG,CAACF,SAAS,EAAC0I,SAAS,CAAEtH,SAAU,CAACuH,QAAQ,CAAGnB,CAAC,EAAKnG,YAAY,CAACmG,CAAC,CAAE,CAAAY,QAAA,cACpEvH,IAAA,CAACf,GAAG,EAAAsI,QAAA,cACFrH,KAAA,CAAChB,GAAG,EAAAqI,QAAA,eACFrH,KAAA,CAACd,GAAG,EAACsI,OAAO,CAAC,MAAM,CAACJ,SAAS,CAAC,MAAM,CAAAC,QAAA,eAClCvH,IAAA,CAACZ,GAAG,CAAC2I,IAAI,EAAAR,QAAA,cACPrH,KAAA,CAACd,GAAG,CAAC4I,IAAI,EAACC,QAAQ,CAAC,UAAU,CAAAV,QAAA,eAC3BvH,IAAA,CAACT,UAAU,EAAC+H,SAAS,CAAC,MAAM,CAAE,CAAC,WAEjC,EAAU,CAAC,CACH,CAAC,cACXtH,IAAA,CAACZ,GAAG,CAAC2I,IAAI,EAAAR,QAAA,cACPrH,KAAA,CAACd,GAAG,CAAC4I,IAAI,EAACC,QAAQ,CAAC,OAAO,CAACC,QAAQ,CAAE,CAACvH,eAAgB,CAAA4G,QAAA,eACpDvH,IAAA,CAACR,QAAQ,EAAC8H,SAAS,CAAC,MAAM,CAAE,CAAC,QAE7B,CAAC3G,eAAe,eACdX,IAAA,CAAChB,KAAK,EAACmJ,EAAE,CAAC,WAAW,CAACb,SAAS,CAAC,MAAM,CAAAC,QAAA,CACnC5G,eAAe,CAACgD,IAAI,CAChB,CACR,EACO,CAAC,CACH,CAAC,EACR,CAAC,cAENzD,KAAA,CAACb,GAAG,CAAC+I,OAAO,EAAAb,QAAA,eACVvH,IAAA,CAACX,GAAG,CAACgJ,IAAI,EAACJ,QAAQ,CAAC,UAAU,CAAAV,QAAA,cAC3BvH,IAAA,CAACF,iBAAiB,EAChBwI,UAAU,CAAEhI,IAAI,CAAC2B,WAAY,CAC7BsG,OAAO,CAAE,KAAM,CACfC,eAAe,CAAEzF,mBAAoB,CACrCpC,eAAe,CAAEA,eAAgB,CAClC,CAAC,CACM,CAAC,cAEXX,IAAA,CAACX,GAAG,CAACgJ,IAAI,EAACJ,QAAQ,CAAC,OAAO,CAAAV,QAAA,CACvB,CAAC5G,eAAe,cACfX,IAAA,CAACtB,IAAI,EAAA6I,QAAA,cACHrH,KAAA,CAACxB,IAAI,CAAC+J,IAAI,EAACnB,SAAS,CAAC,aAAa,CAAAC,QAAA,eAChCvH,IAAA,CAACR,QAAQ,EAAC8D,IAAI,CAAE,EAAG,CAACgE,SAAS,CAAC,iBAAiB,CAAE,CAAC,cAClDtH,IAAA,OAAAuH,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5BvH,IAAA,MAAGsH,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,oEAG1B,CAAG,CAAC,EACK,CAAC,CACR,CAAC,cAEPrH,KAAA,CAAAE,SAAA,EAAAmH,QAAA,eAEErH,KAAA,CAACxB,IAAI,EAAC4I,SAAS,CAAC,MAAM,CAAAC,QAAA,eACpBvH,IAAA,CAACtB,IAAI,CAACgK,MAAM,EAAAnB,QAAA,cACVrH,KAAA,OAAAqH,QAAA,eACEvH,IAAA,CAACP,MAAM,EAAC6H,SAAS,CAAC,MAAM,CAAE,CAAC,sBACR,CAAC3G,eAAe,CAACgD,IAAI,EACtC,CAAC,CACM,CAAC,cACd3D,IAAA,CAACtB,IAAI,CAAC+J,IAAI,EAAAlB,QAAA,cACRrH,KAAA,CAACtB,IAAI,EAAC+J,QAAQ,CAAExE,YAAa,CAAAoD,QAAA,eAC3BrH,KAAA,CAACjB,GAAG,EAAAsI,QAAA,eACFvH,IAAA,CAACd,GAAG,EAAC0J,EAAE,CAAE,CAAE,CAAArB,QAAA,cACTrH,KAAA,CAACtB,IAAI,CAACiK,KAAK,EAACvB,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BvH,IAAA,CAACpB,IAAI,CAACkK,KAAK,EAAAvB,QAAA,CAAC,yBAAuB,CAAY,CAAC,cAChDvH,IAAA,CAACpB,IAAI,CAACmK,OAAO,EACXC,IAAI,CAAC,MAAM,CACXC,QAAQ,CAAE/F,gBAAiB,CAC3BgG,MAAM,CAAC,KAAK,CACZC,QAAQ,MACT,CAAC,EACQ,CAAC,CACV,CAAC,cACNnJ,IAAA,CAACd,GAAG,EAAC0J,EAAE,CAAE,CAAE,CAAArB,QAAA,cACTrH,KAAA,CAACtB,IAAI,CAACiK,KAAK,EAACvB,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BvH,IAAA,CAACpB,IAAI,CAACkK,KAAK,EAAAvB,QAAA,CAAC,kBAAgB,CAAY,CAAC,cACzCvH,IAAA,CAACpB,IAAI,CAACmK,OAAO,EACXC,IAAI,CAAC,MAAM,CACXI,WAAW,CAAC,0CAA0C,CACtDrE,KAAK,CAAE9D,aAAc,CACrBgI,QAAQ,CAAG9F,CAAC,EACVjC,gBAAgB,CAACiC,CAAC,CAACE,MAAM,CAAC0B,KAAK,CAChC,CACDoE,QAAQ,MACT,CAAC,cACFnJ,IAAA,CAACpB,IAAI,CAACyK,IAAI,EAAC/B,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,2DAGlC,CAAW,CAAC,EACF,CAAC,CACV,CAAC,EACH,CAAC,cACNvH,IAAA,CAACrB,MAAM,EACL+I,OAAO,CAAC,SAAS,CACjBsB,IAAI,CAAC,QAAQ,CACbd,QAAQ,CACN/G,SAAS,EACT,CAACJ,YAAY,EACb,CAACE,aAAa,CAACoD,IAAI,CAAC,CACrB,CAAAkD,QAAA,CAEApG,SAAS,CAAG,cAAc,CAAG,aAAa,CACrC,CAAC,EACL,CAAC,CACE,CAAC,EACR,CAAC,cAGPjB,KAAA,CAACxB,IAAI,EAAA6I,QAAA,eACHvH,IAAA,CAACtB,IAAI,CAACgK,MAAM,EAAAnB,QAAA,cACVrH,KAAA,OAAAqH,QAAA,eACEvH,IAAA,CAACR,QAAQ,EAAC8H,SAAS,CAAC,MAAM,CAAE,CAAC,aACnB,CAAC3G,eAAe,CAACgD,IAAI,EAC7B,CAAC,CACM,CAAC,cACd3D,IAAA,CAACtB,IAAI,CAAC+J,IAAI,EAAAlB,QAAA,CACP1G,KAAK,CAACyI,MAAM,GAAK,CAAC,cACjBtJ,IAAA,MAAGsH,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,wCAE1B,CAAG,CAAC,cAEJrH,KAAA,CAACrB,KAAK,EAAC0K,UAAU,MAAAhC,QAAA,eACfvH,IAAA,UAAAuH,QAAA,cACErH,KAAA,OAAAqH,QAAA,eACEvH,IAAA,OAAAuH,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBvH,IAAA,OAAAuH,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBvH,IAAA,OAAAuH,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBvH,IAAA,OAAAuH,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBvH,IAAA,OAAAuH,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBvH,IAAA,OAAAuH,QAAA,CAAI,SAAO,CAAI,CAAC,EACd,CAAC,CACA,CAAC,cACRvH,IAAA,UAAAuH,QAAA,CACG1G,KAAK,CAAC2I,GAAG,CAAC,CAACpG,IAAI,CAAEqG,KAAK,gBACrBvJ,KAAA,OAAAqH,QAAA,eACEvH,IAAA,OAAAuH,QAAA,CAAKnE,IAAI,CAACM,QAAQ,CAAK,CAAC,cACxB1D,IAAA,OAAAuH,QAAA,cACErH,KAAA,CAAClB,KAAK,EAACmJ,EAAE,CAAC,SAAS,CAAAZ,QAAA,EAAC,GAAC,CAACnE,IAAI,CAACS,OAAO,EAAQ,CAAC,CACzC,CAAC,cACL7D,IAAA,OAAAuH,QAAA,cACEvH,IAAA,CAAChB,KAAK,EAACmJ,EAAE,CAAC,MAAM,CAAAZ,QAAA,CACbnE,IAAI,CAACsG,cAAc,CACf,CAAC,CACN,CAAC,cACL1J,IAAA,OAAAuH,QAAA,CAAKd,cAAc,CAACrD,IAAI,CAACuG,SAAS,CAAC,CAAK,CAAC,cACzC3J,IAAA,OAAAuH,QAAA,CAAKL,UAAU,CAAC9D,IAAI,CAACwG,WAAW,CAAC,CAAK,CAAC,cACvC1J,KAAA,OAAAqH,QAAA,eACErH,KAAA,CAACvB,MAAM,EACL+I,OAAO,CAAC,iBAAiB,CACzBpE,IAAI,CAAC,IAAI,CACTgE,SAAS,CAAC,MAAM,CAChBuC,OAAO,CAAEA,CAAA,GACPxE,cAAc,CACZjC,IAAI,CAACM,QAAQ,CACbN,IAAI,CAACS,OACP,CACD,CAAA0D,QAAA,eAEDvH,IAAA,CAACN,QAAQ,EAAC4H,SAAS,CAAC,MAAM,CAAE,CAAC,WAE/B,EAAQ,CAAC,cACTpH,KAAA,CAACvB,MAAM,EACL+I,OAAO,CAAC,mBAAmB,CAC3BpE,IAAI,CAAC,IAAI,CACTgE,SAAS,CAAC,MAAM,CAChBuC,OAAO,CAAEA,CAAA,GACPzD,kBAAkB,CAAChD,IAAI,CAACM,QAAQ,CACjC,CAAA6D,QAAA,eAEDvH,IAAA,CAACL,GAAG,EAAC2H,SAAS,CAAC,MAAM,CAAE,CAAC,WAE1B,EAAQ,CAAC,EACP,CAAC,GAtCEmC,KAuCL,CACL,CAAC,CACG,CAAC,EACH,CACR,CACQ,CAAC,EACR,CAAC,EACP,CACH,CACO,CAAC,EACA,CAAC,EACX,CAAC,CACH,CAAC,CACO,CAAC,cAGhBvJ,KAAA,CAACnB,KAAK,EACJ+K,IAAI,CAAEnI,iBAAkB,CACxBoI,MAAM,CAAEA,CAAA,GAAMnI,oBAAoB,CAAC,KAAK,CAAE,CAC1C0B,IAAI,CAAC,IAAI,CAAAiE,QAAA,eAETvH,IAAA,CAACjB,KAAK,CAAC2J,MAAM,EAACsB,WAAW,MAAAzC,QAAA,cACvBrH,KAAA,CAACnB,KAAK,CAACkL,KAAK,EAAA1C,QAAA,EAAC,kBAAgB,CAACxF,gBAAgB,EAAc,CAAC,CACjD,CAAC,cACf/B,IAAA,CAACjB,KAAK,CAAC0J,IAAI,EAAAlB,QAAA,cACTrH,KAAA,CAACrB,KAAK,EAAC0K,UAAU,MAAAhC,QAAA,eACfvH,IAAA,UAAAuH,QAAA,cACErH,KAAA,OAAAqH,QAAA,eACEvH,IAAA,OAAAuH,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBvH,IAAA,OAAAuH,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBvH,IAAA,OAAAuH,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBvH,IAAA,OAAAuH,QAAA,CAAI,SAAO,CAAI,CAAC,EACd,CAAC,CACA,CAAC,cACRvH,IAAA,UAAAuH,QAAA,CACG1F,oBAAoB,CAAC2H,GAAG,CAAC,CAAC3F,OAAO,CAAE4F,KAAK,gBACvCvJ,KAAA,OAAAqH,QAAA,eACEvH,IAAA,OAAAuH,QAAA,cACErH,KAAA,CAAClB,KAAK,EAACmJ,EAAE,CAAC,SAAS,CAAAZ,QAAA,EAAC,GAAC,CAAC1D,OAAO,CAACA,OAAO,EAAQ,CAAC,CAC5C,CAAC,cACL7D,IAAA,OAAAuH,QAAA,CAAKd,cAAc,CAAC5C,OAAO,CAAC8F,SAAS,CAAC,CAAK,CAAC,cAC5C3J,IAAA,OAAAuH,QAAA,CAAKL,UAAU,CAACrD,OAAO,CAAC+F,WAAW,CAAC,CAAK,CAAC,cAC1C1J,KAAA,OAAAqH,QAAA,eACErH,KAAA,CAACvB,MAAM,EACL+I,OAAO,CAAC,iBAAiB,CACzBpE,IAAI,CAAC,IAAI,CACTgE,SAAS,CAAC,MAAM,CAChBuC,OAAO,CAAEA,CAAA,GACPxE,cAAc,CAACtD,gBAAgB,CAAE8B,OAAO,CAACA,OAAO,CACjD,CAAA0D,QAAA,eAEDvH,IAAA,CAACN,QAAQ,EAAC4H,SAAS,CAAC,MAAM,CAAE,CAAC,WAE/B,EAAQ,CAAC,cACTpH,KAAA,CAACvB,MAAM,EACL+I,OAAO,CAAC,gBAAgB,CACxBpE,IAAI,CAAC,IAAI,CACTuG,OAAO,CAAEA,CAAA,GACPvD,gBAAgB,CAACvE,gBAAgB,CAAE8B,OAAO,CAACA,OAAO,CACnD,CAAA0D,QAAA,eAEDvH,IAAA,CAACJ,KAAK,EAAC0H,SAAS,CAAC,MAAM,CAAE,CAAC,SAE5B,EAAQ,CAAC,EACP,CAAC,GA5BEmC,KA6BL,CACL,CAAC,CACG,CAAC,EACH,CAAC,CACE,CAAC,EACR,CAAC,EACC,CAAC,CAEhB,CAAC,CAED,cAAe,CAAApJ,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}