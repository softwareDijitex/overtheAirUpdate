{"ast":null,"code":"var _jsxFileName = \"/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\nimport { Card, Button, Form, Table, Alert, Modal, Badge, Row, Col, Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerDashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [showVersionsModal, setShowVersionsModal] = useState(false);\n  const [selectedFileVersions, setSelectedFileVersions] = useState([]);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get(\"/api/files/my-files\");\n      setFiles(response.data);\n    } catch (error) {\n      setError(\"Failed to fetch files\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n    }\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      await axios.post(\"/api/files/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      fetchFiles();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Upload failed\");\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleDownload = async (filename, version) => {\n    try {\n      const response = await axios.get(`/api/files/download/${user.customer_id}/${filename}/${version}`, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `${filename}_v${version}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n  const handleViewVersions = async filename => {\n    try {\n      const response = await axios.get(`/api/files/versions/${user.customer_id}/${filename}`);\n      setSelectedFileVersions(response.data);\n      setSelectedFileName(filename);\n      setShowVersionsModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch versions\");\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"Customer Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          onClose: () => setError(\"\"),\n          dismissible: true,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          onClose: () => setSuccess(\"\"),\n          dismissible: true,\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Upload New File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleUpload,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Select File (Max 2MB)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"file\",\n                  onChange: handleFileSelect,\n                  accept: \"*/*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                disabled: uploading || !selectedFile,\n                children: uploading ? \"Uploading...\" : \"Upload File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"My Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: files.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: \"No files uploaded yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Table, {\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Filename\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Latest Version\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"File Size\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Uploaded\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: file.filename\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Badge, {\n                      bg: \"primary\",\n                      children: [\"v\", file.latest_version]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatFileSize(file.file_size)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatDate(file.uploaded_at)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-primary\",\n                      size: \"sm\",\n                      className: \"me-2\",\n                      onClick: () => handleDownload(file.filename, file.latest_version),\n                      children: \"Download Latest\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-secondary\",\n                      size: \"sm\",\n                      onClick: () => handleViewVersions(file.filename),\n                      children: \"View Versions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showVersionsModal,\n      onHide: () => setShowVersionsModal(false),\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"File Versions - \", selectedFileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Version\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"File Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Uploaded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: selectedFileVersions.map((version, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"primary\",\n                  children: [\"v\", version.version]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatFileSize(version.file_size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(version.uploaded_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  size: \"sm\",\n                  onClick: () => handleDownload(selectedFileName, version.version),\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerDashboard, \"1gtV8VMvZcdCTXh+b6C0in/Lk6c=\", false, function () {\n  return [useAuth];\n});\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","axios","Card","Button","Form","Table","Alert","Modal","Badge","Row","Col","Container","jsxDEV","_jsxDEV","CustomerDashboard","_s","user","files","setFiles","selectedFile","setSelectedFile","uploading","setUploading","loading","setLoading","error","setError","success","setSuccess","showVersionsModal","setShowVersionsModal","selectedFileVersions","setSelectedFileVersions","selectedFileName","setSelectedFileName","fetchFiles","response","get","data","handleFileSelect","e","file","target","size","handleUpload","preventDefault","formData","FormData","append","post","headers","_error$response","_error$response$data","handleDownload","filename","version","customer_id","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","handleViewVersions","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","dateString","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClose","dismissible","Header","Body","onSubmit","Group","Label","Control","type","onChange","accept","disabled","length","responsive","map","index","bg","latest_version","file_size","uploaded_at","onClick","show","onHide","closeButton","Title","_c","$RefreshReg$"],"sources":["/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\nimport {\n  Card,\n  Button,\n  Form,\n  Table,\n  Alert,\n  Modal,\n  Badge,\n  Row,\n  Col,\n  Container,\n} from \"react-bootstrap\";\n\nconst CustomerDashboard = () => {\n  const { user } = useAuth();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [showVersionsModal, setShowVersionsModal] = useState(false);\n  const [selectedFileVersions, setSelectedFileVersions] = useState([]);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get(\"/api/files/my-files\");\n      setFiles(response.data);\n    } catch (error) {\n      setError(\"Failed to fetch files\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n    }\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n\n    try {\n      await axios.post(\"/api/files/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      fetchFiles();\n    } catch (error) {\n      setError(error.response?.data?.error || \"Upload failed\");\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleDownload = async (filename, version) => {\n    try {\n      const response = await axios.get(\n        `/api/files/download/${user.customer_id}/${filename}/${version}`,\n        { responseType: \"blob\" }\n      );\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `${filename}_v${version}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n\n  const handleViewVersions = async (filename) => {\n    try {\n      const response = await axios.get(\n        `/api/files/versions/${user.customer_id}/${filename}`\n      );\n      setSelectedFileVersions(response.data);\n      setSelectedFileName(filename);\n      setShowVersionsModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch versions\");\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  if (loading) {\n    return <div className=\"text-center\">Loading...</div>;\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h2 className=\"mb-4\">Customer Dashboard</h2>\n\n          {error && (\n            <Alert variant=\"danger\" onClose={() => setError(\"\")} dismissible>\n              {error}\n            </Alert>\n          )}\n          {success && (\n            <Alert variant=\"success\" onClose={() => setSuccess(\"\")} dismissible>\n              {success}\n            </Alert>\n          )}\n\n          {/* File Upload Section */}\n          <Card className=\"mb-4\">\n            <Card.Header>\n              <h5>Upload New File</h5>\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={handleUpload}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Select File (Max 2MB)</Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={handleFileSelect}\n                    accept=\"*/*\"\n                  />\n                </Form.Group>\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  disabled={uploading || !selectedFile}\n                >\n                  {uploading ? \"Uploading...\" : \"Upload File\"}\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n\n          {/* Files List */}\n          <Card>\n            <Card.Header>\n              <h5>My Files</h5>\n            </Card.Header>\n            <Card.Body>\n              {files.length === 0 ? (\n                <p className=\"text-muted\">No files uploaded yet.</p>\n              ) : (\n                <Table responsive>\n                  <thead>\n                    <tr>\n                      <th>Filename</th>\n                      <th>Latest Version</th>\n                      <th>File Size</th>\n                      <th>Uploaded</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {files.map((file, index) => (\n                      <tr key={index}>\n                        <td>{file.filename}</td>\n                        <td>\n                          <Badge bg=\"primary\">v{file.latest_version}</Badge>\n                        </td>\n                        <td>{formatFileSize(file.file_size)}</td>\n                        <td>{formatDate(file.uploaded_at)}</td>\n                        <td>\n                          <Button\n                            variant=\"outline-primary\"\n                            size=\"sm\"\n                            className=\"me-2\"\n                            onClick={() =>\n                              handleDownload(file.filename, file.latest_version)\n                            }\n                          >\n                            Download Latest\n                          </Button>\n                          <Button\n                            variant=\"outline-secondary\"\n                            size=\"sm\"\n                            onClick={() => handleViewVersions(file.filename)}\n                          >\n                            View Versions\n                          </Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Versions Modal */}\n      <Modal\n        show={showVersionsModal}\n        onHide={() => setShowVersionsModal(false)}\n        size=\"lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>File Versions - {selectedFileName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>Version</th>\n                <th>File Size</th>\n                <th>Uploaded</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {selectedFileVersions.map((version, index) => (\n                <tr key={index}>\n                  <td>\n                    <Badge bg=\"primary\">v{version.version}</Badge>\n                  </td>\n                  <td>{formatFileSize(version.file_size)}</td>\n                  <td>{formatDate(version.uploaded_at)}</td>\n                  <td>\n                    <Button\n                      variant=\"outline-primary\"\n                      size=\"sm\"\n                      onClick={() =>\n                        handleDownload(selectedFileName, version.version)\n                      }\n                    >\n                      Download\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default CustomerDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}