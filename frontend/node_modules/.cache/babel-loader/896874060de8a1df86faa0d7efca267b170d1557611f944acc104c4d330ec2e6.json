{"ast":null,"code":"var _jsxFileName = \"/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\nimport { Card, Button, Form, Table, Alert, Modal, Badge, Row, Col, Container, Nav, Tab, Spinner } from \"react-bootstrap\";\nimport { HddNetwork, FileText, Upload, Download, Eye, Trash, Plus, Person } from \"react-bootstrap-icons\";\nimport MachineManagement from \"./MachineManagement\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [customers, setCustomers] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"customers\");\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [selectedMachine, setSelectedMachine] = useState(null);\n  const [machines, setMachines] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [versionNumber, setVersionNumber] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [showVersionsModal, setShowVersionsModal] = useState(false);\n  const [selectedFileVersions, setSelectedFileVersions] = useState([]);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n\n  // File upload state for admin\n  const [selectedCustomerForUpload, setSelectedCustomerForUpload] = useState(\"\");\n  const [selectedMachineForUpload, setSelectedMachineForUpload] = useState(\"\");\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => setSuccess(\"\"), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n  const fetchCustomers = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"/api/customers/\");\n      setCustomers(response.data);\n    } catch (error) {\n      setError(\"Failed to fetch customers\");\n      console.error(\"Error fetching customers:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCustomerMachines = async customerId => {\n    try {\n      const response = await axios.get(`/api/machines/admin/customer/${customerId}`);\n      setMachines(response.data.machines || []);\n    } catch (error) {\n      setError(\"Failed to fetch customer machines\");\n      console.error(\"Error fetching machines:\", error);\n    }\n  };\n  const fetchMachineFiles = async (customerId, machineId) => {\n    try {\n      // Use admin-specific endpoint for file listing\n      const response = await axios.get(`/api/files/admin/customer/${customerId}/machine/${machineId}`);\n      setFiles(response.data.files || []);\n    } catch (error) {\n      setError(\"Failed to fetch files\");\n      console.error(\"Error fetching files:\", error);\n    }\n  };\n  const handleCustomerSelect = async customer => {\n    setSelectedCustomer(customer);\n    await fetchCustomerMachines(customer.customer_id);\n    setSelectedMachine(null);\n    setFiles([]);\n    // Automatically switch to machines tab\n    setActiveTab(\"machines\");\n  };\n  const handleMachineSelect = machine => {\n    setSelectedMachine(machine);\n    fetchMachineFiles(selectedCustomer.customer_id, machine.id);\n    // Automatically switch to files tab\n    setActiveTab(\"files\");\n  };\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n\n      // Auto-suggest next version number if file with same name exists\n      const existingFile = files.find(f => f.filename === file.name);\n      if (existingFile) {\n        // Try to increment the latest version\n        const latestVersion = existingFile.version;\n        try {\n          // If it's a number, increment it\n          const numVersion = parseFloat(latestVersion);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            // If it's a string, append a number\n            setVersionNumber(latestVersion + \"_1\");\n          }\n        } catch {\n          setVersionNumber(latestVersion + \"_1\");\n        }\n      } else {\n        setVersionNumber(\"1\");\n      }\n    }\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n    if (!selectedMachine) {\n      setError(\"Please select a machine\");\n      return;\n    }\n    if (!versionNumber || versionNumber.trim() === \"\") {\n      setError(\"Please enter a version number\");\n      return;\n    }\n    const version = versionNumber.trim();\n    await performUpload(selectedFile, version);\n  };\n  const performUpload = async (file, version) => {\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"version\", version);\n    try {\n      await axios.post(`/api/files/customer/${selectedCustomer.customer_id}/machine/${selectedMachine.id}/upload`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      setVersionNumber(\"\");\n      // Reset the file input\n      const fileInput = document.querySelector('input[type=\"file\"]');\n      if (fileInput) {\n        fileInput.value = \"\";\n      }\n      fetchMachineFiles(selectedCustomer.customer_id, selectedMachine.id);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Upload failed\";\n      setError(errorMessage);\n\n      // If the error is about version already existing, suggest a new version\n      if (errorMessage.includes(\"already exists\") && errorMessage.includes(\"version\")) {\n        // Try to suggest next version\n        try {\n          const numVersion = parseFloat(version);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            setVersionNumber(version + \"_1\");\n          }\n        } catch {\n          setVersionNumber(version + \"_1\");\n        }\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleDownload = async (filename, version) => {\n    try {\n      const response = await axios.get(`/api/files/download/${selectedCustomer.customer_id}/${selectedMachine.machine_id}/${filename}/${version}`, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", filename);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n  const handleViewVersions = async filename => {\n    try {\n      const response = await axios.get(`/api/files/versions/${selectedCustomer.customer_id}/${selectedMachine.machine_id}/${filename}`);\n      setSelectedFileVersions(response.data.versions || []);\n      setSelectedFileName(filename);\n      setShowVersionsModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch versions\");\n    }\n  };\n  const handleDeleteFile = async (filename, version) => {\n    if (!window.confirm(`Are you sure you want to delete ${filename} version ${version}?`)) {\n      return;\n    }\n    try {\n      await axios.delete(`/api/files/delete/${selectedCustomer.customer_id}/${selectedMachine.machine_id}/${filename}/${version}`);\n      setSuccess(\"File deleted successfully\");\n      fetchMachineFiles(selectedCustomer.customer_id, selectedMachine.machine_id);\n    } catch (error) {\n      setError(\"Failed to delete file\");\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      onClose: () => setError(\"\"),\n      dismissible: true,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      onClose: () => setSuccess(\"\"),\n      dismissible: true,\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n      activeKey: activeTab,\n      onSelect: k => setActiveTab(k),\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            variant: \"tabs\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                eventKey: \"customers\",\n                children: [/*#__PURE__*/_jsxDEV(Person, {\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this), \"Customers (\", customers.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                eventKey: \"machines\",\n                disabled: !selectedCustomer,\n                children: [/*#__PURE__*/_jsxDEV(HddNetwork, {\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 19\n                }, this), \"Machines\", selectedCustomer && /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"secondary\",\n                  className: \"ms-2\",\n                  children: selectedCustomer.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                eventKey: \"files\",\n                disabled: !selectedMachine,\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 19\n                }, this), \"Files\", selectedMachine && /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"secondary\",\n                  className: \"ms-2\",\n                  children: selectedMachine.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"customers\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Customer Management\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: customers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-muted\",\n                    children: \"No customers registered yet.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Table, {\n                    responsive: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 370,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Email\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 371,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Phone\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 372,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Address\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 373,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Registered\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 374,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Actions\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 375,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 369,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: customers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: customer.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 381,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: customer.email\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 382,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: customer.phone\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 383,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: customer.address\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 384,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: formatDate(customer.created_at)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 385,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"outline-primary\",\n                            size: \"sm\",\n                            onClick: () => handleCustomerSelect(customer),\n                            title: \"View Customer Machines\",\n                            children: [/*#__PURE__*/_jsxDEV(HddNetwork, {\n                              className: \"me-1\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 393,\n                              columnNumber: 35\n                            }, this), \"View Machines\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 387,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 386,\n                          columnNumber: 31\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 380,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 378,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"machines\",\n              children: !selectedCustomer ? /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(HddNetwork, {\n                    size: 48,\n                    className: \"text-muted mb-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"No Customer Selected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-muted\",\n                    children: \"Please select a customer from the Customers tab to view their machines.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(MachineManagement, {\n                customerId: selectedCustomer.customer_id,\n                isAdmin: true,\n                onMachineSelect: handleMachineSelect,\n                selectedMachine: selectedMachine\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"files\",\n              children: !selectedMachine ? /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FileText, {\n                    size: 48,\n                    className: \"text-muted mb-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"No Machine Selected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-muted\",\n                    children: \"Please select a machine from the Machines tab to manage its files.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Card, {\n                  className: \"mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: [/*#__PURE__*/_jsxDEV(Upload, {\n                        className: \"me-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 446,\n                        columnNumber: 27\n                      }, this), \"Upload New File to \", selectedMachine.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: /*#__PURE__*/_jsxDEV(Form, {\n                      onSubmit: handleUpload,\n                      children: [/*#__PURE__*/_jsxDEV(Row, {\n                        children: [/*#__PURE__*/_jsxDEV(Col, {\n                          md: 6,\n                          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                            className: \"mb-3\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: \"Select File (Max 2MB) *\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 455,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              type: \"file\",\n                              onChange: handleFileSelect,\n                              accept: \"*/*\",\n                              required: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 456,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 454,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 453,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          md: 6,\n                          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                            className: \"mb-3\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: \"Version Number *\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 466,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              type: \"text\",\n                              placeholder: \"Enter version (e.g., 1, 1.1, beta, etc.)\",\n                              value: versionNumber,\n                              onChange: e => setVersionNumber(e.target.value),\n                              required: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 467,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                              className: \"text-muted\",\n                              children: \"Enter any version identifier (numbers, decimals, or text)\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 476,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 465,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 464,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"primary\",\n                        type: \"submit\",\n                        disabled: uploading || !selectedFile || !versionNumber.trim(),\n                        children: uploading ? \"Uploading...\" : \"Upload File\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 483,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: [/*#__PURE__*/_jsxDEV(FileText, {\n                        className: \"me-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 502,\n                        columnNumber: 27\n                      }, this), \"Files for \", selectedMachine.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 501,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: files.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-muted\",\n                      children: \"No files uploaded to this machine yet.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n                      responsive: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Filename\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 515,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Latest Version\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 516,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Total Versions\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 517,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"File Size\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 518,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Uploaded\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 519,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Actions\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 520,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 514,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 513,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: file.filename\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 526,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: /*#__PURE__*/_jsxDEV(Badge, {\n                              bg: \"primary\",\n                              children: [\"v\", file.version]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 528,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 527,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: /*#__PURE__*/_jsxDEV(Badge, {\n                              bg: \"info\",\n                              children: file.total_versions\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 531,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 530,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: formatFileSize(file.file_size)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 535,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: formatDate(file.uploaded_at)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 536,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: [/*#__PURE__*/_jsxDEV(Button, {\n                              variant: \"outline-primary\",\n                              size: \"sm\",\n                              className: \"me-1\",\n                              onClick: () => handleDownload(file.filename, file.version),\n                              children: [/*#__PURE__*/_jsxDEV(Download, {\n                                className: \"me-1\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 549,\n                                columnNumber: 39\n                              }, this), \"Download\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 538,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Button, {\n                              variant: \"outline-secondary\",\n                              size: \"sm\",\n                              className: \"me-1\",\n                              onClick: () => handleViewVersions(file.filename),\n                              children: [/*#__PURE__*/_jsxDEV(Eye, {\n                                className: \"me-1\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 560,\n                                columnNumber: 39\n                              }, this), \"Versions\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 552,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 537,\n                            columnNumber: 35\n                          }, this)]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 525,\n                          columnNumber: 33\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showVersionsModal,\n      onHide: () => setShowVersionsModal(false),\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"File Versions - \", selectedFileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Version\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"File Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Uploaded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: selectedFileVersions.map((version, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"primary\",\n                  children: [\"v\", version.version]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatFileSize(version.file_size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(version.uploaded_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  size: \"sm\",\n                  className: \"me-1\",\n                  onClick: () => handleDownload(selectedFileName, version.version),\n                  children: [/*#__PURE__*/_jsxDEV(Download, {\n                    className: \"me-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 23\n                  }, this), \"Download\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-danger\",\n                  size: \"sm\",\n                  onClick: () => handleDeleteFile(selectedFileName, version.version),\n                  children: [/*#__PURE__*/_jsxDEV(Trash, {\n                    className: \"me-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 625,\n                    columnNumber: 23\n                  }, this), \"Delete\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"Jn/zBWJLuwkVG5+rBb+dee96dsE=\", false, function () {\n  return [useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","axios","Card","Button","Form","Table","Alert","Modal","Badge","Row","Col","Container","Nav","Tab","Spinner","HddNetwork","FileText","Upload","Download","Eye","Trash","Plus","Person","MachineManagement","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","user","customers","setCustomers","activeTab","setActiveTab","selectedCustomer","setSelectedCustomer","selectedMachine","setSelectedMachine","machines","setMachines","files","setFiles","selectedFile","setSelectedFile","versionNumber","setVersionNumber","uploading","setUploading","loading","setLoading","error","setError","success","setSuccess","showVersionsModal","setShowVersionsModal","selectedFileVersions","setSelectedFileVersions","selectedFileName","setSelectedFileName","selectedCustomerForUpload","setSelectedCustomerForUpload","selectedMachineForUpload","setSelectedMachineForUpload","fetchCustomers","timer","setTimeout","clearTimeout","response","get","data","console","fetchCustomerMachines","customerId","fetchMachineFiles","machineId","handleCustomerSelect","customer","customer_id","handleMachineSelect","machine","id","handleFileSelect","e","file","target","size","existingFile","find","f","filename","name","latestVersion","version","numVersion","parseFloat","isNaN","toString","handleUpload","preventDefault","trim","performUpload","formData","FormData","append","post","headers","fileInput","document","querySelector","value","_error$response","_error$response$data","errorMessage","includes","handleDownload","machine_id","responseType","url","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","remove","handleViewVersions","versions","handleDeleteFile","confirm","delete","formatFileSize","bytes","k","sizes","i","Math","floor","log","pow","toFixed","formatDate","dateString","Date","toLocaleString","className","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClose","dismissible","activeKey","onSelect","Item","Link","eventKey","length","disabled","bg","Content","Pane","Header","Body","responsive","map","index","email","phone","address","created_at","onClick","title","isAdmin","onMachineSelect","onSubmit","md","Group","Label","Control","type","onChange","accept","required","placeholder","Text","total_versions","file_size","uploaded_at","show","onHide","closeButton","Title","_c","$RefreshReg$"],"sources":["/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\nimport {\n  Card,\n  Button,\n  Form,\n  Table,\n  Alert,\n  Modal,\n  Badge,\n  Row,\n  Col,\n  Container,\n  Nav,\n  Tab,\n  Spinner,\n} from \"react-bootstrap\";\nimport {\n  HddNetwork,\n  FileText,\n  Upload,\n  Download,\n  Eye,\n  Trash,\n  Plus,\n  Person,\n} from \"react-bootstrap-icons\";\nimport MachineManagement from \"./MachineManagement\";\n\nconst AdminDashboard = () => {\n  const { user } = useAuth();\n  const [customers, setCustomers] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"customers\");\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [selectedMachine, setSelectedMachine] = useState(null);\n  const [machines, setMachines] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [versionNumber, setVersionNumber] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [showVersionsModal, setShowVersionsModal] = useState(false);\n  const [selectedFileVersions, setSelectedFileVersions] = useState([]);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n\n  // File upload state for admin\n  const [selectedCustomerForUpload, setSelectedCustomerForUpload] =\n    useState(\"\");\n  const [selectedMachineForUpload, setSelectedMachineForUpload] = useState(\"\");\n\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => setSuccess(\"\"), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n\n  const fetchCustomers = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(\"/api/customers/\");\n      setCustomers(response.data);\n    } catch (error) {\n      setError(\"Failed to fetch customers\");\n      console.error(\"Error fetching customers:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCustomerMachines = async (customerId) => {\n    try {\n      const response = await axios.get(\n        `/api/machines/admin/customer/${customerId}`\n      );\n      setMachines(response.data.machines || []);\n    } catch (error) {\n      setError(\"Failed to fetch customer machines\");\n      console.error(\"Error fetching machines:\", error);\n    }\n  };\n\n  const fetchMachineFiles = async (customerId, machineId) => {\n    try {\n      // Use admin-specific endpoint for file listing\n      const response = await axios.get(\n        `/api/files/admin/customer/${customerId}/machine/${machineId}`\n      );\n      setFiles(response.data.files || []);\n    } catch (error) {\n      setError(\"Failed to fetch files\");\n      console.error(\"Error fetching files:\", error);\n    }\n  };\n\n  const handleCustomerSelect = async (customer) => {\n    setSelectedCustomer(customer);\n    await fetchCustomerMachines(customer.customer_id);\n    setSelectedMachine(null);\n    setFiles([]);\n    // Automatically switch to machines tab\n    setActiveTab(\"machines\");\n  };\n\n  const handleMachineSelect = (machine) => {\n    setSelectedMachine(machine);\n    fetchMachineFiles(selectedCustomer.customer_id, machine.id);\n    // Automatically switch to files tab\n    setActiveTab(\"files\");\n  };\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n\n      // Auto-suggest next version number if file with same name exists\n      const existingFile = files.find((f) => f.filename === file.name);\n      if (existingFile) {\n        // Try to increment the latest version\n        const latestVersion = existingFile.version;\n        try {\n          // If it's a number, increment it\n          const numVersion = parseFloat(latestVersion);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            // If it's a string, append a number\n            setVersionNumber(latestVersion + \"_1\");\n          }\n        } catch {\n          setVersionNumber(latestVersion + \"_1\");\n        }\n      } else {\n        setVersionNumber(\"1\");\n      }\n    }\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n\n    if (!selectedMachine) {\n      setError(\"Please select a machine\");\n      return;\n    }\n\n    if (!versionNumber || versionNumber.trim() === \"\") {\n      setError(\"Please enter a version number\");\n      return;\n    }\n\n    const version = versionNumber.trim();\n    await performUpload(selectedFile, version);\n  };\n\n  const performUpload = async (file, version) => {\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"version\", version);\n\n    try {\n      await axios.post(\n        `/api/files/customer/${selectedCustomer.customer_id}/machine/${selectedMachine.id}/upload`,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      setVersionNumber(\"\");\n      // Reset the file input\n      const fileInput = document.querySelector('input[type=\"file\"]');\n      if (fileInput) {\n        fileInput.value = \"\";\n      }\n      fetchMachineFiles(selectedCustomer.customer_id, selectedMachine.id);\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || \"Upload failed\";\n      setError(errorMessage);\n\n      // If the error is about version already existing, suggest a new version\n      if (\n        errorMessage.includes(\"already exists\") &&\n        errorMessage.includes(\"version\")\n      ) {\n        // Try to suggest next version\n        try {\n          const numVersion = parseFloat(version);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            setVersionNumber(version + \"_1\");\n          }\n        } catch {\n          setVersionNumber(version + \"_1\");\n        }\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleDownload = async (filename, version) => {\n    try {\n      const response = await axios.get(\n        `/api/files/download/${selectedCustomer.customer_id}/${selectedMachine.machine_id}/${filename}/${version}`,\n        { responseType: \"blob\" }\n      );\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", filename);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n\n  const handleViewVersions = async (filename) => {\n    try {\n      const response = await axios.get(\n        `/api/files/versions/${selectedCustomer.customer_id}/${selectedMachine.machine_id}/${filename}`\n      );\n      setSelectedFileVersions(response.data.versions || []);\n      setSelectedFileName(filename);\n      setShowVersionsModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch versions\");\n    }\n  };\n\n  const handleDeleteFile = async (filename, version) => {\n    if (\n      !window.confirm(\n        `Are you sure you want to delete ${filename} version ${version}?`\n      )\n    ) {\n      return;\n    }\n\n    try {\n      await axios.delete(\n        `/api/files/delete/${selectedCustomer.customer_id}/${selectedMachine.machine_id}/${filename}/${version}`\n      );\n      setSuccess(\"File deleted successfully\");\n      fetchMachineFiles(\n        selectedCustomer.customer_id,\n        selectedMachine.machine_id\n      );\n    } catch (error) {\n      setError(\"Failed to delete file\");\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  if (loading) {\n    return (\n      <Container className=\"text-center mt-4\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <h2 className=\"mb-4\">Admin Dashboard</h2>\n\n      {error && (\n        <Alert variant=\"danger\" onClose={() => setError(\"\")} dismissible>\n          {error}\n        </Alert>\n      )}\n      {success && (\n        <Alert variant=\"success\" onClose={() => setSuccess(\"\")} dismissible>\n          {success}\n        </Alert>\n      )}\n\n      <Tab.Container activeKey={activeTab} onSelect={(k) => setActiveTab(k)}>\n        <Row>\n          <Col>\n            <Nav variant=\"tabs\" className=\"mb-3\">\n              <Nav.Item>\n                <Nav.Link eventKey=\"customers\">\n                  <Person className=\"me-2\" />\n                  Customers ({customers.length})\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"machines\" disabled={!selectedCustomer}>\n                  <HddNetwork className=\"me-2\" />\n                  Machines\n                  {selectedCustomer && (\n                    <Badge bg=\"secondary\" className=\"ms-2\">\n                      {selectedCustomer.name}\n                    </Badge>\n                  )}\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link eventKey=\"files\" disabled={!selectedMachine}>\n                  <FileText className=\"me-2\" />\n                  Files\n                  {selectedMachine && (\n                    <Badge bg=\"secondary\" className=\"ms-2\">\n                      {selectedMachine.name}\n                    </Badge>\n                  )}\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n\n            <Tab.Content>\n              <Tab.Pane eventKey=\"customers\">\n                <Card>\n                  <Card.Header>\n                    <h5>Customer Management</h5>\n                  </Card.Header>\n                  <Card.Body>\n                    {customers.length === 0 ? (\n                      <p className=\"text-muted\">No customers registered yet.</p>\n                    ) : (\n                      <Table responsive>\n                        <thead>\n                          <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Phone</th>\n                            <th>Address</th>\n                            <th>Registered</th>\n                            <th>Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {customers.map((customer, index) => (\n                            <tr key={index}>\n                              <td>{customer.name}</td>\n                              <td>{customer.email}</td>\n                              <td>{customer.phone}</td>\n                              <td>{customer.address}</td>\n                              <td>{formatDate(customer.created_at)}</td>\n                              <td>\n                                <Button\n                                  variant=\"outline-primary\"\n                                  size=\"sm\"\n                                  onClick={() => handleCustomerSelect(customer)}\n                                  title=\"View Customer Machines\"\n                                >\n                                  <HddNetwork className=\"me-1\" />\n                                  View Machines\n                                </Button>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    )}\n                  </Card.Body>\n                </Card>\n              </Tab.Pane>\n\n              <Tab.Pane eventKey=\"machines\">\n                {!selectedCustomer ? (\n                  <Card>\n                    <Card.Body className=\"text-center\">\n                      <HddNetwork size={48} className=\"text-muted mb-3\" />\n                      <h5>No Customer Selected</h5>\n                      <p className=\"text-muted\">\n                        Please select a customer from the Customers tab to view\n                        their machines.\n                      </p>\n                    </Card.Body>\n                  </Card>\n                ) : (\n                  <MachineManagement\n                    customerId={selectedCustomer.customer_id}\n                    isAdmin={true}\n                    onMachineSelect={handleMachineSelect}\n                    selectedMachine={selectedMachine}\n                  />\n                )}\n              </Tab.Pane>\n\n              <Tab.Pane eventKey=\"files\">\n                {!selectedMachine ? (\n                  <Card>\n                    <Card.Body className=\"text-center\">\n                      <FileText size={48} className=\"text-muted mb-3\" />\n                      <h5>No Machine Selected</h5>\n                      <p className=\"text-muted\">\n                        Please select a machine from the Machines tab to manage\n                        its files.\n                      </p>\n                    </Card.Body>\n                  </Card>\n                ) : (\n                  <>\n                    {/* File Upload Section */}\n                    <Card className=\"mb-4\">\n                      <Card.Header>\n                        <h5>\n                          <Upload className=\"me-2\" />\n                          Upload New File to {selectedMachine.name}\n                        </h5>\n                      </Card.Header>\n                      <Card.Body>\n                        <Form onSubmit={handleUpload}>\n                          <Row>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Select File (Max 2MB) *</Form.Label>\n                                <Form.Control\n                                  type=\"file\"\n                                  onChange={handleFileSelect}\n                                  accept=\"*/*\"\n                                  required\n                                />\n                              </Form.Group>\n                            </Col>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Version Number *</Form.Label>\n                                <Form.Control\n                                  type=\"text\"\n                                  placeholder=\"Enter version (e.g., 1, 1.1, beta, etc.)\"\n                                  value={versionNumber}\n                                  onChange={(e) =>\n                                    setVersionNumber(e.target.value)\n                                  }\n                                  required\n                                />\n                                <Form.Text className=\"text-muted\">\n                                  Enter any version identifier (numbers,\n                                  decimals, or text)\n                                </Form.Text>\n                              </Form.Group>\n                            </Col>\n                          </Row>\n                          <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            disabled={\n                              uploading ||\n                              !selectedFile ||\n                              !versionNumber.trim()\n                            }\n                          >\n                            {uploading ? \"Uploading...\" : \"Upload File\"}\n                          </Button>\n                        </Form>\n                      </Card.Body>\n                    </Card>\n\n                    {/* Files List */}\n                    <Card>\n                      <Card.Header>\n                        <h5>\n                          <FileText className=\"me-2\" />\n                          Files for {selectedMachine.name}\n                        </h5>\n                      </Card.Header>\n                      <Card.Body>\n                        {files.length === 0 ? (\n                          <p className=\"text-muted\">\n                            No files uploaded to this machine yet.\n                          </p>\n                        ) : (\n                          <Table responsive>\n                            <thead>\n                              <tr>\n                                <th>Filename</th>\n                                <th>Latest Version</th>\n                                <th>Total Versions</th>\n                                <th>File Size</th>\n                                <th>Uploaded</th>\n                                <th>Actions</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {files.map((file, index) => (\n                                <tr key={index}>\n                                  <td>{file.filename}</td>\n                                  <td>\n                                    <Badge bg=\"primary\">v{file.version}</Badge>\n                                  </td>\n                                  <td>\n                                    <Badge bg=\"info\">\n                                      {file.total_versions}\n                                    </Badge>\n                                  </td>\n                                  <td>{formatFileSize(file.file_size)}</td>\n                                  <td>{formatDate(file.uploaded_at)}</td>\n                                  <td>\n                                    <Button\n                                      variant=\"outline-primary\"\n                                      size=\"sm\"\n                                      className=\"me-1\"\n                                      onClick={() =>\n                                        handleDownload(\n                                          file.filename,\n                                          file.version\n                                        )\n                                      }\n                                    >\n                                      <Download className=\"me-1\" />\n                                      Download\n                                    </Button>\n                                    <Button\n                                      variant=\"outline-secondary\"\n                                      size=\"sm\"\n                                      className=\"me-1\"\n                                      onClick={() =>\n                                        handleViewVersions(file.filename)\n                                      }\n                                    >\n                                      <Eye className=\"me-1\" />\n                                      Versions\n                                    </Button>\n                                  </td>\n                                </tr>\n                              ))}\n                            </tbody>\n                          </Table>\n                        )}\n                      </Card.Body>\n                    </Card>\n                  </>\n                )}\n              </Tab.Pane>\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n\n      {/* Versions Modal */}\n      <Modal\n        show={showVersionsModal}\n        onHide={() => setShowVersionsModal(false)}\n        size=\"lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>File Versions - {selectedFileName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>Version</th>\n                <th>File Size</th>\n                <th>Uploaded</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {selectedFileVersions.map((version, index) => (\n                <tr key={index}>\n                  <td>\n                    <Badge bg=\"primary\">v{version.version}</Badge>\n                  </td>\n                  <td>{formatFileSize(version.file_size)}</td>\n                  <td>{formatDate(version.uploaded_at)}</td>\n                  <td>\n                    <Button\n                      variant=\"outline-primary\"\n                      size=\"sm\"\n                      className=\"me-1\"\n                      onClick={() =>\n                        handleDownload(selectedFileName, version.version)\n                      }\n                    >\n                      <Download className=\"me-1\" />\n                      Download\n                    </Button>\n                    <Button\n                      variant=\"outline-danger\"\n                      size=\"sm\"\n                      onClick={() =>\n                        handleDeleteFile(selectedFileName, version.version)\n                      }\n                    >\n                      <Trash className=\"me-1\" />\n                      Delete\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}