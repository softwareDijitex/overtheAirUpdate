{"ast":null,"code":"var _jsxFileName = \"/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, Button, Table, Alert, Modal, Badge, Row, Col, Container, Nav, Tab, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"customers\");\n  const [showCustomerModal, setShowCustomerModal] = useState(false);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [selectedCustomerFiles, setSelectedCustomerFiles] = useState([]);\n\n  // File upload state\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [versionNumber, setVersionNumber] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [success, setSuccess] = useState(\"\");\n  const [selectedCustomerForUpload, setSelectedCustomerForUpload] = useState(\"\");\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Clear success message after 1 minute or when tab changes\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        setSuccess(\"\");\n      }, 60000); // 1 minute\n\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n\n  // Clear success message when tab changes\n  useEffect(() => {\n    setSuccess(\"\");\n  }, [activeTab]);\n  const fetchData = async () => {\n    try {\n      const customersResponse = await axios.get(\"/api/customers/\");\n      setCustomers(customersResponse.data);\n    } catch (error) {\n      setError(\"Failed to fetch data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleViewCustomerFiles = async customerId => {\n    try {\n      const response = await axios.get(`/api/files/customer/${customerId}`);\n      setSelectedCustomerFiles(response.data);\n      setSelectedCustomer(customers.find(c => c.customer_id === customerId));\n      setShowCustomerModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch customer files\");\n    }\n  };\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n      setVersionNumber(\"1\");\n    }\n  };\n  const handleAdminUpload = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n    if (!selectedCustomerForUpload) {\n      setError(\"Please select a customer\");\n      return;\n    }\n    if (!versionNumber || versionNumber.trim() === \"\") {\n      setError(\"Please enter a version number\");\n      return;\n    }\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"customer_id\", selectedCustomerForUpload);\n    formData.append(\"version\", versionNumber.trim());\n    try {\n      await axios.post(\"/api/files/admin/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      setVersionNumber(\"\");\n      setSelectedCustomerForUpload(\"\");\n      // Reset the file input\n      const fileInput = document.querySelector('input[type=\"file\"]');\n      if (fileInput) {\n        fileInput.value = \"\";\n      }\n      fetchData();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Upload failed\";\n      setError(errorMessage);\n\n      // If the error is about version already existing, suggest a new version\n      if (errorMessage.includes(\"already exists\") && errorMessage.includes(\"version\")) {\n        // Try to suggest next version\n        try {\n          const numVersion = parseFloat(versionNumber);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            setVersionNumber(versionNumber + \"_1\");\n          }\n        } catch {\n          setVersionNumber(versionNumber + \"_1\");\n        }\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleDownloadFile = async (customerId, filename, version) => {\n    try {\n      const response = await axios.get(`/api/files/download/${customerId}/${filename}/${version}`, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `${filename}_v${version}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          onClose: () => setError(\"\"),\n          dismissible: true,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          onClose: () => setSuccess(\"\"),\n          dismissible: true,\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n          activeKey: activeTab,\n          onSelect: k => setActiveTab(k),\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Nav, {\n                variant: \"tabs\",\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                    eventKey: \"customers\",\n                    children: [\"Customers (\", customers.length, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                    eventKey: \"upload\",\n                    children: \"Upload File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n                children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n                  eventKey: \"customers\",\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: \"Customer Management\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                      children: customers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-muted\",\n                        children: \"No customers registered yet.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 27\n                      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n                        responsive: true,\n                        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Customer ID\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 247,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Name\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 248,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Email\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 249,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Phone\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 250,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Address\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 251,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Registered\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 252,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"Actions\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 253,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 246,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 245,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: customers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                              children: /*#__PURE__*/_jsxDEV(Badge, {\n                                bg: \"secondary\",\n                                children: customer.customer_id\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 260,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 259,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: customer.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 264,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: customer.email\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 265,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: customer.phone\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 266,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: customer.address\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 267,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: formatDate(customer.created_at)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 268,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: /*#__PURE__*/_jsxDEV(Button, {\n                                variant: \"outline-primary\",\n                                size: \"sm\",\n                                onClick: () => handleViewCustomerFiles(customer.customer_id),\n                                children: \"View Files\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 270,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 269,\n                              columnNumber: 35\n                            }, this)]\n                          }, index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 258,\n                            columnNumber: 33\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 256,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n                  eventKey: \"upload\",\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: \"Upload File for Customer\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 294,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                      children: /*#__PURE__*/_jsxDEV(Form, {\n                        onSubmit: handleAdminUpload,\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            md: 6,\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                children: \"Select Customer *\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 301,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                                value: selectedCustomerForUpload,\n                                onChange: e => setSelectedCustomerForUpload(e.target.value),\n                                required: true,\n                                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"\",\n                                  children: \"Choose a customer...\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 309,\n                                  columnNumber: 35\n                                }, this), customers.map(customer => /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: customer.customer_id,\n                                  children: [customer.name, \" (\", customer.email, \")\"]\n                                }, customer.customer_id, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 311,\n                                  columnNumber: 37\n                                }, this))]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 302,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 300,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 299,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            md: 6,\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                children: \"Select File (Max 2MB) *\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 323,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                type: \"file\",\n                                onChange: handleFileSelect,\n                                accept: \"*/*\",\n                                required: true\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 324,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 322,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 321,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 298,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Row, {\n                          children: /*#__PURE__*/_jsxDEV(Col, {\n                            md: 6,\n                            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"mb-3\",\n                              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                                children: \"Version Number *\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 336,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                type: \"text\",\n                                placeholder: \"Enter version (e.g., 1, 1.1, beta, etc.)\",\n                                value: versionNumber,\n                                onChange: e => setVersionNumber(e.target.value),\n                                required: true\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 337,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                                className: \"text-muted\",\n                                children: \"Enter any version identifier (numbers, decimals, or text)\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 346,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 335,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 334,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 333,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"primary\",\n                          type: \"submit\",\n                          disabled: uploading || !selectedFile || !selectedCustomerForUpload || !versionNumber.trim(),\n                          children: uploading ? \"Uploading...\" : \"Upload File\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 353,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 297,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showCustomerModal,\n      onHide: () => setShowCustomerModal(false),\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Files for \", selectedCustomer === null || selectedCustomer === void 0 ? void 0 : selectedCustomer.name, \" (\", selectedCustomer === null || selectedCustomer === void 0 ? void 0 : selectedCustomer.email, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          size: \"sm\",\n          onClick: () => {\n            setSelectedCustomerForUpload(selectedCustomer === null || selectedCustomer === void 0 ? void 0 : selectedCustomer.customer_id);\n            setActiveTab(\"upload\");\n            setShowCustomerModal(false);\n          },\n          children: \"Upload File for This Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: selectedCustomerFiles.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"No files uploaded by this customer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Filename\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Latest Version\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"File Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Uploaded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: selectedCustomerFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: file.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"primary\",\n                  children: [\"v\", file.latest_version]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatFileSize(file.file_size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(file.uploaded_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  size: \"sm\",\n                  onClick: () => handleDownloadFile(selectedCustomer.customer_id, file.filename, file.latest_version),\n                  children: \"Download Latest\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"anWLLeUrEpVnISoOuSC8bD/Mio8=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","Button","Table","Alert","Modal","Badge","Row","Col","Container","Nav","Tab","Form","jsxDEV","_jsxDEV","AdminDashboard","_s","customers","setCustomers","loading","setLoading","error","setError","activeTab","setActiveTab","showCustomerModal","setShowCustomerModal","selectedCustomer","setSelectedCustomer","selectedCustomerFiles","setSelectedCustomerFiles","selectedFile","setSelectedFile","versionNumber","setVersionNumber","uploading","setUploading","success","setSuccess","selectedCustomerForUpload","setSelectedCustomerForUpload","fetchData","timer","setTimeout","clearTimeout","customersResponse","get","data","handleViewCustomerFiles","customerId","response","find","c","customer_id","handleFileSelect","e","file","target","files","size","handleAdminUpload","preventDefault","trim","formData","FormData","append","post","headers","fileInput","document","querySelector","value","_error$response","_error$response$data","errorMessage","includes","numVersion","parseFloat","isNaN","toString","handleDownloadFile","filename","version","responseType","url","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","remove","formatFileSize","bytes","k","sizes","i","Math","floor","log","pow","toFixed","formatDate","dateString","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","variant","onClose","dismissible","activeKey","onSelect","Item","Link","eventKey","length","Content","Pane","Header","Body","responsive","map","customer","index","bg","name","email","phone","address","created_at","onClick","onSubmit","md","Group","Label","Select","onChange","required","Control","type","accept","placeholder","Text","disabled","show","onHide","closeButton","Title","latest_version","file_size","uploaded_at","_c","$RefreshReg$"],"sources":["/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Card,\n  Button,\n  Table,\n  Alert,\n  Modal,\n  Badge,\n  Row,\n  Col,\n  Container,\n  Nav,\n  Tab,\n  Form,\n} from \"react-bootstrap\";\n\nconst AdminDashboard = () => {\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"customers\");\n  const [showCustomerModal, setShowCustomerModal] = useState(false);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [selectedCustomerFiles, setSelectedCustomerFiles] = useState([]);\n\n  // File upload state\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [versionNumber, setVersionNumber] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [success, setSuccess] = useState(\"\");\n  const [selectedCustomerForUpload, setSelectedCustomerForUpload] =\n    useState(\"\");\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Clear success message after 1 minute or when tab changes\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        setSuccess(\"\");\n      }, 60000); // 1 minute\n\n      return () => clearTimeout(timer);\n    }\n  }, [success]);\n\n  // Clear success message when tab changes\n  useEffect(() => {\n    setSuccess(\"\");\n  }, [activeTab]);\n\n  const fetchData = async () => {\n    try {\n      const customersResponse = await axios.get(\"/api/customers/\");\n      setCustomers(customersResponse.data);\n    } catch (error) {\n      setError(\"Failed to fetch data\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleViewCustomerFiles = async (customerId) => {\n    try {\n      const response = await axios.get(`/api/files/customer/${customerId}`);\n      setSelectedCustomerFiles(response.data);\n      setSelectedCustomer(customers.find((c) => c.customer_id === customerId));\n      setShowCustomerModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch customer files\");\n    }\n  };\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n      setVersionNumber(\"1\");\n    }\n  };\n\n  const handleAdminUpload = async (e) => {\n    e.preventDefault();\n\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n\n    if (!selectedCustomerForUpload) {\n      setError(\"Please select a customer\");\n      return;\n    }\n\n    if (!versionNumber || versionNumber.trim() === \"\") {\n      setError(\"Please enter a version number\");\n      return;\n    }\n\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"customer_id\", selectedCustomerForUpload);\n    formData.append(\"version\", versionNumber.trim());\n\n    try {\n      await axios.post(\"/api/files/admin/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      setVersionNumber(\"\");\n      setSelectedCustomerForUpload(\"\");\n      // Reset the file input\n      const fileInput = document.querySelector('input[type=\"file\"]');\n      if (fileInput) {\n        fileInput.value = \"\";\n      }\n      fetchData();\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || \"Upload failed\";\n      setError(errorMessage);\n\n      // If the error is about version already existing, suggest a new version\n      if (\n        errorMessage.includes(\"already exists\") &&\n        errorMessage.includes(\"version\")\n      ) {\n        // Try to suggest next version\n        try {\n          const numVersion = parseFloat(versionNumber);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            setVersionNumber(versionNumber + \"_1\");\n          }\n        } catch {\n          setVersionNumber(versionNumber + \"_1\");\n        }\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleDownloadFile = async (customerId, filename, version) => {\n    try {\n      const response = await axios.get(\n        `/api/files/download/${customerId}/${filename}/${version}`,\n        { responseType: \"blob\" }\n      );\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `${filename}_v${version}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  if (loading) {\n    return <div className=\"text-center\">Loading...</div>;\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          <h2 className=\"mb-4\">Admin Dashboard</h2>\n\n          {error && (\n            <Alert variant=\"danger\" onClose={() => setError(\"\")} dismissible>\n              {error}\n            </Alert>\n          )}\n\n          {success && (\n            <Alert variant=\"success\" onClose={() => setSuccess(\"\")} dismissible>\n              {success}\n            </Alert>\n          )}\n\n          <Tab.Container\n            activeKey={activeTab}\n            onSelect={(k) => setActiveTab(k)}\n          >\n            <Row>\n              <Col>\n                <Nav variant=\"tabs\" className=\"mb-4\">\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"customers\">\n                      Customers ({customers.length})\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"upload\">Upload File</Nav.Link>\n                  </Nav.Item>\n                </Nav>\n\n                <Tab.Content>\n                  <Tab.Pane eventKey=\"customers\">\n                    <Card>\n                      <Card.Header>\n                        <h5>Customer Management</h5>\n                      </Card.Header>\n                      <Card.Body>\n                        {customers.length === 0 ? (\n                          <p className=\"text-muted\">\n                            No customers registered yet.\n                          </p>\n                        ) : (\n                          <Table responsive>\n                            <thead>\n                              <tr>\n                                <th>Customer ID</th>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Phone</th>\n                                <th>Address</th>\n                                <th>Registered</th>\n                                <th>Actions</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {customers.map((customer, index) => (\n                                <tr key={index}>\n                                  <td>\n                                    <Badge bg=\"secondary\">\n                                      {customer.customer_id}\n                                    </Badge>\n                                  </td>\n                                  <td>{customer.name}</td>\n                                  <td>{customer.email}</td>\n                                  <td>{customer.phone}</td>\n                                  <td>{customer.address}</td>\n                                  <td>{formatDate(customer.created_at)}</td>\n                                  <td>\n                                    <Button\n                                      variant=\"outline-primary\"\n                                      size=\"sm\"\n                                      onClick={() =>\n                                        handleViewCustomerFiles(\n                                          customer.customer_id\n                                        )\n                                      }\n                                    >\n                                      View Files\n                                    </Button>\n                                  </td>\n                                </tr>\n                              ))}\n                            </tbody>\n                          </Table>\n                        )}\n                      </Card.Body>\n                    </Card>\n                  </Tab.Pane>\n\n                  <Tab.Pane eventKey=\"upload\">\n                    <Card>\n                      <Card.Header>\n                        <h5>Upload File for Customer</h5>\n                      </Card.Header>\n                      <Card.Body>\n                        <Form onSubmit={handleAdminUpload}>\n                          <Row>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Select Customer *</Form.Label>\n                                <Form.Select\n                                  value={selectedCustomerForUpload}\n                                  onChange={(e) =>\n                                    setSelectedCustomerForUpload(e.target.value)\n                                  }\n                                  required\n                                >\n                                  <option value=\"\">Choose a customer...</option>\n                                  {customers.map((customer) => (\n                                    <option\n                                      key={customer.customer_id}\n                                      value={customer.customer_id}\n                                    >\n                                      {customer.name} ({customer.email})\n                                    </option>\n                                  ))}\n                                </Form.Select>\n                              </Form.Group>\n                            </Col>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Select File (Max 2MB) *</Form.Label>\n                                <Form.Control\n                                  type=\"file\"\n                                  onChange={handleFileSelect}\n                                  accept=\"*/*\"\n                                  required\n                                />\n                              </Form.Group>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col md={6}>\n                              <Form.Group className=\"mb-3\">\n                                <Form.Label>Version Number *</Form.Label>\n                                <Form.Control\n                                  type=\"text\"\n                                  placeholder=\"Enter version (e.g., 1, 1.1, beta, etc.)\"\n                                  value={versionNumber}\n                                  onChange={(e) =>\n                                    setVersionNumber(e.target.value)\n                                  }\n                                  required\n                                />\n                                <Form.Text className=\"text-muted\">\n                                  Enter any version identifier (numbers,\n                                  decimals, or text)\n                                </Form.Text>\n                              </Form.Group>\n                            </Col>\n                          </Row>\n                          <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            disabled={\n                              uploading ||\n                              !selectedFile ||\n                              !selectedCustomerForUpload ||\n                              !versionNumber.trim()\n                            }\n                          >\n                            {uploading ? \"Uploading...\" : \"Upload File\"}\n                          </Button>\n                        </Form>\n                      </Card.Body>\n                    </Card>\n                  </Tab.Pane>\n                </Tab.Content>\n              </Col>\n            </Row>\n          </Tab.Container>\n        </Col>\n      </Row>\n\n      {/* Customer Files Modal */}\n      <Modal\n        show={showCustomerModal}\n        onHide={() => setShowCustomerModal(false)}\n        size=\"lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Files for {selectedCustomer?.name} ({selectedCustomer?.email})\n          </Modal.Title>\n          <Button\n            variant=\"outline-success\"\n            size=\"sm\"\n            onClick={() => {\n              setSelectedCustomerForUpload(selectedCustomer?.customer_id);\n              setActiveTab(\"upload\");\n              setShowCustomerModal(false);\n            }}\n          >\n            Upload File for This Customer\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          {selectedCustomerFiles.length === 0 ? (\n            <p className=\"text-muted\">No files uploaded by this customer.</p>\n          ) : (\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th>Filename</th>\n                  <th>Latest Version</th>\n                  <th>File Size</th>\n                  <th>Uploaded</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {selectedCustomerFiles.map((file, index) => (\n                  <tr key={index}>\n                    <td>{file.filename}</td>\n                    <td>\n                      <Badge bg=\"primary\">v{file.latest_version}</Badge>\n                    </td>\n                    <td>{formatFileSize(file.file_size)}</td>\n                    <td>{formatDate(file.uploaded_at)}</td>\n                    <td>\n                      <Button\n                        variant=\"outline-primary\"\n                        size=\"sm\"\n                        onClick={() =>\n                          handleDownloadFile(\n                            selectedCustomer.customer_id,\n                            file.filename,\n                            file.latest_version\n                          )\n                        }\n                      >\n                        Download Latest\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}