{"ast":null,"code":"var _jsxFileName = \"/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\nimport { Card, Button, Form, Table, Alert, Modal, Badge, Row, Col, Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerDashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [versionNumber, setVersionNumber] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [showVersionsModal, setShowVersionsModal] = useState(false);\n  const [selectedFileVersions, setSelectedFileVersions] = useState([]);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get(\"/api/files/my-files\");\n      setFiles(response.data);\n    } catch (error) {\n      setError(\"Failed to fetch files\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n\n      // Auto-suggest next version number if file with same name exists\n      const existingFile = files.find(f => f.filename === file.name);\n      if (existingFile) {\n        // Try to increment the latest version\n        const latestVersion = existingFile.latest_version;\n        try {\n          // If it's a number, increment it\n          const numVersion = parseFloat(latestVersion);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            // If it's a string, append a number\n            setVersionNumber(latestVersion + \"_1\");\n          }\n        } catch {\n          setVersionNumber(latestVersion + \"_1\");\n        }\n      } else {\n        setVersionNumber(\"1\");\n      }\n    }\n  };\n  const checkVersionExists = async (filename, version) => {\n    try {\n      const response = await axios.get(`/api/files/versions/${user.customer_id}/${filename}`);\n      const versions = response.data;\n      return versions.some(v => v.version === version);\n    } catch (error) {\n      return false;\n    }\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n    if (!versionNumber || versionNumber.trim() === \"\") {\n      setError(\"Please enter a version number\");\n      return;\n    }\n    const version = versionNumber.trim();\n    await performUpload(selectedFile, version);\n  };\n  const performUpload = async (file, version) => {\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"version\", version);\n    try {\n      await axios.post(\"/api/files/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      setVersionNumber(\"\");\n      // Reset the file input\n      const fileInput = document.querySelector('input[type=\"file\"]');\n      if (fileInput) {\n        fileInput.value = \"\";\n      }\n      fetchFiles();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Upload failed\";\n      setError(errorMessage);\n\n      // If the error is about version already existing, suggest a new version\n      if (errorMessage.includes(\"already exists\") && errorMessage.includes(\"version\")) {\n        // Try to suggest next version\n        try {\n          const numVersion = parseFloat(version);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            setVersionNumber(version + \"_1\");\n          }\n        } catch {\n          setVersionNumber(version + \"_1\");\n        }\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleDownload = async (filename, version) => {\n    try {\n      const response = await axios.get(`/api/files/download/${user.customer_id}/${filename}/${version}`, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `${filename}_v${version}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n  const handleViewVersions = async filename => {\n    try {\n      const response = await axios.get(`/api/files/versions/${user.customer_id}/${filename}`);\n      setSelectedFileVersions(response.data);\n      setSelectedFileName(filename);\n      setShowVersionsModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch versions\");\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"Customer Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          onClose: () => setError(\"\"),\n          dismissible: true,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          onClose: () => setSuccess(\"\"),\n          dismissible: true,\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Upload New File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleUpload,\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Select File (Max 2MB) *\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"file\",\n                      onChange: handleFileSelect,\n                      accept: \"*/*\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Version Number *\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Enter version (e.g., 1, 1.1, beta, etc.)\",\n                      value: versionNumber,\n                      onChange: e => setVersionNumber(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                      className: \"text-muted\",\n                      children: \"Enter any version identifier (numbers, decimals, or text)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                disabled: uploading || !selectedFile || !versionNumber.trim(),\n                children: uploading ? \"Uploading...\" : \"Upload File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"My Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: files.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: \"No files uploaded yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Table, {\n              responsive: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Filename\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Latest Version\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"File Size\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Uploaded\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: file.filename\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Badge, {\n                      bg: \"primary\",\n                      children: [\"v\", file.latest_version]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatFileSize(file.file_size)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatDate(file.uploaded_at)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-primary\",\n                      size: \"sm\",\n                      className: \"me-2\",\n                      onClick: () => handleDownload(file.filename, file.latest_version),\n                      children: \"Download Latest\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-secondary\",\n                      size: \"sm\",\n                      onClick: () => handleViewVersions(file.filename),\n                      children: \"View Versions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showVersionsModal,\n      onHide: () => setShowVersionsModal(false),\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"File Versions - \", selectedFileName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Version\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"File Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Uploaded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: selectedFileVersions.map((version, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"primary\",\n                  children: [\"v\", version.version]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatFileSize(version.file_size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(version.uploaded_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  size: \"sm\",\n                  onClick: () => handleDownload(selectedFileName, version.version),\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerDashboard, \"pDI7IESyn+aqzYv3wsi182FEoHo=\", false, function () {\n  return [useAuth];\n});\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","axios","Card","Button","Form","Table","Alert","Modal","Badge","Row","Col","Container","jsxDEV","_jsxDEV","CustomerDashboard","_s","user","files","setFiles","selectedFile","setSelectedFile","versionNumber","setVersionNumber","uploading","setUploading","loading","setLoading","error","setError","success","setSuccess","showVersionsModal","setShowVersionsModal","selectedFileVersions","setSelectedFileVersions","selectedFileName","setSelectedFileName","fetchFiles","response","get","data","handleFileSelect","e","file","target","size","existingFile","find","f","filename","name","latestVersion","latest_version","numVersion","parseFloat","isNaN","toString","checkVersionExists","version","customer_id","versions","some","v","handleUpload","preventDefault","trim","performUpload","formData","FormData","append","post","headers","fileInput","document","querySelector","value","_error$response","_error$response$data","errorMessage","includes","handleDownload","responseType","url","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","remove","handleViewVersions","formatFileSize","bytes","k","sizes","i","Math","floor","log","pow","toFixed","formatDate","dateString","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClose","dismissible","Header","Body","onSubmit","md","Group","Label","Control","type","onChange","accept","required","placeholder","Text","disabled","length","responsive","map","index","bg","file_size","uploaded_at","onClick","show","onHide","closeButton","Title","_c","$RefreshReg$"],"sources":["/Users/nidhi/Documents/Inoweave/OnTheFlyUpdate/Code/cursor/frontend/src/components/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport axios from \"axios\";\nimport {\n  Card,\n  Button,\n  Form,\n  Table,\n  Alert,\n  Modal,\n  Badge,\n  Row,\n  Col,\n  Container,\n} from \"react-bootstrap\";\n\nconst CustomerDashboard = () => {\n  const { user } = useAuth();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [versionNumber, setVersionNumber] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [showVersionsModal, setShowVersionsModal] = useState(false);\n  const [selectedFileVersions, setSelectedFileVersions] = useState([]);\n  const [selectedFileName, setSelectedFileName] = useState(\"\");\n\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get(\"/api/files/my-files\");\n      setFiles(response.data);\n    } catch (error) {\n      setError(\"Failed to fetch files\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 2 * 1024 * 1024) {\n        // 2MB limit\n        setError(\"File size must be less than 2MB\");\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setError(\"\");\n\n      // Auto-suggest next version number if file with same name exists\n      const existingFile = files.find((f) => f.filename === file.name);\n      if (existingFile) {\n        // Try to increment the latest version\n        const latestVersion = existingFile.latest_version;\n        try {\n          // If it's a number, increment it\n          const numVersion = parseFloat(latestVersion);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            // If it's a string, append a number\n            setVersionNumber(latestVersion + \"_1\");\n          }\n        } catch {\n          setVersionNumber(latestVersion + \"_1\");\n        }\n      } else {\n        setVersionNumber(\"1\");\n      }\n    }\n  };\n\n  const checkVersionExists = async (filename, version) => {\n    try {\n      const response = await axios.get(\n        `/api/files/versions/${user.customer_id}/${filename}`\n      );\n      const versions = response.data;\n      return versions.some((v) => v.version === version);\n    } catch (error) {\n      return false;\n    }\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n\n    if (!selectedFile) {\n      setError(\"Please select a file\");\n      return;\n    }\n\n    if (!versionNumber || versionNumber.trim() === \"\") {\n      setError(\"Please enter a version number\");\n      return;\n    }\n\n    const version = versionNumber.trim();\n    await performUpload(selectedFile, version);\n  };\n\n  const performUpload = async (file, version) => {\n    setUploading(true);\n    setError(\"\");\n    setSuccess(\"\");\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"version\", version);\n\n    try {\n      await axios.post(\"/api/files/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      setSuccess(\"File uploaded successfully!\");\n      setSelectedFile(null);\n      setVersionNumber(\"\");\n      // Reset the file input\n      const fileInput = document.querySelector('input[type=\"file\"]');\n      if (fileInput) {\n        fileInput.value = \"\";\n      }\n      fetchFiles();\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || \"Upload failed\";\n      setError(errorMessage);\n\n      // If the error is about version already existing, suggest a new version\n      if (\n        errorMessage.includes(\"already exists\") &&\n        errorMessage.includes(\"version\")\n      ) {\n        // Try to suggest next version\n        try {\n          const numVersion = parseFloat(version);\n          if (!isNaN(numVersion)) {\n            setVersionNumber((numVersion + 1).toString());\n          } else {\n            setVersionNumber(version + \"_1\");\n          }\n        } catch {\n          setVersionNumber(version + \"_1\");\n        }\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleDownload = async (filename, version) => {\n    try {\n      const response = await axios.get(\n        `/api/files/download/${user.customer_id}/${filename}/${version}`,\n        { responseType: \"blob\" }\n      );\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `${filename}_v${version}`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      setError(\"Download failed\");\n    }\n  };\n\n  const handleViewVersions = async (filename) => {\n    try {\n      const response = await axios.get(\n        `/api/files/versions/${user.customer_id}/${filename}`\n      );\n      setSelectedFileVersions(response.data);\n      setSelectedFileName(filename);\n      setShowVersionsModal(true);\n    } catch (error) {\n      setError(\"Failed to fetch versions\");\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  if (loading) {\n    return <div className=\"text-center\">Loading...</div>;\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h2 className=\"mb-4\">Customer Dashboard</h2>\n\n          {error && (\n            <Alert variant=\"danger\" onClose={() => setError(\"\")} dismissible>\n              {error}\n            </Alert>\n          )}\n          {success && (\n            <Alert variant=\"success\" onClose={() => setSuccess(\"\")} dismissible>\n              {success}\n            </Alert>\n          )}\n\n          {/* File Upload Section */}\n          <Card className=\"mb-4\">\n            <Card.Header>\n              <h5>Upload New File</h5>\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={handleUpload}>\n                <Row>\n                  <Col md={6}>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>Select File (Max 2MB) *</Form.Label>\n                      <Form.Control\n                        type=\"file\"\n                        onChange={handleFileSelect}\n                        accept=\"*/*\"\n                        required\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col md={6}>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>Version Number *</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter version (e.g., 1, 1.1, beta, etc.)\"\n                        value={versionNumber}\n                        onChange={(e) => setVersionNumber(e.target.value)}\n                        required\n                      />\n                      <Form.Text className=\"text-muted\">\n                        Enter any version identifier (numbers, decimals, or\n                        text)\n                      </Form.Text>\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  disabled={uploading || !selectedFile || !versionNumber.trim()}\n                >\n                  {uploading ? \"Uploading...\" : \"Upload File\"}\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n\n          {/* Files List */}\n          <Card>\n            <Card.Header>\n              <h5>My Files</h5>\n            </Card.Header>\n            <Card.Body>\n              {files.length === 0 ? (\n                <p className=\"text-muted\">No files uploaded yet.</p>\n              ) : (\n                <Table responsive>\n                  <thead>\n                    <tr>\n                      <th>Filename</th>\n                      <th>Latest Version</th>\n                      <th>File Size</th>\n                      <th>Uploaded</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {files.map((file, index) => (\n                      <tr key={index}>\n                        <td>{file.filename}</td>\n                        <td>\n                          <Badge bg=\"primary\">v{file.latest_version}</Badge>\n                        </td>\n                        <td>{formatFileSize(file.file_size)}</td>\n                        <td>{formatDate(file.uploaded_at)}</td>\n                        <td>\n                          <Button\n                            variant=\"outline-primary\"\n                            size=\"sm\"\n                            className=\"me-2\"\n                            onClick={() =>\n                              handleDownload(file.filename, file.latest_version)\n                            }\n                          >\n                            Download Latest\n                          </Button>\n                          <Button\n                            variant=\"outline-secondary\"\n                            size=\"sm\"\n                            onClick={() => handleViewVersions(file.filename)}\n                          >\n                            View Versions\n                          </Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Versions Modal */}\n      <Modal\n        show={showVersionsModal}\n        onHide={() => setShowVersionsModal(false)}\n        size=\"lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>File Versions - {selectedFileName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>Version</th>\n                <th>File Size</th>\n                <th>Uploaded</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {selectedFileVersions.map((version, index) => (\n                <tr key={index}>\n                  <td>\n                    <Badge bg=\"primary\">v{version.version}</Badge>\n                  </td>\n                  <td>{formatFileSize(version.file_size)}</td>\n                  <td>{formatDate(version.uploaded_at)}</td>\n                  <td>\n                    <Button\n                      variant=\"outline-primary\"\n                      size=\"sm\"\n                      onClick={() =>\n                        handleDownload(selectedFileName, version.version)\n                      }\n                    >\n                      Download\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default CustomerDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}