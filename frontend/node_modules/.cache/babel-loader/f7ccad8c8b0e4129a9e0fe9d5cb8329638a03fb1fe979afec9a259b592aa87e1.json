{"ast":null,"code":"var _jsxFileName = \"/Users/atharvajadhav/Desktop/Software Digitex/overtheAirUpdate/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n\n// Function to decode JWT token\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst decodeToken = token => {\n  try {\n    const base64Url = token.split(\".\")[1];\n    const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const jsonPayload = decodeURIComponent(atob(base64).split(\"\").map(function (c) {\n      return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(\"\"));\n    return JSON.parse(jsonPayload);\n  } catch (error) {\n    console.error(\"Error decoding token:\", error);\n    return null;\n  }\n};\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n\n  // Set up axios interceptor to include token in all requests\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(config => {\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Cleanup interceptor on unmount\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/customers/login`, {\n        email,\n        password\n      });\n      if (response.data.token) {\n        setToken(response.data.token);\n        // Decode token to get user info\n        const decodedToken = decodeToken(response.data.token);\n        if (decodedToken) {\n          setUser({\n            ...response.data,\n            customer_id: decodedToken.customer_id,\n            email: decodedToken.email,\n            is_admin: decodedToken.is_admin\n          });\n        } else {\n          setUser(response.data);\n        }\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: \"Login failed\"\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Login failed\"\n      };\n    }\n  };\n  const adminLogin = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/customers/admin/login`, {\n        email,\n        password\n      });\n      if (response.data.token) {\n        setToken(response.data.token);\n        // Decode token to get user info including is_admin\n        const decodedToken = decodeToken(response.data.token);\n        if (decodedToken) {\n          setUser({\n            ...response.data,\n            customer_id: decodedToken.customer_id,\n            email: decodedToken.email,\n            is_admin: decodedToken.is_admin\n          });\n        } else {\n          setUser(response.data);\n        }\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: \"Admin login failed\"\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data, _error$response4, _error$response4$data;\n      console.error(\"Admin login error:\", error);\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Admin login failed\"\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/customers/register`, userData);\n      if (response.data.token) {\n        setToken(response.data.token);\n        // Decode token to get user info\n        const decodedToken = decodeToken(response.data.token);\n        if (decodedToken) {\n          setUser({\n            ...response.data,\n            customer_id: decodedToken.customer_id,\n            email: decodedToken.email,\n            is_admin: decodedToken.is_admin\n          });\n        } else {\n          setUser(response.data);\n        }\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: \"Registration failed\"\n        };\n      }\n    } catch (error) {\n      var _error$response5, _error$response5$data, _error$response6, _error$response6$data;\n      console.error(\"Registration error:\", error);\n      return {\n        success: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.detail) || ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || \"Registration failed\"\n      };\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n  };\n  const value = {\n    token,\n    user,\n    login,\n    adminLogin,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"lTc4oKMP/OVEHM3fW8W5olMCd7E=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","API_BASE_URL","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","decodeToken","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","error","console","AuthProvider","children","_s2","setToken","user","setUser","interceptor","interceptors","request","use","config","headers","Authorization","Promise","reject","eject","login","email","password","response","post","data","decodedToken","customer_id","is_admin","success","_error$response","_error$response$data","_error$response2","_error$response2$data","detail","message","adminLogin","_error$response3","_error$response3$data","_error$response4","_error$response4$data","register","userData","_error$response5","_error$response5$data","_error$response6","_error$response6$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/atharvajadhav/Desktop/Software Digitex/overtheAirUpdate/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"../config\";\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\n// Function to decode JWT token\nconst decodeToken = (token) => {\n  try {\n    const base64Url = token.split(\".\")[1];\n    const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const jsonPayload = decodeURIComponent(\n      atob(base64)\n        .split(\"\")\n        .map(function (c) {\n          return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join(\"\")\n    );\n    return JSON.parse(jsonPayload);\n  } catch (error) {\n    console.error(\"Error decoding token:\", error);\n    return null;\n  }\n};\n\nexport function AuthProvider({ children }) {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n\n  // Set up axios interceptor to include token in all requests\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(\n      (config) => {\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n\n    // Cleanup interceptor on unmount\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, [token]);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/customers/login`, {\n        email,\n        password,\n      });\n\n      if (response.data.token) {\n        setToken(response.data.token);\n        // Decode token to get user info\n        const decodedToken = decodeToken(response.data.token);\n        if (decodedToken) {\n          setUser({\n            ...response.data,\n            customer_id: decodedToken.customer_id,\n            email: decodedToken.email,\n            is_admin: decodedToken.is_admin,\n          });\n        } else {\n          setUser(response.data);\n        }\n        return { success: true };\n      } else {\n        return { success: false, error: \"Login failed\" };\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        error: error.response?.data?.detail || error.response?.data?.message || \"Login failed\",\n      };\n    }\n  };\n\n  const adminLogin = async (email, password) => {\n    try {\n      const response = await axios.post(\n        `${API_BASE_URL}/api/customers/admin/login`,\n        {\n          email,\n          password,\n        }\n      );\n\n      if (response.data.token) {\n        setToken(response.data.token);\n        // Decode token to get user info including is_admin\n        const decodedToken = decodeToken(response.data.token);\n        if (decodedToken) {\n          setUser({\n            ...response.data,\n            customer_id: decodedToken.customer_id,\n            email: decodedToken.email,\n            is_admin: decodedToken.is_admin,\n          });\n        } else {\n          setUser(response.data);\n        }\n        return { success: true };\n      } else {\n        return { success: false, error: \"Admin login failed\" };\n      }\n    } catch (error) {\n      console.error(\"Admin login error:\", error);\n      return {\n        success: false,\n        error: error.response?.data?.detail || error.response?.data?.message || \"Admin login failed\",\n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await axios.post(\n        `${API_BASE_URL}/api/customers/register`,\n        userData\n      );\n\n      if (response.data.token) {\n        setToken(response.data.token);\n        // Decode token to get user info\n        const decodedToken = decodeToken(response.data.token);\n        if (decodedToken) {\n          setUser({\n            ...response.data,\n            customer_id: decodedToken.customer_id,\n            email: decodedToken.email,\n            is_admin: decodedToken.is_admin,\n          });\n        } else {\n          setUser(response.data);\n        }\n        return { success: true };\n      } else {\n        return { success: false, error: \"Registration failed\" };\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      return {\n        success: false,\n        error: error.response?.data?.detail || error.response?.data?.message || \"Registration failed\",\n      };\n    }\n  };\n\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n  };\n\n  const value = {\n    token,\n    user,\n    login,\n    adminLogin,\n    register,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}